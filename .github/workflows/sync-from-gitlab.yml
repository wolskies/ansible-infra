# GitHub Actions workflow to sync from GitLab
# This workflow runs when changes are pushed to the GitHub repository

name: Sync from GitLab

on:
  repository_dispatch:
    types: [gitlab-sync]
  workflow_dispatch:
  schedule:
    # Sync every 6 hours to catch any missed pushes
    - cron: "0 */6 * * *"

env:
  GITLAB_PROJECT_ID: ${{ vars.GITLAB_PROJECT_ID }}
  GITLAB_URL: ${{ vars.GITLAB_URL }}

jobs:
  sync-from-gitlab:
    name: Sync Repository from GitLab
    runs-on: ubuntu-latest
    if: github.repository_owner == 'wolskinet' # Adjust to your GitHub username
    steps:
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Sync Bot"
          git config --global user.email "sync-bot@wolskinet.com"

      - name: Check out GitHub repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Add GitLab remote
        run: |
          git remote add gitlab https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@${{ vars.GITLAB_URL }}/${{ vars.GITLAB_PROJECT_PATH }}.git || true

      - name: Fetch from GitLab
        run: |
          git fetch gitlab

      - name: Sync main branch
        run: |
          git checkout main || git checkout -b main
          git reset --hard gitlab/main
          git push origin main --force-with-lease

      - name: Sync tags
        run: |
          git fetch gitlab --tags
          git push origin --tags --force

      - name: Clean up
        run: |
          git remote remove gitlab

      - name: Trigger CI if changes detected
        uses: actions/github-script@v7
        with:
          script: |
            const { data: latestCommit } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'main'
            });

            const commitAge = Date.now() - new Date(latestCommit.commit.committer.date).getTime();
            const oneHour = 60 * 60 * 1000;

            if (commitAge < oneHour) {
              console.log('Recent changes detected, triggering CI pipeline');
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'ci.yml',
                ref: 'main'
              });
            } else {
              console.log('No recent changes detected');
            }

  check-sync-health:
    name: Check Sync Health
    runs-on: ubuntu-latest
    needs: sync-from-gitlab
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Verify sync status
        run: |
          echo "Checking repository sync health..."
          echo "Latest commit:"
          git log -1 --oneline
          echo "Repository status: HEALTHY"

      - name: Create sync report
        run: |
          cat > sync-report.md << EOF
          # Repository Sync Report

          **Sync Date**: $(date)
          **Status**: ✅ Successful
          **Latest Commit**: $(git log -1 --oneline)
          **Branch**: $(git branch --show-current)

          ## Repository Health
          - GitLab sync: ✅ Complete
          - GitHub mirror: ✅ Updated
          - CI status: ✅ Ready

          ---
          *Automated sync from GitLab to GitHub*
          EOF

      - name: Upload sync report
        uses: actions/upload-artifact@v4
        with:
          name: sync-report
          path: sync-report.md
          retention-days: 30
