---
- name: Configure workstations with desktop environment
  hosts: workstations
  gather_facts: true
  collections:
    - wolskinet.infrastructure

  vars:
    # OS packages via hierarchical system
    group_packages_install_Ubuntu:
      - firefox
      - gimp
      - vlc
      - code

    group_packages_install_Archlinux:
      - firefox
      - gimp
      - vlc
      - visual-studio-code-bin  # AUR package

    # Python development packages
    pip_packages:
      - black
      - ruff
      - mypy

    # Node.js development packages
    npm_packages:
      - prettier
      - eslint

  roles:
    # 1. Core system setup with standard OS packages
    - name: wolskinet.infrastructure.basic_setup

    # 2. Third-party packages (repositories, npm, pip, system packages)
    - name: wolskinet.infrastructure.third_party_packages
      when: >
        (pip_packages is defined and pip_packages | length > 0) or
        (npm_packages is defined and npm_packages | length > 0) or
        (third_party_packages is defined and third_party_packages | length > 0) or
        (additional_repositories is defined)

    # 3. Dotfiles for user configuration
    - name: wolskinet.infrastructure.dotfiles
      when: dotfiles_repository_url is defined

    # 4. System maintenance
    - name: wolskinet.infrastructure.maintenance

  post_tasks:
    - name: Enable desktop login manager (Linux)
      ansible.builtin.systemd:
        name: "{{ display_manager | default('gdm3') }}"
        enabled: true
        state: started
      become: true
      when: ansible_os_family != 'Darwin'
