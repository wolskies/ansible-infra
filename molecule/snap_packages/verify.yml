---
- name: Verify snap package management functionality
  hosts: all
  become: true
  gather_facts: true
  tasks:
    # Test 1: Verify snapd is still installed (we didn't remove system packages)
    - name: Check if snapd is installed
      ansible.builtin.package_facts:
        manager: auto

    - name: Verify snapd system package exists
      ansible.builtin.assert:
        that:
          - "'snapd' in ansible_facts.packages"
        fail_msg: "snapd should still be installed"
        success_msg: "snapd system package is present"

    # Test 2: Verify no snap packages are installed (removed during test)
    - name: List installed snap packages
      ansible.builtin.shell: snap list | tail -n +2 | awk '{print $1}'
      register: installed_snaps
      changed_when: false
      failed_when: false

    - name: Verify snap packages were removed
      ansible.builtin.assert:
        that:
          - installed_snaps.stdout_lines | length == 0 or 'hello-world' not in installed_snaps.stdout_lines
        fail_msg: "Snap packages should have been removed"
        success_msg: "Snap packages were successfully removed"

    # Test 3: Verify snapd services are disabled (but may still be running)
    - name: Check snapd service status
      ansible.builtin.systemd:
        name: snapd.service
      register: snapd_service
      failed_when: false

    - name: Display service status for debugging
      ansible.builtin.debug:
        msg: |
          snapd.service enabled: {{ snapd_service.status.UnitFileState | default('unknown') }}
          snapd.service active: {{ snapd_service.status.ActiveState | default('unknown') }}

    # Test 4: Verify snap command still works (system not purged)
    - name: Test snap command functionality
      ansible.builtin.command: snap --version
      register: snap_version
      changed_when: false
      failed_when: false

    - name: Verify snap command works
      ansible.builtin.assert:
        that:
          - snap_version.rc == 0
        fail_msg: "snap command should still work"
        success_msg: "snap command is functional"

    # Test 5: Display summary for debugging
    - name: Display snap management summary
      ansible.builtin.debug:
        msg: |
          Host: {{ inventory_hostname }}
          Distribution: {{ ansible_distribution }}
          Installed snaps: {{ installed_snaps.stdout_lines | default(['none']) }}
          snapd service enabled: {{ snapd_service.status.UnitFileState | default('unknown') }}
          snap version: {{ snap_version.stdout | default('unknown') }}
      tags: debug
