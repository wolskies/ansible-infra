---
# Base prepare playbook - handles Python, SSH, and sudo installation for all platforms
- name: Prepare test environment
  hosts: all
  gather_facts: false
  tasks:
    - name: Install Python and essential packages on Arch Linux
      ansible.builtin.raw: |
        pacman -Sy --noconfirm python python-pip openssh sudo
      when: inventory_hostname == 'archlinux-latest'
      changed_when: true

    - name: Bootstrap Python on Ubuntu/Debian if needed
      ansible.builtin.raw: |
        apt-get update && apt-get install -y python3 python3-pip
      when: inventory_hostname in ['ubuntu-24-04', 'debian-13']
      changed_when: true
      failed_when: false

    - name: Gather facts after Python installation
      ansible.builtin.setup:

    - name: Install essential packages (Debian/Ubuntu)
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - openssh-server
          - openssh-client
          - sudo
        state: present
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Install essential packages (Arch)
      community.general.pacman:
        name:
          - python
          - python-pip
          - openssh
          - sudo
        state: present
        update_cache: true
      when: ansible_distribution == "Archlinux"

    - name: Ensure SSH service is started (SystemD systems)
      ansible.builtin.systemd:
        name: "{{ 'sshd' if ansible_distribution == 'Archlinux' else 'ssh' }}"
        state: started
        enabled: true
      when: ansible_service_mgr == "systemd"
      failed_when: false  # Don't fail in containers where systemd might not work properly

    - name: Configure sudoers for passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: ansible_distribution == "Archlinux"

    - name: Configure sudoers for passwordless sudo (Debian/Ubuntu)
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: ansible_os_family == "Debian"