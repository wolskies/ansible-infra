---
# Verify configure_host role functionality
- name: Verify configure_host role deployment
  hosts: all
  gather_facts: true
  become: true

  tasks:
    - name: Verify hostname configuration
      ansible.builtin.assert:
        that:
          - ansible_hostname is defined
        success_msg: "Hostname configuration verified"

    - name: Verify timezone configuration
      ansible.builtin.command:
        cmd: timedatectl show --property=Timezone --value
      register: current_timezone
      changed_when: false

    - name: Assert timezone is set correctly
      ansible.builtin.assert:
        that:
          - current_timezone.stdout == "America/New_York"
        success_msg: "Timezone correctly set to America/New_York"
        fail_msg: "Expected timezone America/New_York, got {{ current_timezone.stdout }}"

    - name: Verify NTP configuration
      ansible.builtin.stat:
        path: /etc/systemd/timesyncd.conf
      register: ntp_config

    - name: Assert NTP configuration exists
      ansible.builtin.assert:
        that:
          - ntp_config.stat.exists
        success_msg: "NTP configuration file exists"

    - name: Verify locale configuration
      ansible.builtin.command:
        cmd: localectl show --property=LANG --value
      register: current_locale
      changed_when: false

    - name: Assert locale is configured
      ansible.builtin.assert:
        that:
          - current_locale.stdout == "en_US.UTF-8"
        success_msg: "Locale correctly set to en_US.UTF-8"
        fail_msg: "Expected locale en_US.UTF-8, got {{ current_locale.stdout }}"

    - name: Verify system limits configuration
      ansible.builtin.stat:
        path: /etc/security/limits.conf
      register: limits_config

    - name: Assert limits configuration exists
      ansible.builtin.assert:
        that:
          - limits_config.stat.exists
        success_msg: "System limits configuration exists"

    - name: Verify MOTD configuration
      ansible.builtin.stat:
        path: /etc/motd
      register: motd_config

    - name: Assert MOTD exists
      ansible.builtin.assert:
        that:
          - motd_config.stat.exists
        success_msg: "MOTD configuration exists"

    - name: Verify created directories
      ansible.builtin.stat:
        path: "{{ item }}"
      register: test_directories
      loop:
        - /opt/test
        - /var/log/test

    - name: Assert test directories were created
      ansible.builtin.assert:
        that:
          - item.stat.exists
          - item.stat.isdir
        success_msg: "Directory {{ item.stat.path }} was created successfully"
      loop: "{{ test_directories.results }}"

    - name: Verify journal configuration (systemd systems)
      ansible.builtin.stat:
        path: /etc/systemd/journald.conf
      register: journal_config
      when: ansible_service_mgr == "systemd"

    - name: Assert journal configuration exists
      ansible.builtin.assert:
        that:
          - journal_config.stat.exists
        success_msg: "Journal configuration exists"
      when: ansible_service_mgr == "systemd"

    - name: Check Ubuntu-specific configurations
      block:
        - name: Check if snapd is disabled (when configured)
          ansible.builtin.command:
            cmd: systemctl is-enabled snapd
          register: snapd_status
          failed_when: false
          changed_when: false

        - name: Verify snapd is disabled
          ansible.builtin.assert:
            that:
              - snapd_status.stdout == "disabled" or snapd_status.rc != 0
            success_msg: "Snapd correctly disabled or not installed"
          when: config_ubuntu_disable_snap | default(false)
      when: ansible_distribution == "Ubuntu"

    - name: Verify sysctl parameters
      ansible.builtin.command:
        cmd: "sysctl {{ item.key }}"
      register: sysctl_values
      loop:
        - key: net.core.somaxconn
          expected: "65535"
        - key: vm.swappiness
          expected: "5"
      changed_when: false
      failed_when: false

    - name: Assert sysctl parameters are set correctly
      ansible.builtin.assert:
        that:
          - item.stdout.split('=')[1].strip() == item.item.expected
        success_msg: "sysctl parameter {{ item.item.key }} correctly set to {{ item.item.expected }}"
      loop: "{{ sysctl_values.results }}"
      when: 
        - item.rc == 0
        - config_sysctl | default(false)

    - name: Display configuration summary
      ansible.builtin.debug:
        msg:
          - "=== configure_host Role Verification Complete ==="
          - "Hostname: {{ ansible_hostname }}"
          - "Timezone: {{ current_timezone.stdout }}"
          - "Locale: {{ current_locale.stdout }}"
          - "NTP configured: {{ ntp_config.stat.exists }}"
          - "System limits configured: {{ limits_config.stat.exists }}"
          - "MOTD configured: {{ motd_config.stat.exists }}"
          - "Test directories created: {{ test_directories.results | selectattr('stat.exists') | list | length }}/{{ test_directories.results | length }}"