---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: ubuntu-system-test
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
  - name: arch-system-test
    image: carlodepieri/docker-archlinux-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/usr/lib/systemd/systemd"
    env:
      container: docker
provisioner:
  name: ansible
  config_options:
    defaults:
      remote_tmp: /tmp/ansible-remote-tmp
      local_tmp: /tmp/ansible-local-tmp
      host_key_checking: false
      stdout_callback: ansible.builtin.default
      stdout_callback_format: yaml
  playbooks:
    converge: converge.yml
  ansible_args:
    - --skip-tags
    - locale,hardening,hostname
  inventory:
    group_vars:
      all:
        ansible_user: root
        molecule_test: true
        # Full system configuration testing - realistic production variables
        domain_name: "test.example.com"
        domain_timezone: "America/New_York"
        domain_locale: "en_US.UTF-8"
        domain_language: "en_US.UTF-8"
        domain_ntp:
          enabled: true
          servers:
            - 0.pool.ntp.org
            - 1.pool.ntp.org

        # System packages configuration - corrected structure
        packages:
          present:
            all:
              Ubuntu:
                - curl
                - wget
                - git
                - vim
                - htop
                - fail2ban
                - ufw
                - build-essential
                - python3-pip
              Archlinux:
                - curl
                - wget
                - git
                - vim
                - htop
                - python-pip
                - base-devel

        # Security services configuration - corrected to top-level structure
        firewall:
          enabled: false # Disabled in containers
          prevent_ssh_lockout: true
          package: "ufw"
          rules:
            - rule: allow
              port: 22
              proto: tcp
            - rule: allow
              port: 80
              proto: tcp
            - rule: allow
              port: 443
              proto: tcp

        fail2ban:
          enabled: false # Disabled in containers
          sender: "root@localhost"
          defaults:
            bantime: 600
            findtime: 600
            maxretry: 3
          services:
            - name: sshd
              enabled: true
              logpath: /var/log/auth.log

        # Package manager configuration
        flatpak:
          enabled: true
          flathub: true
          method: system
          plugins:
            gnome: false # Skip GUI plugins in containers
            plasma: false
          packages:
            install:
              - org.freedesktop.Platform//23.08
            remove: []

        snap:
          disable_and_remove: true

        # User configuration - test full user lifecycle
        users:
          - name: developer
            uid: 1001
            groups: [sudo]
            shell: /bin/bash
            comment: "Developer User"
            state: present
            create_home: true
            ssh_keys:
              - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI... developer@test"
            # Language toolchain configuration
            nodejs:
              packages:
                - typescript
                - eslint
            rust:
              packages:
                - ripgrep
                - cargo-watch
            go:
              packages:
                - github.com/charmbracelet/glow@latest
                - golang.org/x/tools/cmd/goimports
            neovim:
              enabled: true
            terminal_entries:
              - alacritty
              - kitty
          - name: sysadmin
            uid: 1002
            groups: [sudo]
            shell: /bin/bash
            comment: "System Administrator"
            state: present
            create_home: true
            sudo_no_password: true
            # Minimal language tools
            nodejs:
              packages:
                - typescript
    host_vars:
      ubuntu-system-test:
        host_hostname: "ubuntu-full-test"
        host_update_hosts: false # Disabled for containers
        # Host-specific packages
        packages:
          present:
            host:
              Ubuntu:
                - jq
                - tree
        # Host-specific firewall settings
        firewall:
          enabled: false
          rules:
            - rule: allow
              port: 8080
              proto: tcp
        # Additional user for Ubuntu only
        users:
          - name: ubuntuuser
            uid: 1003
            groups: [sudo]
            shell: /bin/bash
            comment: "Ubuntu-specific User"
            state: present
            create_home: true
      arch-system-test:
        host_hostname: "arch-full-test"
        host_update_hosts: false # Disabled for containers
        # Host-specific packages
        packages:
          present:
            host:
              Archlinux:
                - rsync
                - strace
        # Different fail2ban config for Arch
        fail2ban:
          enabled: false
          defaults:
            maxretry: 5 # Different from group default
verifier:
  name: ansible
