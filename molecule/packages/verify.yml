---
- name: Verify package management functionality
  hosts: all
  become: true
  gather_facts: true
  tasks:
    # Test 1: Verify hierarchical package merging worked
    - name: Check if all-level packages are installed
      ansible.builtin.package_facts:
        manager: auto

    - name: Verify all-level packages (curl, git, htop)
      ansible.builtin.assert:
        that:
          - "'curl' in ansible_facts.packages"
          - "'git' in ansible_facts.packages"
          - "'htop' in ansible_facts.packages"
        fail_msg: "All-level packages should be installed on all hosts"
        success_msg: "All-level packages are installed correctly"

    # Test 2: Verify group-level package merging
    - name: Verify Ubuntu host has nginx and vim
      ansible.builtin.assert:
        that:
          - "'nginx' in ansible_facts.packages"
          - "'vim' in ansible_facts.packages or 'vim-common' in ansible_facts.packages"
        fail_msg: "Ubuntu group packages should be installed"
        success_msg: "Ubuntu group packages are installed correctly"
      when: ansible_distribution == "Ubuntu"

    - name: Verify Debian host has vim and tree
      ansible.builtin.assert:
        that:
          - "'vim' in ansible_facts.packages or 'vim-common' in ansible_facts.packages"
          - "'tree' in ansible_facts.packages"
        fail_msg: "Debian group packages should be installed"
        success_msg: "Debian group packages are installed correctly"
      when: ansible_distribution == "Debian"

    # Test 3: Verify host-level package merging
    - name: Verify host-level package jq (Ubuntu)
      ansible.builtin.assert:
        that:
          - "'jq' in ansible_facts.packages"
        fail_msg: "Host-level package jq should be installed on ubuntu-packages-test"
        success_msg: "Host-level packages are installed correctly"
      when: inventory_hostname == "ubuntu-packages-test"

    - name: Verify host-level package wget (Debian)
      ansible.builtin.assert:
        that:
          - "'wget' in ansible_facts.packages"
        fail_msg: "Host-level package wget should be installed on debian-packages-test"
        success_msg: "Host-level packages are installed correctly"
      when: inventory_hostname == "debian-packages-test"

    # Test 4: Verify package removal worked
    - name: Verify nano was removed
      ansible.builtin.assert:
        that:
          - "'nano' not in ansible_facts.packages"
        fail_msg: "nano should have been removed"
        success_msg: "Package removal worked correctly"

    # Test 5: Verify APT repositories were added (deb822 format)
    - name: Check Docker repository was added (Ubuntu)
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/docker.sources
      register: docker_repo_ubuntu
      when: ansible_distribution == "Ubuntu"

    - name: Verify Docker repository exists (Ubuntu)
      ansible.builtin.assert:
        that:
          - docker_repo_ubuntu.stat.exists
        fail_msg: "Docker repository should be configured"
        success_msg: "Docker repository is properly configured"
      when: ansible_distribution == "Ubuntu"

    # Test 6: Display final package summary for debugging
    - name: Display installed packages summary
      ansible.builtin.debug:
        msg: |
          Host: {{ inventory_hostname }}
          Distribution: {{ ansible_distribution }}
          Packages from 'all': curl, git, htop
          Packages from 'group': {{ 'nginx, vim' if ansible_distribution == 'Ubuntu' else 'vim, tree' }}
          Packages from 'host': {{ 'jq' if inventory_hostname == 'ubuntu-packages-test' else 'wget' }}
          Packages removed: nano
      tags: debug
