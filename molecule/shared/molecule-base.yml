# Shared molecule configuration for consistent testing
# Include this file in scenario molecule.yml files to ensure consistent setup

dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml

driver:
  name: docker

# Standard test platforms with proper container configuration
platforms_base: &platforms_base
  - name: ubuntu-24-04
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    networks:
      - name: molecule-network
    published_ports:
      - "0.0.0.0:8080:80/tcp"  # For web service testing

  - name: debian-13  
    image: geerlingguy/docker-debian13-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    networks:
      - name: molecule-network

  - name: archlinux-latest
    image: archlinux/archlinux:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/usr/lib/systemd/systemd"
    networks:
      - name: molecule-network

# Standard provisioner configuration
provisioner_base: &provisioner_base
  name: ansible
  config_options:
    defaults:
      host_key_checking: false
      gathering: smart
      fact_caching: memory
      stdout_callback: yaml
      callbacks_enabled: timer, profile_tasks
    ssh_connection:
      pipelining: true
  inventory:
    group_vars:
      all:
        # Container-specific settings to prevent issues
        config_hostname: ""                    # Don't change hostnames in containers
        config_fqdn: ""                       # Don't set FQDN in containers  
        config_ntp_enabled: true              # Enable but handle missing services gracefully
        config_system_limits: true           # Test system limits configuration
        config_motd: true                     # Test MOTD generation
        config_create_directories:           # Test directory creation
          - "/opt/test"
          - "/var/log/test"
        
        # Service configurations that work in containers
        config_sysctl: true
        config_system_limits: true
        
        # Container-friendly defaults
        ansible_become_method: sudo
        ansible_become_flags: ""
    
    host_vars:
      archlinux-latest:
        ansible_python_interpreter: /usr/bin/python
      ubuntu-24-04:
        # Any Ubuntu-specific test variables
      debian-13:
        # Any Debian-specific test variables

# Standard verifier configuration  
verifier_base: &verifier_base
  name: ansible

# Standard test sequence
test_sequence_base: &test_sequence_base
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy