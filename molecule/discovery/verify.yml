---
# Verify infrastructure discovery functionality
- name: Verify infrastructure discovery
  hosts: discovery_targets
  gather_facts: false
  tasks:
    - name: Verify discovery output files exist
      block:
        - name: Check for host vars file
          ansible.builtin.stat:
            path: "{{ discovery_output_path }}/host_vars/{{ inventory_hostname }}.yml"
          register: host_vars_file
          delegate_to: localhost

        - name: Verify host vars file exists
          ansible.builtin.assert:
            that:
              - host_vars_file.stat.exists
            fail_msg: "Host vars file not created at {{ discovery_output_path }}/host_vars/{{ inventory_hostname }}.yml"

        - name: Check for deployment playbook
          ansible.builtin.stat:
            path: "{{ discovery_output_path }}/playbooks/{{ inventory_hostname }}_discovered.yml"
          register: playbook_file
          delegate_to: localhost

        - name: Verify deployment playbook exists
          ansible.builtin.assert:
            that:
              - playbook_file.stat.exists
            fail_msg: "Deployment playbook not created"

    - name: Verify discovered data content
      block:
        - name: Read generated host vars file
          ansible.builtin.slurp:
            src: "{{ discovery_output_path }}/host_vars/{{ inventory_hostname }}.yml"
          register: host_vars_content
          delegate_to: localhost

        - name: Parse host vars content
          ansible.builtin.set_fact:
            discovered_vars: "{{ host_vars_content.content | b64decode | from_yaml }}"

        - name: Verify basic discovered data structure
          ansible.builtin.assert:
            that:
              - discovered_vars is defined
              - discovered_vars is mapping
            fail_msg: "Host vars file is not valid YAML or is empty"

        - name: Display discovery summary
          ansible.builtin.debug:
            msg:
              - "Discovery verification completed"
              - "Target: {{ inventory_hostname }}"
              - "Host vars created: {{ host_vars_file.stat.exists }}"
              - "Playbook created: {{ playbook_file.stat.exists }}"
              - "Variables discovered: {{ discovered_vars.keys() | list | length }}"

    - name: Verify dotfiles discovery data
      block:
        - name: Check if discovered_dotfiles is in vars
          ansible.builtin.assert:
            that:
              - discovered_vars.discovered_dotfiles is defined
              - discovered_vars.discovered_dotfiles is mapping
            fail_msg: "discovered_dotfiles not found or not a dictionary"
          when: discovered_vars is defined

        - name: Verify dotfiles data structure
          ansible.builtin.assert:
            that:
              - discovered_vars.discovered_dotfiles.users_with_dotfiles is defined
              - discovered_vars.discovered_dotfiles.users_with_dotfiles is sequence
              - discovered_vars.discovered_dotfiles.dotfiles_methods_found is defined
              - discovered_vars.discovered_dotfiles.primary_dotfiles is defined
            fail_msg: "Dotfiles discovery data structure is incomplete"
          when: 
            - discovered_vars is defined
            - discovered_vars.discovered_dotfiles is defined

        - name: Display dotfiles discovery results
          ansible.builtin.debug:
            msg:
              - "Dotfiles discovery results:"
              - "Users with dotfiles: {{ discovered_vars.discovered_dotfiles.users_with_dotfiles | length }}"
              - "Repository method found: {{ discovered_vars.discovered_dotfiles.dotfiles_methods_found.repository | length > 0 }}"
              - "Local configs found: {{ discovered_vars.discovered_dotfiles.dotfiles_methods_found.local_configs | length > 0 }}"
          when:
            - discovered_vars is defined
            - discovered_vars.discovered_dotfiles is defined

    - name: Test templates with minimal data
      block:
        - name: Test template rendering with empty data structures
          ansible.builtin.template:
            src: "{{ item }}"
            dest: "/tmp/test-{{ item | basename }}"
          vars:
            discovered_machine: {}
            discovered_system: {}
            discovered_packages: {}
            discovered_services: {}
            discovered_docker: {}
            discovered_dotfiles: {}
            discovered_users: {}
            discovered_repositories: {}
            discovered_security: {}
          loop:
            - "{{ role_path }}/templates/host_vars.yml.j2"
            - "{{ role_path }}/templates/README.md.j2"
            - "{{ role_path }}/templates/new_machine.yml.j2"
          delegate_to: localhost
          
        - name: Verify templates handle missing data gracefully
          ansible.builtin.debug:
            msg: "All templates successfully handle missing/empty data structures"