---
# Prepare test environment with discoverable configurations
- name: Prepare discovery test environment
  hosts: discovery_targets
  gather_facts: true
  tasks:
    - name: Install test packages for discovery
      ansible.builtin.package:
        name: "{{ test_packages }}"
        state: present

    - name: Create test users for discovery
      ansible.builtin.user:
        name: "{{ item.name }}"
        uid: "{{ item.uid }}"
        shell: "{{ item.shell }}"
        groups: "{{ item.groups | default([]) | join(',') }}"
        create_home: true
        password: "{{ 'testpass123' | password_hash('sha512') }}"
      loop: "{{ test_users }}"

    - name: Grant sudo access to discoverytest user
      ansible.builtin.copy:
        content: "discoverytest ALL=(ALL) NOPASSWD:ALL\n"
        dest: /etc/sudoers.d/discoverytest
        mode: '0440'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create complex dotfiles scenarios for test users
      block:
        - name: Create .dotfiles directory for discoverytest (git repo scenario)
          ansible.builtin.file:
            path: "/home/discoverytest/.dotfiles"
            state: directory
            owner: "discoverytest"
            mode: '0755'

        - name: Initialize git repo in discoverytest's dotfiles
          ansible.builtin.command:
            cmd: git init
            chdir: "/home/discoverytest/.dotfiles"
          become: true
          become_user: "discoverytest"

        - name: Add git config for discoverytest
          ansible.builtin.copy:
            content: |
              [user]
                  name = Discovery Test
                  email = test@example.com
            dest: "/home/discoverytest/.dotfiles/.gitconfig"
            owner: "discoverytest"
            mode: '0644'

        - name: Create dotfiles directory for testuser2 (fallback scenario)
          ansible.builtin.file:
            path: "/home/testuser2/dotfiles"
            state: directory
            owner: "testuser2"
            mode: '0755'

        - name: Create standalone config files for testuser3 (no repo scenario)
          ansible.builtin.file:
            path: "/home/testuser3/{{ item }}"
            state: touch
            owner: "testuser3"
            mode: '0644'
          loop:
            - .bashrc
            - .vimrc
            - .gitconfig
            - .tmux.conf

        - name: Create shell-specific configs
          ansible.builtin.copy:
            content: "{{ item.content }}"
            dest: "/home/{{ item.user }}/{{ item.file }}"
            owner: "{{ item.user }}"
            mode: '0644'
          loop:
            - { user: "discoverytest", file: ".bashrc", content: "# Custom bash config\nexport PATH=$PATH:/usr/local/bin" }
            - { user: "testuser2", file: ".zshrc", content: "# Custom zsh config\nautoload -U compinit\ncompinit" }
            - { user: "testuser3", file: ".config/fish/config.fish", content: "# Custom fish config\nset -gx PATH $PATH /usr/local/bin" }

        - name: Create .config directories
          ansible.builtin.file:
            path: "/home/{{ item }/.config/fish"
            state: directory
            owner: "{{ item }}"
            mode: '0755'
          loop:
            - testuser3

    - name: Create test directories for discovery
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/test-app
        - /var/log/test-app
        - /etc/test-app

    - name: Create test configuration files
      ansible.builtin.copy:
        content: |
          # Test configuration file
          test_setting=enabled
          discovery_test=true
          version=1.0.0
        dest: /etc/test-app/config.conf
        mode: '0644'

    - name: Create test systemd service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Test Discovery Service
          After=network.target

          [Service]
          Type=simple
          ExecStart=/bin/sleep infinity
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/test-discovery-service.service
        mode: '0644'

    - name: Enable test service
      ansible.builtin.systemd:
        name: test-discovery-service
        enabled: true
        daemon_reload: true

    - name: Create test cron jobs
      ansible.builtin.cron:
        name: "Test discovery cron"
        minute: "0"
        hour: "2"
        job: "/bin/echo 'Discovery test cron' >> /var/log/test-app/cron.log"

    - name: Install Python packages for testing
      ansible.builtin.pip:
        name:
          - requests
          - pyyaml
        state: present

    - name: Create network configuration for discovery
      ansible.builtin.copy:
        content: |
          # Test network interface
          auto eth0
          iface eth0 inet dhcp
        dest: /etc/network/interfaces.d/test-discovery
        mode: '0644'
      when: ansible_os_family == 'Debian'

    - name: Create third-party APT repository structure
      when: ansible_os_family == 'Debian'
      block:
        - name: Create APT sources.list.d directory
          ansible.builtin.file:
            path: /etc/apt/sources.list.d
            state: directory
            mode: '0755'

        - name: Create test third-party repo files
          ansible.builtin.copy:
            content: |
              deb [signed-by=/usr/share/keyrings/test-repo.gpg] https://test.example.com/debian {{ ansible_distribution_release }} main
            dest: "/etc/apt/sources.list.d/{{ item }}.list"
            mode: '0644'
          loop:
            - test-repo
            - gitlab_gitlab-runner
            - nvidia-container-toolkit

        - name: Create APT trusted.gpg.d directory
          ansible.builtin.file:
            path: /etc/apt/trusted.gpg.d
            state: directory
            mode: '0755'

        - name: Create dummy GPG keys
          ansible.builtin.copy:
            content: "dummy gpg key content"
            dest: "/etc/apt/trusted.gpg.d/{{ item }}.gpg"
            mode: '0644'
          loop:
            - test-repo
            - gitlab-runner

        - name: Create /usr/share/keyrings directory
          ansible.builtin.file:
            path: /usr/share/keyrings
            state: directory
            mode: '0755'

        - name: Create additional keyring files
          ansible.builtin.copy:
            content: "dummy keyring content"
            dest: "/usr/share/keyrings/{{ item }}.gpg"
            mode: '0644'
          loop:
            - docker-archive-keyring
            - nvidia-container-toolkit-keyring

    - name: Display preparation summary
      ansible.builtin.debug:
        msg:
          - "Discovery test environment prepared"
          - "Test packages installed: {{ test_packages | length }}"
          - "Test users created: {{ test_users | length }}"
          - "Test services configured: {{ test_services | length }}"
          - "APT repos configured: {{ 3 if ansible_os_family == 'Debian' else 0 }}"
