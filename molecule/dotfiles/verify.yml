---
- name: Verify dotfiles deployment
  hosts: all
  become: true
  tasks:
    # =============================================================================
    # VERIFY REPOSITORY CLONING
    # =============================================================================
    - name: Check if dotfiles repository exists (single user mode)
      ansible.builtin.stat:
        path: /root/.dotfiles
      register: single_user_repo
      when: inventory_hostname == "ubuntu-dotfiles-test"

    - name: Verify repository was cloned (single user)
      ansible.builtin.assert:
        that:
          - single_user_repo.stat.exists
          - single_user_repo.stat.isdir
        fail_msg: "Dotfiles repository not cloned for single user"
      when: inventory_hostname == "ubuntu-dotfiles-test"

    - name: Check if dotfiles repository exists (multi-user mode)
      ansible.builtin.stat:
        path: "/{{ item }}/.dotfiles"
      register: multi_user_repos
      loop:
        - root
        - home/testuser1
      when: inventory_hostname == "debian-dotfiles-test"

    - name: Verify repositories were cloned (multi-user)
      ansible.builtin.assert:
        that:
          - multi_user_repos.results[0].stat.exists
          - multi_user_repos.results[0].stat.isdir
        fail_msg: "Dotfiles repository not cloned for multi-user"
      when: inventory_hostname == "debian-dotfiles-test"

    # =============================================================================
    # VERIFY GIT CONFIGURATION
    # =============================================================================
    - name: Check git remote configuration
      ansible.builtin.command:
        cmd: git remote get-url origin
        chdir: /root/.dotfiles
      register: git_remote
      changed_when: false
      when: inventory_hostname == "ubuntu-dotfiles-test"

    - name: Verify correct repository URL
      ansible.builtin.assert:
        that:
          - "'mathiasbynens/dotfiles' in git_remote.stdout"
        fail_msg: "Git remote URL not configured correctly"
      when: inventory_hostname == "ubuntu-dotfiles-test"

    # =============================================================================
    # VERIFY DEPLOYMENT METHOD
    # =============================================================================
    - name: Check if stow was used (Ubuntu - auto method should use stow)
      ansible.builtin.command:
        cmd: which stow
      register: stow_check
      changed_when: false
      failed_when: false
      when: inventory_hostname == "ubuntu-dotfiles-test"

    - name: Debug stow availability
      ansible.builtin.debug:
        msg: "Stow is {{ 'available' if stow_check.rc == 0 else 'not available' }}"
      when: inventory_hostname == "ubuntu-dotfiles-test"

    # =============================================================================
    # VERIFY BACKUP CREATION
    # =============================================================================
    - name: Look for backup files (Debian)
      ansible.builtin.find:
        paths: /root
        patterns: "*.test-backup"
        recurse: false
      register: backup_files
      when: inventory_hostname == "debian-dotfiles-test"

    - name: Debug backup files found
      ansible.builtin.debug:
        msg: "Found {{ backup_files.files | length }} backup files"
      when: inventory_hostname == "debian-dotfiles-test"

    # =============================================================================
    # VERIFY SYMLINK/COPY DEPLOYMENT
    # =============================================================================
    - name: Check if .bashrc is a symlink (Debian - root user)
      ansible.builtin.stat:
        path: /root/.bashrc
      register: bashrc_link
      when: inventory_hostname == "debian-dotfiles-test"

    - name: Verify symlink deployment (should be a link for root user)
      ansible.builtin.assert:
        that:
          - bashrc_link.stat.exists
          - bashrc_link.stat.islnk
        fail_msg: ".bashrc should be a symlink for root user"
      when:
        - inventory_hostname == "debian-dotfiles-test"
        - false # Disabled as the test repo may not have these files

    # =============================================================================
    # VERIFY REPOSITORY STRUCTURE
    # =============================================================================
    - name: List dotfiles repository contents
      ansible.builtin.find:
        paths: /root/.dotfiles
        recurse: false
        file_type: any
      register: repo_contents

    - name: Display repository structure
      ansible.builtin.debug:
        msg: "Repository contains {{ repo_contents.files | length }} items"

    - name: Verify repository has content
      ansible.builtin.assert:
        that:
          - repo_contents.files | length > 0
        fail_msg: "Dotfiles repository appears to be empty"
