# Package Replication Configuration for {{ inventory_hostname }}
# Generated from discovery on {{ ansible_date_time.iso8601 }}
# Total packages discovered: {{ discovery_profile.packages.installed.keys() | length }}

---
{% if discovery_profile.system.os_family != "Darwin" %}
# Linux Package Installation
discovered_packages:
  # Core system packages (essential for functionality)
  essential:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['git', 'curl', 'wget', 'vim', 'nano', 'htop', 'tree', 'unzip', 'zip', 'rsync', 'ssh', 'openssh-server', 'sudo']) %}
    - {{ pkg }}
{% endfor %}

  # Development tools
  development:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['build-essential', 'gcc', 'make', 'cmake', 'python3', 'python3-pip', 'nodejs', 'npm', 'go', 'rust', 'cargo', 'docker', 'docker-compose', 'code', 'vim', 'emacs', 'git-lfs']) %}
    - {{ pkg }}
{% endfor %}

  # System administration
  admin_tools:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['fail2ban', 'ufw', 'firewalld', 'chrony', 'rsyslog', 'logrotate', 'cron', 'systemd', 'dbus', 'networking', 'net-tools', 'iptables']) %}
    - {{ pkg }}
{% endfor %}

  # Multimedia and desktop (if workstation)
  {% if discovery_profile.desktop.has_gui %}
  desktop:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['firefox', 'chromium', 'libreoffice', 'vlc', 'gimp', 'inkscape', 'blender', 'obs-studio', 'audacity', 'thunderbird']) %}
    - {{ pkg }}
{% endfor %}

  # Desktop environment packages
  desktop_environment:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['gnome', 'kde', 'xfce4', 'i3', 'awesome', 'lightdm', 'gdm3', 'sddm', 'xorg', 'wayland']) %}
    - {{ pkg }}
{% endfor %}
  {% endif %}

  # Server-specific packages
  {% if not discovery_profile.desktop.has_gui %}
  server:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['nginx', 'apache2', 'mysql-server', 'postgresql', 'redis', 'memcached', 'certbot', 'haproxy', 'prometheus', 'grafana']) %}
    - {{ pkg }}
{% endfor %}
  {% endif %}

  # All other packages (comprehensive list)
  other:
{% for pkg in discovery_profile.packages.installed.keys() %}
  {% if pkg not in ['git', 'curl', 'wget', 'vim', 'nano', 'htop', 'tree', 'unzip', 'zip', 'rsync', 'ssh', 'openssh-server', 'sudo', 'build-essential', 'gcc', 'make', 'cmake', 'python3', 'python3-pip', 'nodejs', 'npm', 'go', 'rust', 'cargo', 'docker', 'docker-compose', 'code', 'emacs', 'git-lfs', 'fail2ban', 'ufw', 'firewalld', 'chrony', 'rsyslog', 'logrotate', 'cron', 'systemd', 'dbus', 'networking', 'net-tools', 'iptables', 'firefox', 'chromium', 'libreoffice', 'vlc', 'gimp', 'inkscape', 'blender', 'obs-studio', 'audacity', 'thunderbird', 'gnome', 'kde', 'xfce4', 'i3', 'awesome', 'lightdm', 'gdm3', 'sddm', 'xorg', 'wayland', 'nginx', 'apache2', 'mysql-server', 'postgresql', 'redis', 'memcached', 'certbot', 'haproxy', 'prometheus', 'grafana'] %}
    - {{ pkg }}
  {% endif %}
{% endfor %}

# Package installation tasks for replication
package_installation_strategy:
  # Install essential packages first
  priority_order:
    - essential
    - admin_tools
    - development
    {% if discovery_profile.desktop.has_gui %}
    - desktop_environment
    - desktop
    {% else %}
    - server
    {% endif %}
    - other

  # Package manager specific settings
  {% if discovery_profile.system.distribution == "Archlinux" %}
  pacman_packages: "{{ discovered_packages.essential + discovered_packages.development + discovered_packages.admin_tools + (discovered_packages.desktop_environment | default([])) + (discovered_packages.desktop | default([])) + (discovered_packages.server | default([])) + discovered_packages.other }}"
  
  # AUR packages (detected)
  aur_packages:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['yay', 'paru', 'visual-studio-code-bin', 'google-chrome', 'discord', 'slack-desktop', 'zoom']) %}
    - {{ pkg }}
{% endfor %}
  {% elif discovery_profile.system.os_family == "Debian" %}
  apt_packages: "{{ discovered_packages.essential + discovered_packages.development + discovered_packages.admin_tools + (discovered_packages.desktop_environment | default([])) + (discovered_packages.desktop | default([])) + (discovered_packages.server | default([])) + discovered_packages.other }}"
  
  # Snap packages (if detected)
  {% if 'snapd' in discovery_profile.packages.installed %}
  snap_packages:
{% for pkg in discovery_profile.packages.installed.keys() | intersect(['code', 'discord', 'slack', 'firefox', 'chromium', 'vlc']) %}
    - {{ pkg }}
{% endfor %}
  {% endif %}
  {% endif %}

{% else %}
# macOS Package Installation (Homebrew)
homebrew_configuration:
  # Homebrew formulae (command-line tools)
  formulae:
{% for package in discovery_profile.packages.homebrew_formulae %}
    - {{ package }}
{% endfor %}

  # Homebrew casks (GUI applications)
  casks:
{% for cask in discovery_profile.packages.homebrew_casks %}
    - {{ cask }}
{% endfor %}

  # Categorized for easier management
  categorized_formulae:
    essential:
{% for pkg in discovery_profile.packages.homebrew_formulae | intersect(['git', 'curl', 'wget', 'vim', 'htop', 'tree', 'unzip', 'rsync']) %}
      - {{ pkg }}
{% endfor %}
    
    development:
{% for pkg in discovery_profile.packages.homebrew_formulae | intersect(['python', 'node', 'go', 'rust', 'docker', 'docker-compose', 'code', 'make', 'cmake', 'gcc']) %}
      - {{ pkg }}
{% endfor %}
    
    productivity:
{% for pkg in discovery_profile.packages.homebrew_formulae | intersect(['tmux', 'screen', 'fzf', 'ripgrep', 'bat', 'exa', 'fd', 'jq', 'yq']) %}
      - {{ pkg }}
{% endfor %}

  categorized_casks:
    browsers:
{% for cask in discovery_profile.packages.homebrew_casks | intersect(['firefox', 'google-chrome', 'chromium', 'safari-technology-preview']) %}
      - {{ cask }}
{% endfor %}
    
    development:
{% for cask in discovery_profile.packages.homebrew_casks | intersect(['visual-studio-code', 'iterm2', 'docker', 'postman', 'github-desktop']) %}
      - {{ cask }}
{% endfor %}
    
    productivity:
{% for cask in discovery_profile.packages.homebrew_casks | intersect(['notion', 'obsidian', 'slack', 'discord', 'zoom', 'libreoffice']) %}
      - {{ cask }}
{% endfor %}
    
    multimedia:
{% for cask in discovery_profile.packages.homebrew_casks | intersect(['vlc', 'spotify', 'handbrake', 'gimp', 'blender']) %}
      - {{ cask }}
{% endfor %}
{% endif %}

# Version pinning (for critical packages)
pinned_versions:
  # Add specific versions for critical packages
  # Example: python: "3.11.5"
  # This should be populated based on discovered versions

# Package exclusions (packages to NOT install)
exclude_packages:
  # System packages that shouldn't be manually installed
  - linux-firmware
  - kernel
  - systemd
  - udev
  # Packages that are dependencies and will be auto-installed
  - libc6
  - libssl
  # Packages specific to original hardware
  - nvidia-driver-{{ discovery_profile.system.architecture }}
  - amd64-microcode

# Post-installation tasks
post_install_tasks:
  - name: "Update package cache"
    package_manager: "update_cache"
  - name: "Remove orphaned packages"
    package_manager: "autoremove"
  {% if discovery_profile.system.os_family == "Darwin" %}
  - name: "Cleanup Homebrew"
    command: "brew cleanup"
  {% endif %}