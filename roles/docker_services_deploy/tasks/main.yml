---
- name: Validate docker_services_deploy is defined
  ansible.builtin.assert:
    that:
      - docker_services_deploy is defined
      - docker_services_deploy | length > 0
    fail_msg: "docker_services_deploy must be defined with a list of services"

- name: Deploy each Docker service
  ansible.builtin.include_role:
    name: wolskies.infrastructure.docker_compose_generic
  vars:
    service_name: "{{ docker_services[item].service_name }}"
    service_enabled: "{{ docker_services[item].service_enabled | default(true) }}"
    service_env_vars: "{{ docker_services[item].service_env_vars | default({}) }}"
    compose_file_content: "{{ docker_services[item].compose_file_content | default('') }}"
    service_image: "{{ docker_services[item].service_image | default('') }}"
    service_volumes: "{{ docker_services[item].service_volumes | default([]) }}"
    service_command: "{{ docker_services[item].service_command | default('') }}"
    service_environment: "{{ docker_services[item].service_environment | default([]) }}"
    service_use_proxy: "{{ docker_services[item].service_use_proxy | default(false) }}"
    proxy_network_name: "{{ docker_services[item].proxy_network_name | default('proxy') }}"
    proxy_network_external: "{{ docker_services[item].proxy_network_external | default(true) }}"
    service_ports: "{{ docker_services[item].service_ports | default([]) }}"
    service_labels: "{{ docker_services[item].service_labels | default({}) }}"
    docker_services_root: "{{ docker_services[item].docker_services_root | default('/srv/docker') }}"
  loop: "{{ docker_services_deploy }}"
  when:
    - item in docker_services
    - docker_services[item] is defined
