---
- name: Detect current SSH connection port
  ansible.builtin.set_fact:
    current_ssh_port: "{{ ansible_env.SSH_CONNECTION.split()[3] if ansible_env.SSH_CONNECTION is defined else ansible_port | default('22') }}"
  when:
    - firewall.enabled | default(false)
    - firewall.prevent_ssh_lockout | default(true)
  tags:
    - firewall

- name: Ensure firewall package is present
  ansible.builtin.package:
    name: "{{ firewall.package }}"
    state: present
  become: true
  when:
    - firewall.enabled | default(false)
    - firewall.package | default('ufw') != "unknown"
  tags:
    - firewall

- name: Ensure firewall rules are applied
  community.general.ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(item.protocol | default(omit)) }}"
    name: "{{ item.name | default(omit) }}"
    src: "{{ item.src | default(item.source | default(omit)) }}"
    dest: "{{ item.dest | default(item.destination | default(omit)) }}"
    to_ip: "{{ item.to_ip | default(omit) }}"
    from_ip: "{{ item.from_ip | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    delete: "{{ item.delete }}"
    comment: "{{ item.comment | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
    log: "{{ item.log | default(omit) }}"
  loop: "{{ firewall.rules }}"
  become: true
  when:
    - firewall.enabled | default(false)
    - firewall.rules | default([]) | length > 0
  notify: reload ufw
  tags:
    - firewall
    - firewall-rules

- name: Enable UFW firewall service
  community.general.ufw:
    state: enabled
  become: true
  when:
    - firewall.enabled | default(false)
  tags:
    - firewall-services

- name: Ensure fail2ban package is present
  ansible.builtin.package:
    name: fail2ban
    state: present
  become: true
  when:
    - fail2ban is defined
    - fail2ban.enabled | default(false)
  tags:
    - fail2ban

- name: Ensure fail2ban local configuration is present
  ansible.builtin.template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: "0644"
  become: true
  notify: restart fail2ban
  when:
    - fail2ban is defined
    - fail2ban.enabled | default(false)
  tags:
    - fail2ban

- name: Ensure fail2ban service is running and enabled
  ansible.builtin.service:
    name: fail2ban
    state: "{{ 'started' if (fail2ban is defined and fail2ban.enabled | default(false)) else 'stopped' }}"
    enabled: "{{ fail2ban.enabled | default(false) if fail2ban is defined else false }}"
  become: true
  when:
    - fail2ban is defined
    - fail2ban.enabled | default(false)
  tags:
    - fail2ban
