---
# manage_security_services role main tasks

- name: Validate supported OS versions
  ansible.builtin.fail:
    msg: >-
      {{ ansible_distribution }} {{ ansible_distribution_version }}
      is not supported. Supported versions: Ubuntu 22+, Debian 12+,
      Arch Linux (latest), macOS
  when:
    - >-
      (ansible_distribution == "Ubuntu" and
      ansible_distribution_major_version | int < 22) or
      (ansible_distribution == "Debian" and
      ansible_distribution_major_version | int < 12)
    - ansible_distribution not in ['Archlinux', 'MacOSX']
  tags:
    - always
    - validation
    - security-services

- name: Ensure UFW firewall package is present (Linux)
  ansible.builtin.package:
    name: ufw
    state: present
  become: true
  when:
    - ansible_system == 'Linux'
    - security_firewall_common.enabled or security_firewall_common.start
  tags:
    - security-services
    - firewall-services

- name: Ensure UFW rate limiting is configured (Linux)
  community.general.ufw:
    rule: limit
    port: "22"
    proto: tcp
    comment: "{{ security_firewall_linux.rate_limiting.comment | default('SSH rate limiting') }}"
  become: true
  when:
    - ansible_system == 'Linux'
    - security_firewall_linux.rate_limiting.enabled | default(false)
  tags:
    - security-services
    - firewall-services
    - rate-limiting

- name: Ensure firewall rules include SSH protection (Linux)
  ansible.builtin.include_tasks: ensure-ssh-protection.yml
  when:
    - ansible_system == 'Linux'
    - security_firewall_common.start | default(true)
    - security_firewall_common.prevent_ssh_lockout | default(true)
  tags:
    - security-services
    - firewall-services

- name: Ensure UFW firewall service state (Linux)
  community.general.ufw:
    state: "{{ 'enabled' if security_firewall_common.start else 'disabled' }}"
  become: true
  when:
    - ansible_system == 'Linux'
  tags:
    - security-services
    - firewall-services

- name: Ensure macOS firewall configuration
  ansible.builtin.include_tasks: security-MacOSX.yml
  when: ansible_distribution == 'MacOSX'
  tags:
    - security-services
    - firewall-services

- name: Ensure fail2ban package is present
  ansible.builtin.package:
    name: fail2ban
    state: present
  become: true
  when:
    - ansible_system == 'Linux'
    - security_fail2ban_common.enabled or security_fail2ban_common.start
  tags:
    - security-services
    - fail2ban
    - intrusion-prevention

- name: Ensure fail2ban local configuration is present
  ansible.builtin.template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: "0644"
  become: true
  notify: restart fail2ban
  when:
    - ansible_system == 'Linux'
    - security_fail2ban_common.enabled or security_fail2ban_common.start
  tags:
    - security-services
    - fail2ban
    - intrusion-prevention

- name: Ensure fail2ban service is running and enabled
  ansible.builtin.service:
    name: fail2ban
    state: "{{ 'started' if security_fail2ban_common.start else 'stopped' }}"
    enabled: "{{ security_fail2ban_common.enabled }}"
  become: true
  when:
    - ansible_system == 'Linux'
    - security_fail2ban_common.enabled or security_fail2ban_common.start
  tags:
    - security-services
    - fail2ban
    - intrusion-prevention
