---
# Install Go toolchain and user packages
# Expects: go_user (target user) and go_packages (list of go packages)

- name: Validate required variables
  ansible.builtin.assert:
    that:
      - go_user is defined
      - go_user | length > 0
      - go_packages is defined
    fail_msg: "go role requires go_user and go_packages variables"

- name: Install Go (Debian/Ubuntu)
  ansible.builtin.apt:
    name: golang
    state: present
    update_cache: true
  become: true
  when:
    - go_packages | length > 0
    - ansible_os_family == 'Debian'
  tags:
    - go
    - system-deps

- name: Install Go (Arch Linux)
  ansible.builtin.package:
    name: go
    state: present
  become: true
  when:
    - go_packages | length > 0
    - ansible_os_family == 'Archlinux'
  tags:
    - go
    - system-deps

- name: Install Go (macOS)
  community.general.homebrew:
    name: go
    state: present
  # Note: Run as ansible_user who owns Homebrew, not as target user
  when:
    - go_packages | length > 0
    - ansible_system == 'Darwin'
  tags:
    - go
    - system-deps

- name: Install Go packages for {{ go_user }}
  ansible.builtin.command: go install {{ go_package if '@' in go_package else go_package + '@latest' }}
  register: go_install
  changed_when: "'downloading' in go_install.stderr"
  failed_when: go_install.rc != 0
  loop: "{{ go_packages }}"
  loop_control:
    loop_var: go_package
  become: true
  become_user: "{{ go_user }}"
  when:
    - go_packages | length > 0
  tags:
    - go
    - user-packages

- name: Get go_user home directory
  ansible.builtin.user:
    name: "{{ go_user }}"
  register: go_user_info
  when: go_packages | length > 0

- name: Add ~/go/bin to user's PATH in ~/.profile
  ansible.builtin.lineinfile:
    path: "{{ go_user_info.home }}/.profile"
    line: 'export PATH="$HOME/go/bin:$PATH"'
    regexp: "^export PATH=.*go/bin.*"
    create: true
    mode: "0644"
    owner: "{{ go_user }}"
    group: "{{ go_user }}"
  become: true
  when: go_packages | length > 0
  tags:
    - go
    - user-packages
