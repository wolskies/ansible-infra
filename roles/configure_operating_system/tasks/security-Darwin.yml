---
# darwin security services configuration

- name: Ensure Darwin Application Layer Firewall configuration
  block:
    - name: Check current firewall state
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate
      register: darwin_firewall_state_result
      changed_when: false
      become: true

    - name: Ensure Darwin Application Layer Firewall state
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate {{ 'on' if firewall.enabled | default(false) else 'off' }}
      become: true
      register: darwin_firewall_enable_result
      changed_when: >-
        (firewall.enabled | default(false) and 'Firewall is enabled' not in darwin_firewall_state_result.stdout) or
        (not (firewall.enabled | default(false)) and 'Firewall is enabled' in darwin_firewall_state_result.stdout)

    - name: Ensure stealth mode configuration
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode {{ 'on' if firewall.stealth_mode | default(false) else 'off' }}
      become: true
      register: darwin_stealth_result
      changed_when: darwin_stealth_result.rc == 0

    - name: Ensure block all setting
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --setblockall {{ 'on' if firewall.block_all | default(false) else 'off' }}
      become: true
      register: macos_blockall_result
      changed_when: macos_blockall_result.rc == 0

    # Note: Logging configuration may not be available on all macOS versions
    # The --setloggingmode and --setloggingopt options were added in later versions
    - name: Check if logging configuration is available
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw -h
      register: firewall_help
      changed_when: false
      failed_when: false
      become: true

    - name: Ensure firewall logging configuration (if available)
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode {{ 'on' if firewall.logging | default(false) else 'off' }}
      become: true
      register: macos_logging_result
      changed_when: macos_logging_result.rc == 0
      when: "'--setloggingmode' in firewall_help.stdout"

    - name: Set detailed logging level (if logging is enabled and available)
      ansible.builtin.command: /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingopt detail
      become: true
      register: macos_logging_detail_result
      changed_when: macos_logging_detail_result.rc == 0
      when:
        - firewall.logging | default(false)
        - "'--setloggingopt' in firewall_help.stdout"
  tags:
    - firewall
    - security
