---
- name: Configure Darwin locale
  block:
    - name: Set system locale
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: AppleLocale
        type: string
        value: "{{ domain_locale.split('.')[0] }}"
      when:
        - domain_locale | length > 0
      notify: restart cfprefsd

    - name: Set preferred languages
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: AppleLanguages
        type: array
        value:
          - "{{ domain_language.split('.')[0] }}"
      when:
        - domain_language | length > 0
      notify: restart cfprefsd
  tags:
    - locale
    - language
    - Darwin

- name: Configure Darwin NTP time synchronization
  block:
    - name: Check current NTP server configuration
      ansible.builtin.command: systemsetup -getnetworktimeserver
      register: current_ntp_server
      changed_when: false
      become: true

    - name: Enable network time synchronization
      ansible.builtin.command: systemsetup -setusingnetworktime on
      become: true
      register: ntp_enable_result
      changed_when: "'Network Time' in ntp_enable_result.stderr or ntp_enable_result.rc == 0"
      when:
        - domain_ntp.enabled | default(false)

    - name: Set NTP server (first server from list)
      ansible.builtin.command: "systemsetup -setnetworktimeserver {{ domain_ntp.servers[0] }}"
      become: true
      register: ntp_server_result
      changed_when: ntp_server_result.rc == 0
      when:
        - domain_ntp.enabled | default(false)
        - domain_ntp.servers | default([]) | length > 0
        - domain_ntp.servers[0] not in current_ntp_server.stdout

    - name: Disable network time synchronization
      ansible.builtin.command: systemsetup -setusingnetworktime off
      become: true
      register: ntp_disable_result
      changed_when: "'Network Time' in ntp_disable_result.stderr or ntp_disable_result.rc == 0"
      when:
        - not (domain_ntp.enabled | default(false))
  tags:
    - ntp
    - time
    - Darwin

- name: Configure Darwin automatic updates
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.SoftwareUpdate
    key: "{{ item.key }}"
    type: bool
    value: "{{ item.value }}"
  loop:
    - key: "AutomaticCheckEnabled"
      value: "{{ macosx.updates.auto_check | default(true) }}"
    - key: "AutomaticDownload"
      value: "{{ macosx.updates.auto_download | default(true) }}"
  become: true
  notify: restart cfprefsd
  tags:
    - Darwin
    - updates
    - system

- name: Configure macOS Gatekeeper
  ansible.builtin.command:
    cmd: "spctl --master-{{ macosx.gatekeeper.enabled | default(true) | ternary('enable', 'disable') }}"
  become: true
  register: gatekeeper_result
  changed_when: gatekeeper_result.rc == 0
  tags:
    - Darwin
    - security
    - gatekeeper

- name: Configure macOS system preferences
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
  loop:
    - key: "com.apple.swipescrolldirection"
      type: "bool"
      value: "{{ macosx.system_preferences.natural_scroll | default(true) }}"
    - key: "AppleMeasurementUnits"
      type: "string"
      value: "{{ macosx.system_preferences.measurement_units | default('Inches') }}"
    - key: "AppleMetricUnits"
      type: "bool"
      value: "{{ macosx.system_preferences.use_metric | default(false) }}"
    - key: "AppleShowAllExtensions"
      type: "bool"
      value: "{{ macosx.system_preferences.show_all_extensions | default(false) }}"
  become: true
  notify: restart cfprefsd
  when:
    - item.value is defined
  tags:
    - Darwin
    - system
    - preferences

- name: Configure AirDrop over Ethernet
  community.general.osx_defaults:
    domain: com.apple.NetworkBrowser
    key: BrowseAllInterfaces
    type: bool
    value: "{{ macosx.airdrop.ethernet_enabled | default(false) }}"
  become: true
  notify: restart cfprefsd
  tags:
    - Darwin
    - network
    - airdrop
