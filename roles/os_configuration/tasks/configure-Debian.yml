---
- name: Disable and purge snapd
  ansible.builtin.include_role:
    name: wolskies.infrastructure.manage_snap_packages
  vars:
    snap_management_action: "purge"
    snap_purge_confirm: "{{ snap.remove_completely | default(false) }}"
  when:
    - snap.remove_completely | default(false)
  tags:
    - snap
    - cleanup

- name: Install unattended-upgrades package
  ansible.builtin.apt:
    name: unattended-upgrades
    state: present
    update_cache: true
  become: true
  when:
    - apt.unattended_upgrades.enabled | default(false)
  tags:
    - packages
    - updates
    - security

- name: Configure APT unattended upgrades
  ansible.builtin.copy:
    content: |
      // Minimal unattended upgrades configuration - security updates only
      // Managed by os_configuration role
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id}:${distro_codename}-security";
          "${distro_id}ESMApps:${distro_codename}-apps-security";
          "${distro_id}ESM:${distro_codename}-infra-security";
      };
      Unattended-Upgrade::AutoFixInterruptedDpkg "true";
      Unattended-Upgrade::MinimalSteps "true";
      Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: "0644"
  become: true
  when:
    - apt.unattended_upgrades.enabled | default(false)
  tags:
    - updates
    - security

- name: Remove APT unattended upgrades configuration when disabled
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    state: absent
  become: true
  when:
    - not (apt.unattended_upgrades.enabled | default(false))
  tags:
    - updates
    - security

- name: Configure APT to not install recommends
  ansible.builtin.copy:
    content: |
      APT::Install-Recommends "false";
      APT::Install-Suggests "false";
    dest: /etc/apt/apt.conf.d/99-no-recommends
    owner: root
    group: root
    mode: "0644"
  become: true
  when:
    - apt.no_recommends | default(false)
  tags:
    - apt
    - packages

- name: Remove APT no-recommends configuration when disabled
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/99-no-recommends
    state: absent
  become: true
  when:
    - not (apt.no_recommends | default(false))
  tags:
    - apt
    - packages

- name: Configure APT proxy
  ansible.builtin.copy:
    content: |
      Acquire::http::Proxy "{{ apt.proxy }}";
      Acquire::https::Proxy "{{ apt.proxy }}";
    dest: /etc/apt/apt.conf.d/99-proxy
    owner: root
    group: root
    mode: "0644"
  become: true
  when:
    - apt.proxy is defined
    - apt.proxy | length > 0
  tags:
    - apt
    - packages

- name: Remove APT proxy configuration when disabled
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/99-proxy
    state: absent
  become: true
  when:
    - apt.proxy is not defined or apt.proxy | length == 0
  tags:
    - apt
    - packages

- name: Install Nerd Fonts (Debian/Ubuntu)
  block:
    - name: Ensure fonts directory exists
      ansible.builtin.file:
        path: "{{ host_fonts.nerd_fonts.install_dir | default('/usr/share/fonts/nerd-fonts') }}"
        state: directory
        mode: "0755"
      become: true

    - name: Download and extract Nerd Fonts
      ansible.builtin.unarchive:
        src: "{{ item.url }}"
        dest: "{{ host_fonts.nerd_fonts.install_dir | default('/usr/share/fonts/nerd-fonts') }}"
        remote_src: true
        mode: "0644"
        owner: root
        group: root
      loop: "{{ host_fonts.nerd_fonts.fonts | default([]) }}"
      become: true
      register: font_install

    - name: Update font cache after installation
      ansible.builtin.command:
        cmd: fc-cache -fv
      become: true
      when: font_install is changed
      changed_when: false
      tags: ["skip_ansible_lint"]
  when:
    - host_fonts.nerd_fonts.enabled | default(false)
    - host_fonts.nerd_fonts.fonts | default([]) | length > 0
  tags:
    - fonts
    - nerd-fonts
