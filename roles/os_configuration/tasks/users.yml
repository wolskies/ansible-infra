---
# User management tasks - batch wrapper around ansible.builtin.user
# Handles user creation, removal, and SSH key deployment

- name: Create/update users
  become: true
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid | default(omit) }}"
    group: "{{ item.gid | default(omit) }}"
    home: "{{ item.home | default(omit) }}"
    shell: "{{ item.shell | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    password: >-
      {{
        omit if 'password' not in item or item.password is none or item.password == ''
        else (item.password if item.password.startswith('$') else item.password | password_hash('sha512'))
      }}
    state: "{{ item.state | default('present') }}"
    create_home: "{{ item.create_home | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    append: true
  loop: "{{ users | default([]) }}"
  when:
    - users is defined
    - users | length > 0
    - item.name != (ansible_user | default(''))
    - item.name != 'root'

- name: Deploy SSH keys for users
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
  with_subelements:
    - "{{ users | default([]) }}"
    - ssh_keys
    - skip_missing: true
  when:
    - item.0.state | default('present') == 'present'
    - item.0.name != (ansible_user | default(''))
    - item.0.name != 'root'

- name: Configure passwordless sudo for users
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.name }}"
    mode: "0440"
    content: "{{ item.name }}\tALL=(ALL:ALL) NOPASSWD: ALL\n"
    validate: "visudo -cf %s"
  loop: "{{ users | default([]) }}"
  when:
    - item.sudo_no_password | default(false)
    - item.state | default('present') == 'present'
    - item.name != (ansible_user | default(''))
    - item.name != 'root'

- name: Remove passwordless sudo files for users who no longer need it
  become: true
  ansible.builtin.file:
    path: "/etc/sudoers.d/{{ item.name }}"
    state: absent
  loop: "{{ users | default([]) }}"
  when:
    - not (item.sudo_no_password | default(false))
    - item.state | default('present') == 'present'
    - item.name != (ansible_user | default(''))
    - item.name != 'root'

- name: Remove users (from users list)
  become: true
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: absent
    remove: true
  loop: "{{ users | default([]) }}"
  when:
    - item.state is defined
    - item.state == 'absent'
    - item.name != (ansible_user | default(''))
    - item.name != 'root'

- name: Remove users (from users_absent list - legacy)
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
    remove: true
  loop: "{{ users_absent | default([]) }}"
  when:
    - users_absent is defined
    - users_absent | length > 0
    - item != (ansible_user | default(''))
    - item != 'root'
