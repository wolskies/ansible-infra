---

- name: Configure NTP time synchronization
  block:
    - name: Configure systemd-timesyncd
      ansible.builtin.template:
        src: timesyncd.conf.j2
        dest: /etc/systemd/timesyncd.conf
        owner: root
        group: root
        mode: '0644'
        backup: true
      become: true
      when: ansible_service_mgr == "systemd"
      notify: restart timesyncd

    - name: Check if systemd-timesyncd service exists
      ansible.builtin.systemd:
        name: systemd-timesyncd
      register: timesyncd_service_check
      become: true
      when:
        - ansible_service_mgr == "systemd"
        - ansible_virtualization_type | default('') != 'docker'
      failed_when: false

    - name: Enable and start systemd-timesyncd
      ansible.builtin.systemd:
        name: systemd-timesyncd
        enabled: true
        state: started
      become: true
      when:
        - ansible_service_mgr == "systemd"
        - ansible_virtualization_type | default('') != 'docker'
        - timesyncd_service_check.status is defined
        - timesyncd_service_check.status.LoadState != "not-found"
  when: config_common_ntp.enabled | default(true)
  tags:
    - ntp
    - time

- name: Configure system locale
  block:
    - name: Generate locale
      community.general.locale_gen:
        name: "{{ config_common_locale.locale }}"
        state: present
      become: true
      when: ansible_distribution in ['Ubuntu', 'Debian']

    - name: Set system locale (Ubuntu/Debian)
      ansible.builtin.lineinfile:
        path: /etc/environment
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
        create: true
      loop:
        - key: LANG
          value: "{{ config_common_locale.language }}"
        - key: LC_ALL
          value: "{{ config_common_locale.locale }}"
      become: true
      when: ansible_distribution in ['Ubuntu', 'Debian']

  when: config_common_locale.locale is defined
  tags:
    - locale
    - language

- name: Configure Linux hostname
  block:
    - name: Set system hostname
      ansible.builtin.hostname:
        name: "{{ _hostname }}"
      become: true
      when: _hostname_changed

    - name: Update /etc/hosts file
      block:
        - name: Backup /etc/hosts before modification
          ansible.builtin.copy:
            src: /etc/hosts
            dest: /etc/hosts.backup.{{ ansible_date_time.epoch }}
            owner: root
            group: root
            mode: '0644'
            remote_src: true
          become: true

        - name: Remove old hostname entries from /etc/hosts
          ansible.builtin.lineinfile:
            path: /etc/hosts
            regexp: '^127\.0\.0\.1\s+.*{{ ansible_hostname }}.*'
            state: absent
          become: true
          when: _hostname_changed

        - name: Update /etc/hosts - localhost entry
          ansible.builtin.lineinfile:
            path: /etc/hosts
            regexp: '^127\.0\.0\.1\s+localhost(\s|$)'
            line: "127.0.0.1\tlocalhost"
            create: false
          become: true

        - name: Update /etc/hosts - Add FQDN and hostname
          ansible.builtin.lineinfile:
            path: /etc/hosts
            regexp: '^127\.0\.1\.1\s+'
            line: "127.0.1.1\t{{ _fqdn }} {{ _hostname }}"
            create: false
          become: true

      when: config_common_update_hosts | default(true)

  when:
    - _hostname_changed or _domain_changed
    - ansible_system == 'Linux'
  tags:
    - hostname

- name: Configure systemd journal
  block:
    - name: Ensure systemd journald.conf.d directory exists
      ansible.builtin.file:
        path: /etc/systemd/journald.conf.d
        state: directory
        owner: root
        group: root
        mode: '0755'
      become: true

    - name: Configure systemd journal settings
      ansible.builtin.template:
        src: journald.conf.j2
        dest: /etc/systemd/journald.conf.d/00-ansible-managed.conf
        owner: root
        group: root
        mode: '0644'
      become: true
      notify: restart journald
  when:
    - config_linux_journal.enabled | default(true)
    - ansible_service_mgr == "systemd"
  tags:
    - journal
    - logging

- name: Configure rsyslog for remote logging
  block:
    - name: Check if rsyslog is installed
      ansible.builtin.stat:
        path: /etc/rsyslog.conf
      register: rsyslog_installed

    - name: Configure rsyslog remote host
      ansible.builtin.lineinfile:
        path: /etc/rsyslog.conf
        regexp: '^\*\.\* @@'
        line: "*.* @@{{ config_linux_rsyslog.remote_host }}:{{ config_linux_rsyslog.remote_port }}"
        create: false
      become: true
      when: rsyslog_installed.stat.exists
      notify: restart rsyslog
  when:
    - config_linux_rsyslog.enabled | default(false)
    - config_linux_rsyslog.remote_host | default("") != ""
  tags:
    - rsyslog
    - logging
