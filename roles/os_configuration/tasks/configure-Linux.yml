---
- name: Configure hostname
  ansible.builtin.hostname:
    name: infrastructure.host.hostname
  when:
    - infrastructure.host.hostname is defined
    - infrastructure.host.hostname | length > 0

- name: Configure system locale
  community.general.locale_gen:
    name: "{{ infrastructure.domain.locale }}"
    state: present
  become: true
  when: infrastructure.domain.locale is defined

- name: Configure system language
  when: infrastructure.domain.language is defines

- name: Configure NTP time synchronization
  block:
    - name: Check if systemd-timesyncd service exists
      ansible.builtin.systemd:
        name: systemd-timesyncd
      register: timesyncd_service_check
      become: true
      failed_when: false

    - name: Configure systemd-timesyncd
      ansible.builtin.template:
        src: timesyncd.conf.j2
        dest: /etc/systemd/timesyncd.conf
        owner: root
        group: root
        mode: "0644"
        backup: true
      become: true
      notify: restart timesyncd
  when: infrastructure.domain.ntp.enabled | default(true)
  tags:
    - ntp
    - time

- name: Configure systemd journal
  block:
    - name: Ensure systemd journald.conf.d directory exists
      ansible.builtin.file:
        path: /etc/systemd/journald.conf.d
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: true

    - name: Configure systemd journal settings
      ansible.builtin.template:
        src: journald.conf.j2
        dest: /etc/systemd/journald.conf.d/00-ansible-managed.conf
        owner: root
        group: root
        mode: "0644"
      become: true
      notify: restart journald
  when:
    - infrastructure.host.journal.configure | default(true)
    - ansible_service_mgr == "systemd"
  tags:
    - journal
    - logging

- name: Configure rsyslog for remote logging
  block:
    - name: Check if rsyslog is installed
      ansible.builtin.stat:
        path: /etc/rsyslog.conf
      register: rsyslog_installed

    - name: Configure rsyslog remote host
      ansible.builtin.lineinfile:
        path: /etc/rsyslog.conf
        regexp: '^\*\.\* @@'
        line: "*.* @@{{ infrastructure.host.rsyslog.remote_host }}:{{ infrastructure.host.rsyslog.remote_port }}"
        create: false
      become: true
      when: rsyslog_installed.stat.exists
      notify: restart rsyslog
  when:
    - infrastructure.host.rsyslog.enabled | default(false)
    - infrastructure.host.rsyslog.remote_host | default("") | length > 0
  tags:
    - rsyslog
    - logging

- name: System optimizations
  block:
    - name: Enable system services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop: "{{ infrastructure.host.services.enable | default([]) }}"
      become: true
      failed_when: false
      
    - name: Disable unnecessary services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: false
        state: stopped
      loop: "{{ infrastructure.host.services.disable | default([]) }}"
      become: true
      failed_when: false

    - name: Configure vm.swappiness
      ansible.posix.sysctl:
        name: vm.swappiness
        value: "{{ infrastructure.host.optimizations.swappiness | default(10) }}"
        state: present
        reload: true
      become: true
      when: infrastructure.host.optimizations.tune_swappiness | default(false)
  tags:
    - optimization
    - services

- name: Configure kernel parameters (sysctl)
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: "/etc/sysctl.d/99-ansible-managed.conf"
    reload: true
  loop: "{{ infrastructure.host.sysctl.parameters | default({}) | dict2items }}"
  become: true
  when:
    - infrastructure.host.sysctl.parameters is defined
    - infrastructure.host.sysctl.parameters | length > 0
  tags:
    - sysctl
    - kernel

- name: Configure PAM limits
  community.general.pam_limits:
    domain: "{{ item.domain }}"
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  loop: "{{ infrastructure.host.limits.limits | default([]) }}"
  become: true
  when:
    - infrastructure.host.limits.limits is defined
    - infrastructure.host.limits.limits | length > 0
  tags:
    - limits
    - pam

- name: Load kernel modules at boot
  ansible.builtin.lineinfile:
    path: "/etc/modules-load.d/{{ item }}.conf"
    line: "{{ item }}"
    create: true
    mode: "0644"
  loop: "{{ infrastructure.host.modules.load | default([]) }}"
  become: true
  when:
    - infrastructure.host.modules.load is defined
    - infrastructure.host.modules.load | length > 0
  tags:
    - modules
    - kernel

- name: Blacklist kernel modules
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blacklist-ansible-managed.conf
    line: "blacklist {{ item }}"
    create: true
    mode: "0644"
  loop: "{{ infrastructure.host.modules.blacklist | default([]) }}"
  become: true
  when:
    - infrastructure.host.modules.blacklist is defined
    - infrastructure.host.modules.blacklist | length > 0
  tags:
    - modules
    - kernel

- name: Include os-family-specific configuration
  ansible.builtin.include_tasks: configure-{{ ansible_os_family }}.yml
  tags:
    - os-configuration
    - distribution-specific