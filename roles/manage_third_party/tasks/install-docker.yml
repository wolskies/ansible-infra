---
# Docker installation for all platforms
# Includes Docker Compose and user group management

# =============================================================================
# LINUX DOCKER INSTALLATION
# =============================================================================

- name: Install Docker on Linux
  block:
    # Ubuntu/Debian Docker installation
    - name: Install Docker on Ubuntu/Debian
      block:
        - name: Install Docker dependencies
          ansible.builtin.apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release
            state: present
          become: true

        - name: Add Docker GPG key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
            state: present
          become: true

        - name: Add Docker repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
            state: present
          become: true

        - name: Install Docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present
            update_cache: true
          become: true

      when: ansible_distribution in ['Ubuntu', 'Debian']

    # Arch Linux Docker installation
    - name: Install Docker on Arch Linux
      community.general.pacman:
        name:
          - docker
          - docker-compose
        state: present
      become: true
      when: ansible_distribution == 'Archlinux'

    # Install Docker Compose (if not already included)
    - name: Install Docker Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
        owner: root
        group: root
      become: true
      when:
        - manage_third_party_docker.install_compose | default(true)
        - ansible_distribution != 'Archlinux'  # Arch includes compose

    # Start and enable Docker service
    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: "{{ manage_third_party_docker.enable_service | default(true) }}"
      become: true
      when: manage_third_party_docker.start_service | default(true)

  when: ansible_system == 'Linux'

# =============================================================================
# MACOS DOCKER INSTALLATION
# =============================================================================

- name: Install Docker on macOS
  block:
    - name: Install Docker Desktop via Homebrew
      community.general.homebrew_cask:
        name: docker
        state: present
      when: manage_third_party_macos.use_homebrew | default(true)

  when: ansible_system == 'Darwin'

# =============================================================================
# USER GROUP MANAGEMENT
# =============================================================================

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  become: true
  loop: "{{ manage_third_party_docker.users | default([ansible_user]) }}"
  when:
    - ansible_system == 'Linux'
    - manage_third_party_docker.add_user_to_group | default(true)
    - manage_third_party_docker.users | default([ansible_user]) | length > 0

- name: Display Docker installation summary
  ansible.builtin.debug:
    msg:
      - "âœ… Docker installation completed"
      - "Docker Compose installed: {{ manage_third_party_docker.install_compose | default(true) }}"
      - "Service started: {{ manage_third_party_docker.start_service | default(true) }}"
      - "Users added to docker group: {{ manage_third_party_docker.users | default([ansible_user]) }}"
      - ""
      - "Next steps:"
      - "  - Log out and back in for group changes to take effect"
      - "  - Test with: docker run hello-world"
