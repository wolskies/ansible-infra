---
# manage_third_party role defaults
# Manages installation of third-party tools and services

# =============================================================================
# THIRD-PARTY TOOLS CONFIGURATION
# =============================================================================

# Control which third-party tools to install
manage_third_party_tools:
  docker: false                        # Docker and Docker Compose
  nodejs: false                        # Node.js and npm/yarn
  python_uv: false                     # Python uv package manager
  rust: false                          # Rust toolchain
  go: false                           # Go programming language
  terraform: false                    # Infrastructure as Code
  kubectl: false                      # Kubernetes CLI
  helm: false                         # Kubernetes package manager
  vault: false                        # HashiCorp Vault
  consul: false                       # HashiCorp Consul
  ansible: false                      # Ansible automation (latest)
  vscode: false                       # Visual Studio Code
  jetbrains_toolbox: false           # JetBrains development tools
  git_lfs: false                      # Git Large File Storage

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

manage_third_party_docker:
  install_compose: true               # Install Docker Compose
  add_user_to_group: true            # Add specified users to docker group
  users: []                          # Users to add to docker group (empty = current user)
  start_service: true                # Start Docker service
  enable_service: true               # Enable Docker service at boot

# =============================================================================
# NODE.JS CONFIGURATION
# =============================================================================

manage_third_party_nodejs:
  version: "lts"                     # Node version (lts, latest, or specific like "18.17.0")
  install_method: "nodeenv"          # Installation method (nodeenv, nvm, binary)
  global_packages:                   # Global npm packages to install
    - npm
    - yarn
    - typescript
    - ts-node
    - nodemon

# =============================================================================
# PYTHON CONFIGURATION
# =============================================================================

manage_third_party_python:
  uv_version: "latest"               # uv version to install
  install_location: "system"         # system or user
  create_venv: false                 # Create default virtual environment
  venv_name: "default"              # Default venv name

# =============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# =============================================================================

manage_third_party_development:
  rust:
    install_method: "rustup"         # rustup or package manager
    components: ["rustfmt", "clippy"] # Additional components

  go:
    version: "latest"                 # Go version
    gopath: "/opt/go"                # GOPATH location

  terraform:
    version: "latest"                 # Terraform version
    install_location: "/usr/local/bin" # Install location

  kubectl:
    version: "stable"                 # kubectl version
    install_location: "/usr/local/bin"

  helm:
    version: "latest"                 # Helm version
    install_location: "/usr/local/bin"

# =============================================================================
# HASHICORP TOOLS CONFIGURATION
# =============================================================================

manage_third_party_hashicorp:
  vault:
    version: "latest"                 # Vault version
    install_location: "/usr/local/bin"
    create_config: false              # Create basic config file

  consul:
    version: "latest"                 # Consul version
    install_location: "/usr/local/bin"
    create_config: false              # Create basic config file

# =============================================================================
# EDITOR/IDE CONFIGURATION
# =============================================================================

manage_third_party_editors:
  vscode:
    install_method: "deb"             # deb, snap, or flatpak (Linux)
    extensions: []                    # VS Code extensions to install

  jetbrains_toolbox:
    install_location: "/opt/jetbrains-toolbox" # Installation directory
    create_desktop_entry: true       # Create desktop entry

# =============================================================================
# OS-SPECIFIC SETTINGS
# =============================================================================

# Ubuntu/Debian specific
manage_third_party_ubuntu:
  use_official_repositories: true    # Use official repositories when available
  add_third_party_repos: true       # Add third-party APT repositories

# Arch Linux specific
manage_third_party_archlinux:
  use_aur: true                      # Use AUR packages when available
  aur_helper: "paru"                # AUR helper to use

# macOS specific
manage_third_party_macos:
  use_homebrew: true                 # Use Homebrew for installations
  install_cask_apps: true           # Install GUI applications via Cask
