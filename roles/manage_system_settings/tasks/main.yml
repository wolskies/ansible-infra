---
# manage_system_settings role main tasks
# Performance tuning and hardware configurations (security handled by devsec.hardening)

- name: Validate supported OS versions
  ansible.builtin.fail:
    msg: >-
      {{ ansible_distribution }} {{ ansible_distribution_version }}
      is not supported. Supported versions: Ubuntu 22+, Debian 12+,
      Arch Linux (latest)
  when:
    - >-
      (ansible_distribution == "Ubuntu" and
      ansible_distribution_major_version | int < 22) or
      (ansible_distribution == "Debian" and
      ansible_distribution_major_version | int < 12)
    - ansible_distribution != "MacOSX"
  tags:
    - always
    - validation
    - system-settings

- name: Load OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_distribution }}.yml"
  when: ansible_distribution in ['Ubuntu', 'Debian', 'Archlinux']
  tags:
    - always
    - variables
    - system-settings


- name: Include OS-specific system settings tasks
  ansible.builtin.include_tasks: "settings-{{ ansible_distribution }}.yml"
  when: ansible_distribution in ['Ubuntu', 'Debian', 'Archlinux', 'MacOSX']
  tags:
    - always
    - system-settings
    - optimization

- name: Configure kernel parameters (sysctl)
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/99-ansible-managed.conf
    reload: true
  loop: "{{ config_linux_sysctl.parameters | dict2items }}"
  become: true
  when:
    - ansible_system == 'Linux'
    - config_linux_sysctl.enabled | default(false)
  tags:
    - sysctl
    - performance
    - system-settings

- name: Configure PAM limits
  community.general.pam_limits:
    domain: "{{ item.domain }}"
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  loop: "{{ config_linux_limits.limits }}"
  become: true
  when:
    - ansible_system == 'Linux'
    - config_linux_limits.enabled | default(false)
  tags:
    - limits
    - pam
    - performance
    - system-settings

- name: Install Nerd Fonts (Ubuntu/Debian quick utility)
  ansible.builtin.include_tasks: "install-nerd-fonts.yml"
  when: system_config_nf_enable | bool
  tags:
    - fonts
    - nerd-fonts
    - system-settings
