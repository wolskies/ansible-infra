---
# Ubuntu/Debian family system settings tasks

- name: Apply network performance optimizations
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ system_settings_network_optimizations.sysctl | dict2items }}"
  when: system_settings_network_enabled | bool
  become: true
  tags:
    - network
    - performance
    - sysctl
    - system-settings

- name: Apply gaming performance optimizations
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ system_settings_gaming_optimizations.sysctl | dict2items }}"
  when: system_settings_gaming_enabled | bool
  become: true
  tags:
    - gaming
    - performance
    - sysctl
    - system-settings

- name: Apply network security hardening
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ system_settings_network_security.sysctl | dict2items }}"
  when:
    - system_settings_security_hardening.enable_network_hardening | default(true)
    - system_settings_network_security.sysctl is defined
  become: true
  tags:
    - network
    - security
    - sysctl
    - system-settings

- name: Apply custom sysctl parameters (security validated)
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ system_settings_custom_sysctl | dict2items }}"
  when:
    - system_settings_custom_sysctl | length > 0
    # Security validation is performed in security-validation.yml
  become: true
  tags:
    - sysctl
    - custom
    - system-settings

- name: Configure NVIDIA GPU kernel modules
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/nvidia.conf
    line: "options nvidia_drm modeset=1 fbdev=1"
    create: true
    mode: '0644'
  when:
    - system_settings_gpu_enabled | bool
    - system_settings_gpu_nvidia_enabled | bool
    - ansible_lspci is defined
    - "'nvidia' in ansible_lspci | lower"
  become: true
  notify: Update initramfs
  tags:
    - gpu
    - nvidia
    - kernel
    - system-settings

- name: Configure early loading of NVIDIA modules
  ansible.builtin.lineinfile:
    path: /etc/initramfs-tools/modules
    line: "{{ item }}"
    create: true
    mode: '0644'
  loop: "{{ system_settings_gpu_nvidia_modules }}"
  when:
    - system_settings_gpu_enabled | bool
    - system_settings_gpu_nvidia_enabled | bool
    - ansible_lspci is defined
    - "'nvidia' in ansible_lspci | lower"
  become: true
  notify: Update initramfs
  tags:
    - gpu
    - nvidia
    - kernel
    - initramfs
    - system-settings

- name: Enable camera support (uvcvideo module)
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/uvcvideo.conf
    line: "uvcvideo"
    create: true
    mode: '0644'
  when:
    - system_settings_hardware_enabled | bool
    - system_settings_camera_support_enabled | bool
  become: true
  tags:
    - camera
    - hardware
    - system-settings

- name: Enable system services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop: "{{ system_settings_services_enable }}"
  when:
    - system_settings_services_enabled | bool
    - system_settings_services_enable | length > 0
  become: true
  failed_when: false
  tags:
    - services
    - systemd
    - system-settings

- name: Disable system services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop: "{{ system_settings_services_disable }}"
  when:
    - system_settings_services_enabled | bool
    - system_settings_services_disable | length > 0
  become: true
  failed_when: false
  tags:
    - services
    - systemd
    - system-settings
