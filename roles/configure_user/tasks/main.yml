---
# Configure user preferences for a single user
# Expects target_user variable to be passed in

- name: Validate required target_user variable
  ansible.builtin.assert:
    that:
      - target_user is defined
      - target_user.name is defined
      - target_user.name | length > 0
    fail_msg: "configure_user role requires target_user variable with name field"

- name: Configure language toolchains for {{ target_user.name }}
  block:
    - name: Install Node.js and packages
      ansible.builtin.include_role:
        name: wolskinet.infrastructure.nodejs
      vars:
        node_user: "{{ target_user.name }}"
        node_packages: "{{ target_user.nodejs.packages }}"
      when: target_user.nodejs.packages | default([]) | length > 0
      tags: nodejs

    - name: Install Rust and packages
      ansible.builtin.include_role:
        name: wolskinet.infrastructure.rust
      vars:
        rust_user: "{{ target_user.name }}"
        rust_packages: "{{ target_user.rust.packages }}"
      when: target_user.rust.packages | default([]) | length > 0
      tags: rust

    - name: Install Go and packages
      ansible.builtin.include_role:
        name: wolskinet.infrastructure.go
      vars:
        go_user: "{{ target_user.name }}"
        go_packages: "{{ target_user.go.packages }}"
      when: target_user.go.packages | default([]) | length > 0
      tags: go
  when: target_user.name != 'root'
  tags:
    - user-config
    - language-packages

- name: Ensure ACL package is installed for privilege escalation
  ansible.builtin.package:
    name: acl
    state: present
  become: true
  when: ansible_os_family != 'Darwin'

- name: Configure user preferences for {{ target_user.name }}
  block:
    - name: Configure cross-platform user preferences
      ansible.builtin.include_tasks: configure-cross-platform.yml
      tags: cross-platform

    - name: Configure OS-specific user preferences
      ansible.builtin.include_tasks: configure-{{ ansible_system }}.yml
      when: >
        target_user.shell is defined or
        target_user[ansible_system] is defined
      tags: os-specific

    - name: Configure dotfiles
      ansible.builtin.include_tasks: configure-dotfiles.yml
      when: target_user.dotfiles is defined and target_user.dotfiles.enable | default(true)
      tags: dotfiles
  become: true
  become_user: "{{ target_user.name }}"
  when: target_user.name != 'root'
  tags: user-config
