---
# Install Node.js system dependencies and user packages
# Expects: node_user (target user) and node_packages (list of npm packages)

- name: Validate required variables
  ansible.builtin.assert:
    that:
      - node_user is defined
      - node_user | length > 0
      - node_packages is defined
    fail_msg: "nodejs role requires node_user and node_packages variables"

- name: Install Node.js system dependencies (Debian/Ubuntu)
  ansible.builtin.include_tasks: setup-Debian.yml
  when:
    - node_packages | length > 0
    - ansible_os_family == 'Debian'

- name: Install Node.js system dependencies (Arch Linux)
  ansible.builtin.include_tasks: setup-Archlinux.yml
  when:
    - node_packages | length > 0
    - ansible_os_family == 'Archlinux'

- name: Install Node.js system dependencies (macOS)
  ansible.builtin.include_tasks: setup-Darwin.yml
  when:
    - node_packages | length > 0
    - ansible_system == 'Darwin'

- name: Get home directory for {{ node_user }}
  ansible.builtin.getent:
    database: passwd
    key: "{{ node_user }}"
  when: node_packages | length > 0

- name: Create npm global directory for {{ node_user }}
  ansible.builtin.file:
    path: "{{ getent_passwd[node_user][4] }}/.npm-global"
    state: directory
    mode: "0755"
  become: true
  become_user: "{{ node_user }}"
  when: node_packages | length > 0
  tags:
    - nodejs
    - user-packages

- name: Set npm global directory for {{ node_user }}
  community.general.npm:
    name: npm
    global: true
    state: present
    production: false
    executable: npm
  environment:
    NPM_CONFIG_PREFIX: "{{ getent_passwd[node_user][4] }}/.npm-global"
    NODE_PATH: "{{ getent_passwd[node_user][4] }}/.npm-global/lib/node_modules"
  become: true
  become_user: "{{ node_user }}"
  when: node_packages | length > 0
  tags:
    - nodejs
    - user-packages

- name: Install npm packages globally for {{ node_user }}
  community.general.npm:
    name: "{{ item }}"
    global: true
    state: present
    production: false
  environment:
    NPM_CONFIG_PREFIX: "{{ getent_passwd[node_user][4] }}/.npm-global"
    NODE_PATH: "{{ getent_passwd[node_user][4] }}/.npm-global/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "true"
  loop: "{{ node_packages }}"
  become: true
  become_user: "{{ node_user }}"
  when: node_packages | length > 0
  tags:
    - nodejs
    - user-packages
