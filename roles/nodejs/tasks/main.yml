---
# Install Node.js system dependencies and user packages
# Expects: node_user (target user) and node_packages (list of npm packages)

- name: Validate required variables
  ansible.builtin.assert:
    that:
      - node_user is defined
      - node_user | length > 0
      - node_packages is defined
    fail_msg: "nodejs role requires node_user and node_packages variables"

- name: Install Node.js system dependencies (Debian/Ubuntu)
  ansible.builtin.include_tasks: setup-Debian.yml
  when:
    - node_packages | length > 0
    - ansible_os_family == 'Debian'

- name: Install Node.js system dependencies (Arch Linux)
  ansible.builtin.include_tasks: setup-Archlinux.yml
  when:
    - node_packages | length > 0
    - ansible_os_family == 'Archlinux'

- name: Install Node.js system dependencies (macOS)
  ansible.builtin.include_tasks: setup-Darwin.yml
  when:
    - node_packages | length > 0
    - ansible_system == 'Darwin'

- name: Create npm global directory for {{ node_user }}
  ansible.builtin.file:
    path: "~/.npm-global"
    state: directory
    mode: "0755"
  become: true
  become_user: "{{ node_user }}"
  when: node_packages | length > 0
  tags:
    - nodejs
    - user-packages

- name: Install npm packages globally for {{ node_user }}
  community.general.npm:
    name: "{{ node_package }}"
    global: true
    state: present
  environment:
    NPM_CONFIG_PREFIX: "~/.npm-global"
    NODE_PATH: "~/.npm-global/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "true"
    PATH: >-
      {{ ansible_env.PATH }}{{
      ':' + '/usr/local/bin:/usr/bin' if ansible_os_family == 'Debian' else ''
      }}{{
      ':' + '/opt/homebrew/bin:/usr/local/bin' if ansible_system == 'Darwin' else ''
      }}
  loop: "{{ node_packages }}"
  loop_control:
    loop_var: node_package
  become: true
  become_user: "{{ node_user }}"
  when: node_packages | length > 0
  tags:
    - nodejs
    - user-packages
