---
- name: Verify nodejs role with enhanced features
  hosts: all
  become: true
  gather_facts: true
  tasks:
    # =============================================================================
    # TEST SETUP - Get user information
    # =============================================================================
    - name: Get testdev user information
      ansible.builtin.user:
        name: testdev
      register: testdev_info

    - name: Set test facts
      ansible.builtin.set_fact:
        test_npm_prefix: >-
          {%- if inventory_hostname == 'ubuntu-nodejs-test' -%}
          {{ testdev_info.home }}/.local/npm
          {%- else -%}
          {{ testdev_info.home }}/.npm-global
          {%- endif -%}

    # =============================================================================
    # REQ-NODE-001: Verify Node.js installation from NodeSource/system repos
    # =============================================================================
    - name: Check Node.js version
      ansible.builtin.command: node --version
      register: node_version
      changed_when: false

    - name: Check npm version
      ansible.builtin.command: npm --version
      register: npm_version
      changed_when: false

    - name: REQ-NODE-001 - Verify Node.js installation
      ansible.builtin.assert:
        that:
          - node_version.rc == 0
          - npm_version.rc == 0
          - node_version.stdout is match("^v\d+\.\d+\.\d+")
        fail_msg: "❌ REQ-NODE-001: Node.js not properly installed from repositories"
        success_msg: "✅ REQ-NODE-001: Node.js {{ node_version.stdout }} installed successfully"

    # =============================================================================
    # Variable Testing: npm_config_prefix
    # =============================================================================
    - name: Check npm prefix directory exists
      ansible.builtin.stat:
        path: "{{ test_npm_prefix }}"
      register: npm_prefix_dir

    - name: Verify npm_config_prefix implementation (ubuntu-nodejs-test)
      ansible.builtin.assert:
        that:
          - npm_prefix_dir.stat.exists
          - npm_prefix_dir.stat.isdir
          - test_npm_prefix == testdev_info.home + "/.local/npm"
        fail_msg: "❌ Custom npm_config_prefix not properly created"
        success_msg: "✅ Custom npm_config_prefix created at {{ test_npm_prefix }}"
      when: inventory_hostname == 'ubuntu-nodejs-test'

    - name: Verify default npm_config_prefix (arch-nodejs-test)
      ansible.builtin.assert:
        that:
          - npm_prefix_dir.stat.exists
          - npm_prefix_dir.stat.isdir
          - test_npm_prefix == testdev_info.home + "/.npm-global"
        fail_msg: "❌ Default npm_config_prefix not properly created"
        success_msg: "✅ Default npm_config_prefix created at {{ test_npm_prefix }}"
      when: inventory_hostname == 'arch-nodejs-test'

    # =============================================================================
    # REQ-NODE-002: Verify npm packages with version support
    # =============================================================================
    - name: List installed global npm packages
      ansible.builtin.shell: |
        NPM_CONFIG_PREFIX="{{ test_npm_prefix }}" npm list -g --depth=0 --json
      become: true
      become_user: testdev
      register: npm_global_packages
      changed_when: false
      when: inventory_hostname != 'ubuntu-nodejs-edge'

    - name: Parse npm package list
      ansible.builtin.set_fact:
        installed_packages: "{{ npm_global_packages.stdout | from_json }}"
      when: inventory_hostname != 'ubuntu-nodejs-edge'

    # Ubuntu tests: Mixed format with versions
    - name: REQ-NODE-002 - Verify typescript (simple string format)
      ansible.builtin.assert:
        that:
          - "'typescript' in installed_packages.dependencies"
        fail_msg: "❌ REQ-NODE-002: typescript not installed (simple string format test)"
        success_msg: "✅ REQ-NODE-002: typescript installed (simple string format works)"
      when: inventory_hostname == 'ubuntu-nodejs-test'

    - name: REQ-NODE-002 - Verify eslint with specific version
      ansible.builtin.assert:
        that:
          - "'eslint' in installed_packages.dependencies"
          - installed_packages.dependencies.eslint.version is version('8.57.0', '==')
        fail_msg: "❌ REQ-NODE-002: eslint not at version 8.57.0"
        success_msg: "✅ REQ-NODE-002: eslint installed at exact version 8.57.0"
      when: inventory_hostname == 'ubuntu-nodejs-test'

    - name: REQ-NODE-002 - Verify scoped package @types/node
      ansible.builtin.assert:
        that:
          - "'@types/node' in installed_packages.dependencies"
          - installed_packages.dependencies['@types/node'].version is version('20.11.0', '==')
        fail_msg: "❌ REQ-NODE-002: @types/node not at version 20.11.0"
        success_msg: "✅ REQ-NODE-002: Scoped package @types/node installed at version 20.11.0"
      when: inventory_hostname == 'ubuntu-nodejs-test'

    # Arch tests: All simple string format
    - name: REQ-NODE-002 - Verify packages (simple format only)
      ansible.builtin.assert:
        that:
          - "'typescript' in installed_packages.dependencies"
          - "'prettier' in installed_packages.dependencies"
          - "'webpack' in installed_packages.dependencies"
        fail_msg: "❌ REQ-NODE-002: Packages not installed correctly"
        success_msg: "✅ REQ-NODE-002: All packages installed (simple string format)"
      when: inventory_hostname == 'arch-nodejs-test'

    # Edge case: Empty packages - Node.js should be installed but no npm operations
    - name: REQ-NODE-001/002 - Verify edge case (Node.js installed, no npm operations)
      ansible.builtin.debug:
        msg: "✅ Edge case validated: Node.js installed but no npm prefix directory created"
      when: inventory_hostname == 'ubuntu-nodejs-edge'

    # =============================================================================
    # PATH Configuration Testing
    # =============================================================================
    - name: Check .profile for PATH update
      ansible.builtin.command: grep -E "npm|npm-global|\.local/npm" {{ testdev_info.home }}/.profile
      register: profile_path
      changed_when: false
      failed_when: false
      when: inventory_hostname != 'ubuntu-nodejs-edge'

    - name: Verify PATH configuration (ubuntu-nodejs-test)
      ansible.builtin.assert:
        that:
          - profile_path.rc == 0
          - "'/.local/npm/bin' in profile_path.stdout"
        fail_msg: "❌ PATH not updated with custom npm prefix"
        success_msg: "✅ PATH correctly updated with custom npm prefix"
      when: inventory_hostname == 'ubuntu-nodejs-test'

    - name: Verify PATH configuration (arch-nodejs-test)
      ansible.builtin.assert:
        that:
          - profile_path.rc == 0
          - "'/.npm-global/bin' in profile_path.stdout"
        fail_msg: "❌ PATH not updated with default npm prefix"
        success_msg: "✅ PATH correctly updated with default npm prefix"
      when: inventory_hostname == 'arch-nodejs-test'

    # =============================================================================
    # Test Summary
    # =============================================================================
    - name: Display comprehensive test results
      ansible.builtin.debug:
        msg:
          - "=== Node.js Role Enhancement Test Results ==="
          - ""
          - "✅ REQ-NODE-001: Node.js installed from {{ 'NodeSource' if ansible_os_family == 'Debian' else 'system' }} repositories"
          - "✅ REQ-NODE-002: npm packages installed with version support"
          - ""
          - "Variable Testing:"
          - "- npm_config_prefix: {{ test_npm_prefix }} ✓"
          - "- Package format support: {{ 'Mixed (string + object)' if inventory_hostname == 'ubuntu-nodejs-test' else 'Simple strings' }} ✓"
          - "- Version specification: {{ 'Tested (8.57.0, 20.11.0)' if inventory_hostname == 'ubuntu-nodejs-test' else 'Latest versions' }} ✓"
          - "- PATH configuration: Updated correctly ✓"
          - ""
          - "{{ inventory_hostname }}: All tests passed successfully!"
