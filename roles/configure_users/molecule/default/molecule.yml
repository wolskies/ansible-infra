---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  # REQ-CU-001,006-012,019: Complete user with all features
  - name: ubuntu-user-full
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"

  # REQ-CU-001,006: Minimal user creation and SSH key management
  - name: ubuntu-user-basic
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"

  # REQ-CU-004,005: Superuser flag and passwordless sudo testing
  - name: ubuntu-user-privileged
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"

  # REQ-CU-001,004: Cross-platform group assignment (wheel vs sudo)
  - name: arch-user-basic
    image: carlodepieri/docker-archlinux-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/usr/lib/systemd/systemd"
    env:
      container: docker
    capabilities:
      - SYS_ADMIN
    ulimits:
      - nofile:65535:65535

  # REQ-CU-002: User removal and edge cases
  - name: ubuntu-user-edge-cases
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"

provisioner:
  name: ansible
  config_options:
    defaults:
      remote_tmp: /tmp/ansible-remote-tmp
      local_tmp: /tmp/ansible-local-tmp
      host_key_checking: false
      stdout_callback: ansible.builtin.default
      stdout_callback_format: yaml
  playbooks:
    converge: converge.yml
  inventory:
    group_vars:
      all:
        ansible_user: root
        molecule_test: true
        test_password_hash: "!"  # Locked account for testing

    host_vars:
      # REQ-CU-007-012,019: Complete user preferences testing
      ubuntu-user-full:
        users:
          - name: fulluser
            nodejs:
              packages: ["@angular/cli", "typescript"]
            rust:
              packages: ["cargo-watch", "ripgrep"]
            go:
              packages: []
            neovim:
              enabled: true
            git:
              user_name: "Full User"
              user_email: "fulluser@example.com"
              editor: "nvim"
            dotfiles:
              enable: true
              repository: "file:///tmp/mock-dotfiles"
              dest: ".dotfiles"
              branch: "main"

      # Minimal user preferences and existing user testing
      ubuntu-user-basic:
        users:
          - name: root
            git:
              user_name: "Root User"
              user_email: "root@test.local"
          - name: existinguser
            git:
              user_name: "Existing User"
              user_email: "existing@test.local"

      # Basic user (no special preferences)
      ubuntu-user-privileged:
        users:
          - name: privilegeduser

      # Arch Linux user preferences
      arch-user-basic:
        users:
          - name: archuser

      # No users configured (testing no-op behavior)
      ubuntu-user-edge-cases: {}

verifier:
  name: ansible
