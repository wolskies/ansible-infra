---
# System upgrade and cleanup tasks
# Optional maintenance operations when perform_system_upgrade is enabled

# =============================================================================
# UBUNTU/DEBIAN: APT UPGRADE AND CLEANUP
# =============================================================================

- name: System upgrade and cleanup (Ubuntu/Debian)
  block:
    - name: Upgrade all APT packages
      ansible.builtin.apt:
        upgrade: "{{ packages_upgrade_type | default('safe') }}"
        update_cache: true
      become: true
      register: apt_upgrade_result

    - name: Remove unused APT packages
      ansible.builtin.apt:
        autoremove: true
        purge: true
      become: true
      register: apt_autoremove_result

    - name: Clean APT package cache
      ansible.builtin.apt:
        autoclean: true
      become: true

    - name: Display APT upgrade results
      ansible.builtin.debug:
        msg:
          - "APT upgrade completed"
          - "Upgraded: {{ apt_upgrade_result.stdout_lines | select('match', '.*upgraded.*') | list | length > 0 }}"
          - "Autoremove performed: {{ apt_autoremove_result.changed }}"
      when: ansible_verbosity >= 1

  when: ansible_distribution in ['Ubuntu', 'Debian']
  tags:
    - upgrade
    - apt
    - maintenance

# =============================================================================
# ARCH LINUX: PACMAN UPGRADE
# =============================================================================

- name: System upgrade (Arch Linux)
  block:
    - name: Upgrade all pacman packages
      community.general.pacman:
        upgrade: true
      become: true
      register: pacman_upgrade_result

    - name: Display pacman upgrade results
      ansible.builtin.debug:
        msg: "Pacman upgrade completed: {{ pacman_upgrade_result.changed }}"
      when: ansible_verbosity >= 1

  when: ansible_distribution == 'Archlinux'
  tags:
    - upgrade
    - pacman
    - maintenance

# =============================================================================
# MACOS: HOMEBREW UPGRADE AND CLEANUP
# =============================================================================

- name: System upgrade and cleanup (macOS)
  block:
    - name: Upgrade all Homebrew packages
      community.general.homebrew:
        upgrade_all: true
      register: homebrew_upgrade_result

    - name: Clean up Homebrew
      ansible.builtin.command: brew cleanup
      changed_when: false
      register: homebrew_cleanup_result

    - name: Display Homebrew upgrade results
      ansible.builtin.debug:
        msg:
          - "Homebrew upgrade completed: {{ homebrew_upgrade_result.changed }}"
          - "Cleanup performed"
      when: ansible_verbosity >= 1

  when: ansible_distribution == 'MacOSX'
  tags:
    - upgrade
    - homebrew
    - maintenance

# =============================================================================
# SYSTEM RESTART HANDLER TRIGGER
# =============================================================================

- name: Check if system restart is needed
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required
  when: ansible_distribution in ['Ubuntu', 'Debian']

- name: Notify restart handler if needed
  ansible.builtin.debug:
    msg: "System restart may be required after package upgrades"
  when:
    - ansible_distribution in ['Ubuntu', 'Debian']
    - reboot_required.stat.exists | default(false)
  notify: restart system
  changed_when: true

# =============================================================================
# UPGRADE SUMMARY
# =============================================================================

- name: Display upgrade summary
  ansible.builtin.debug:
    msg:
      - "=== System Upgrade Summary ==="
      - "Platform: {{ ansible_distribution }}"
      - "Upgrade performed: {{ packages_perform_system_upgrade }}"
      - "Restart required: {{ reboot_required.stat.exists | default(false) }}"
  when: ansible_verbosity >= 1
  tags:
    - summary
    - upgrade
