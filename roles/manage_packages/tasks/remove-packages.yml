---
# Remove packages using the appropriate package manager
# Handles package removal with proper cleanup

# =============================================================================
# UBUNTU/DEBIAN: APT PACKAGE REMOVAL
# =============================================================================

- name: Remove APT packages (Ubuntu/Debian)
  ansible.builtin.package:
    name: "{{ final_packages_remove }}"
    state: absent
    purge: true
  become: true
  when:
    - ansible_distribution in ['Ubuntu', 'Debian']
    - final_packages_remove is defined
    - final_packages_remove | length > 0
  register: apt_remove_result
  tags:
    - remove
    - apt
    - cleanup

# =============================================================================
# ARCH LINUX: PACMAN PACKAGE REMOVAL
# =============================================================================

- name: Remove pacman packages (Arch Linux)
  community.general.pacman:
    name: "{{ final_packages_remove }}"
    state: absent
  become: true
  when:
    - ansible_distribution == 'Archlinux'
    - final_packages_remove is defined
    - final_packages_remove | length > 0
  register: pacman_remove_result
  tags:
    - remove
    - pacman
    - cleanup

# =============================================================================
# MACOS: HOMEBREW PACKAGE REMOVAL
# =============================================================================

- name: Remove Homebrew packages (macOS)
  community.general.homebrew:
    name: "{{ final_packages_remove }}"
    state: absent
  when:
    - ansible_distribution == 'MacOSX'
    - final_packages_remove is defined
    - final_packages_remove | length > 0
  register: homebrew_remove_result
  tags:
    - remove
    - homebrew
    - cleanup

- name: Remove Homebrew casks (macOS)
  community.general.homebrew_cask:
    name: "{{ packages_homebrew_casks_remove | default([]) }}"
    state: absent
  when:
    - ansible_distribution == 'MacOSX'
    - packages_homebrew_casks_remove is defined
    - packages_homebrew_casks_remove | length > 0
  register: homebrew_cask_remove_result
  tags:
    - remove
    - homebrew
    - casks
    - cleanup

# =============================================================================
# SET REMOVAL FACTS
# =============================================================================

- name: Set package removal facts (Ubuntu/Debian)
  ansible.builtin.set_fact:
    removed_packages: "{{ final_packages_remove | default([]) }}"
    removal_changed: "{{ apt_remove_result.changed | default(false) }}"
  when: ansible_distribution in ['Ubuntu', 'Debian']
  tags:
    - facts
    - remove

- name: Set package removal facts (Arch Linux)
  ansible.builtin.set_fact:
    removed_packages: "{{ final_packages_remove | default([]) }}"
    removal_changed: "{{ pacman_remove_result.changed | default(false) }}"
  when: ansible_distribution == 'Archlinux'
  tags:
    - facts
    - remove

- name: Set package removal facts (macOS)
  ansible.builtin.set_fact:
    removed_packages: "{{ final_packages_remove | default([]) }}"
    removed_casks: "{{ packages_homebrew_casks_remove | default([]) }}"
    removal_changed: "{{ (homebrew_remove_result.changed | default(false)) or (homebrew_cask_remove_result.changed | default(false)) }}"
  when: ansible_distribution == 'MacOSX'
  tags:
    - facts
    - remove

# =============================================================================
# REMOVAL SUMMARY
# =============================================================================

- name: Display removal summary
  ansible.builtin.debug:
    msg:
      - "=== Package Removal Summary ==="
      - "Packages removed: {{ removed_packages | default([]) | length }}"
      - "Casks removed: {{ removed_casks | default([]) | length }}"
      - "Changes made: {{ removal_changed | default(false) }}"
  when:
    - (removed_packages | default([]) | length > 0) or (removed_casks | default([]) | length > 0)
    - ansible_verbosity >= 1
  tags:
    - summary
    - remove
