---
# Setup repositories, taps, and GPG keys
# Handles APT repositories, Homebrew taps

# =============================================================================
# UBUNTU/DEBIAN: APT REPOSITORIES AND KEYS
# =============================================================================

- name: Setup APT repositories (Ubuntu/Debian)
  block:
    - name: Add APT GPG keys
      ansible.builtin.apt_key:
        url: "{{ item }}"
        state: present
      loop: "{{ packages_apt_keys | default([]) }}"
      become: true
      when:
        - packages_apt_keys is defined
        - packages_apt_keys | length > 0
        - item.startswith('http')
      register: apt_key_results
      failed_when: false

    - name: Add APT repositories
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
        update_cache: false  # We'll update cache in next step
      loop: "{{ packages_apt_repositories | default([]) }}"
      become: true
      when:
        - packages_apt_repositories is defined
        - packages_apt_repositories | length > 0
      register: apt_repo_results
      failed_when: false

    - name: Display repository setup results
      ansible.builtin.debug:
        msg:
          - "APT setup results:"
          - "GPG keys added: {{ apt_key_results.results | default([]) | selectattr('failed', 'undefined') | list | length }}/{{ packages_apt_keys | default([]) | length }}"
          - "Repositories added: {{ apt_repo_results.results | default([]) | selectattr('failed', 'undefined') | list | length }}/{{ packages_apt_repositories | default([]) | length }}"
      when:
        - (apt_key_results is defined or apt_repo_results is defined)
        - ansible_verbosity >= 1

  when: ansible_distribution in ['Ubuntu', 'Debian']
  tags:
    - repositories
    - apt
    - keys

# =============================================================================
# MACOS: HOMEBREW TAPS
# =============================================================================

- name: Setup Homebrew taps (macOS)
  block:
    - name: Tap Homebrew repositories
      community.general.homebrew_tap:
        tap: "{{ item }}"
        state: present
      loop: "{{ packages_homebrew_taps | default([]) }}"
      when:
        - packages_homebrew_taps is defined
        - packages_homebrew_taps | length > 0

    - name: Display taps setup results
      ansible.builtin.debug:
        msg:
          - "Homebrew taps added: {{ packages_homebrew_taps | default([]) | length }}"
          - "Taps: {{ packages_homebrew_taps | default([]) | join(', ') }}"
      when:
        - packages_homebrew_taps is defined
        - packages_homebrew_taps | length > 0
        - ansible_verbosity >= 1

  when: ansible_distribution == 'MacOSX'
  tags:
    - repositories
    - taps
    - homebrew

# =============================================================================
# ARCH LINUX: NO ADDITIONAL REPOSITORIES (Uses AUR via paru)
# =============================================================================

- name: Arch Linux repository info
  ansible.builtin.debug:
    msg: "Arch Linux uses official repositories + AUR via paru - no additional repository setup needed"
  when:
    - ansible_distribution == 'Archlinux'
    - ansible_verbosity >= 1
  tags:
    - repositories
    - archlinux
