---
# Install and ensure package managers are available
# Homebrew for macOS, paru for Arch Linux AUR

# =============================================================================
# MACOS: HOMEBREW INSTALLATION
# =============================================================================

- name: Install Homebrew (macOS)
  block:
    - name: Check if Homebrew is installed
      ansible.builtin.stat:
        path: "{{ '/opt/homebrew/bin/brew' if ansible_architecture == 'arm64' else '/usr/local/bin/brew' }}"
      register: homebrew_check

    - name: Download Homebrew installation script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
        dest: /tmp/homebrew_install.sh
        mode: '0755'
      when: not homebrew_check.stat.exists

    - name: Install Homebrew
      ansible.builtin.command: /bin/bash /tmp/homebrew_install.sh
      environment:
        NONINTERACTIVE: "1"
      when: not homebrew_check.stat.exists
      become: false

    - name: Add Homebrew to PATH
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.zprofile"
        line: 'eval "$(/opt/homebrew/bin/brew shellenv)"'
        create: true
      when:
        - not homebrew_check.stat.exists
        - ansible_architecture == 'arm64'
        - ansible_user_shell is match(".*zsh")

    - name: Clean up installation script
      ansible.builtin.file:
        path: /tmp/homebrew_install.sh
        state: absent
      when: not homebrew_check.stat.exists

  when: ansible_distribution == 'MacOSX'
  tags:
    - homebrew
    - macos
    - package-managers

# =============================================================================
# ARCH LINUX: PARU AUR HELPER INSTALLATION
# =============================================================================

- name: Install paru AUR helper (Arch Linux)
  block:
    - name: Check if paru is installed
      ansible.builtin.command: which paru
      register: paru_check
      failed_when: false
      changed_when: false

    - name: Install base-devel and git for AUR building
      community.general.pacman:
        name:
          - base-devel
          - git
        state: present
      become: true
      when: paru_check.rc != 0

    - name: Clone paru repository
      ansible.builtin.git:
        repo: https://aur.archlinux.org/paru.git
        dest: /tmp/paru
        update: true
      when: paru_check.rc != 0
      become: false

    - name: Build and install paru
      ansible.builtin.command:
        cmd: makepkg -si --noconfirm
        chdir: /tmp/paru
      when: paru_check.rc != 0
      become: false

    - name: Clean up paru build directory
      ansible.builtin.file:
        path: /tmp/paru
        state: absent
      when: paru_check.rc != 0

  when: ansible_distribution == 'Archlinux'
  tags:
    - paru
    - aur
    - archlinux
    - package-managers

# =============================================================================
# UBUNTU/DEBIAN: ENSURE APT IS READY
# =============================================================================

- name: Ensure APT is ready (Ubuntu/Debian)
  block:
    - name: Wait for APT lock to be released
      ansible.builtin.shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          sleep 1
        done
      changed_when: false

    - name: Ensure APT cache directory exists
      ansible.builtin.file:
        path: /var/lib/apt/lists
        state: directory
        mode: '0755'
      become: true

  when: ansible_distribution in ['Ubuntu', 'Debian']
  tags:
    - apt
    - ubuntu
    - debian
    - package-managers
