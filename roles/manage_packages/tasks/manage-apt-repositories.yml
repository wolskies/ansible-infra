---
# APT repository management for Ubuntu/Debian systems
# Intelligent GPG key handling: download from URLs or use local files

- name: Install GPG keys for APT repositories
  block:
    # Handle repositories with GPG key URL specified - download them
    - name: Download GPG keys from URLs
      ansible.builtin.get_url:
        url: "{{ item.gpg_key_url }}"
        dest: "/tmp/{{ item.name }}.gpg"
        mode: '0644'
        timeout: 30
        validate_certs: true
      loop: "{{ merged_apt_repositories }}"
      when:
        - item.gpg_key_url is defined
        - item.gpg_key_url | length > 0
      register: gpg_key_downloads

    # Handle repositories without URL - expect local GPG files
    - name: Check for local GPG key files
      ansible.builtin.stat:
        path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/{{ item.name }}.gpg"
      loop: "{{ merged_apt_repositories }}"
      when:
        - item.gpg_key_url is not defined or item.gpg_key_url | length == 0
      register: local_gpg_files
      delegate_to: localhost

    - name: Copy local GPG keys to target
      ansible.builtin.copy:
        src: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/{{ item.item.name }}.gpg"
        dest: "/tmp/{{ item.item.name }}.gpg"
        mode: '0644'
      loop: "{{ local_gpg_files.results | default([]) }}"
      when:
        - item.stat is defined
        - item.stat.exists
      register: local_gpg_copied

    - name: Convert and install GPG keys to APT keyring
      ansible.builtin.command:
        cmd: gpg --dearmor --output "/usr/share/keyrings/{{ item.name }}.gpg" "/tmp/{{ item.name }}.gpg"
      loop: "{{ merged_apt_repositories }}"
      args:
        creates: "/usr/share/keyrings/{{ item.name }}.gpg"
      become: true
      when:
        - (item.gpg_key_url is defined and item.gpg_key_url | length > 0) or
          (local_gpg_files.results | selectattr('item.name', 'equalto', item.name) | selectattr('stat.exists', 'equalto', true) | list | length > 0)

    - name: Set correct permissions on GPG keyring files
      ansible.builtin.file:
        path: "/usr/share/keyrings/{{ item.name }}.gpg"
        mode: '0644'
        owner: root
        group: root
      loop: "{{ merged_apt_repositories }}"
      become: true
      when:
        - (item.gpg_key_url is defined and item.gpg_key_url | length > 0) or
          (local_gpg_files.results | selectattr('item.name', 'equalto', item.name) | selectattr('stat.exists', 'equalto', true) | list | length > 0)

    - name: Clean up temporary GPG key files
      ansible.builtin.file:
        path: "/tmp/{{ item.name }}.gpg"
        state: absent
      loop: "{{ merged_apt_repositories }}"
      when:
        - (item.gpg_key_url is defined and item.gpg_key_url | length > 0) or
          (local_gpg_files.results | selectattr('item.name', 'equalto', item.name) | selectattr('stat.exists', 'equalto', true) | list | length > 0)
  when: merged_apt_repositories | length > 0

- name: Add APT repositories with proper signed-by keyring references
  ansible.builtin.apt_repository:
    repo: "{{ final_repo_line }}"
    state: present
    filename: "{{ item.name }}"
    update_cache: false
  loop: "{{ merged_apt_repositories }}"
  vars:
    # Build clean repository line with our keyring reference
    final_repo_line: >-
      {%- if 'signed-by=' in item.repo_line -%}
        {{ item.repo_line | regex_replace('signed-by=([^\\s\\]]+)', 'signed-by=/usr/share/keyrings/' + item.name + '.gpg') }}
      {%- elif '[' in item.repo_line -%}
        {{ item.repo_line | regex_replace('\\[([^\\]]*)\\]', '[\\1 signed-by=/usr/share/keyrings/' + item.name + '.gpg]') }}
      {%- else -%}
        {{ item.repo_line.split(' ', 1)[0] }} [signed-by=/usr/share/keyrings/{{ item.name }}.gpg] {{ item.repo_line.split(' ', 1)[1] }}
      {%- endif -%}
  become: true
  register: apt_repos_added
  when: merged_apt_repositories | length > 0

- name: Update APT cache after adding repositories
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
  become: true
  when:
    - merged_apt_repositories | length > 0

