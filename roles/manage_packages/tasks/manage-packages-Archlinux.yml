---
- name: Update Pacman cache
  community.general.pacman:
    update_cache: true
  become: true

- name: Remove packages via Pacman
  community.general.pacman:
    name: "{{ merged_packages_remove }}"
    state: absent
  become: true
  when: merged_packages_remove | length > 0

- name: Upgrade all Pacman packages
  community.general.pacman:
    update_cache: false
    upgrade: true
  become: true

# Branch based on AUR enablement
- name: Install packages (AUR disabled - pacman only)
  community.general.pacman:
    name: "{{ merged_packages_install }}"
    state: present
  become: true
  when:
    - merged_packages_install | length > 0
    - not (pacman.enable_aur | default(false))

- name: Install packages (AUR enabled)
  block:
    - name: Ensure ansible_user can run pacman without password
      ansible.builtin.lineinfile:
        path: "/etc/sudoers.d/11-install-{{ ansible_user_id }}"
        line: "{{ ansible_user_id }} ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        create: yes
        mode: "0644"
        validate: "visudo -cf %s"
      become: true

    - name: Install packages via kewlfft.aur module (handles both official and AUR)
      kewlfft.aur.aur:
        name: "{{ merged_packages_install }}"
        use: auto # Auto-detects: yay, paru, pacaur, trizen, pikaur, or falls back to makepkg
        state: present
      become: false # Run as ansible_user, not root
  when:
    - merged_packages_install | length > 0
    - pacman.enable_aur | default(false)

- name: Gather package facts (Arch Linux)
  ansible.builtin.package_facts:
    manager: pacman
  when: merged_packages_install | length > 0 or merged_packages_remove | length > 0
