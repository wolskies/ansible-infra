---
- name: Update Pacman cache
  community.general.pacman:
    update_cache: true
  become: true

- name: Remove packages via Pacman
  community.general.pacman:
    name: "{{ merged_packages_remove }}"
    state: absent
  become: true
  when: merged_packages_remove | length > 0

- name: Upgrade all Pacman packages
  community.general.pacman:
    update_cache: false
    upgrade: true
  become: true

# Branch based on AUR enablement
- name: Install packages (AUR disabled - pacman only)
  community.general.pacman:
    name: "{{ merged_packages_install }}"
    state: present
  become: true
  when:
    - merged_packages_install | length > 0
    - not infrastructure.host.packages.pacman.enable_aur

- name: Install packages (AUR enabled - use paru)
  block:
    - name: Check if paru is available
      ansible.builtin.command: which paru
      register: paru_check
      changed_when: false
      failed_when: false

    - name: Install paru if missing
      ansible.builtin.include_tasks: install-paru.yml
      when: paru_check.rc != 0

    - name: Install all packages via paru (handles both official and AUR)
      ansible.builtin.command:
        cmd: "paru -S --noconfirm --needed {{ merged_packages_install | join(' ') }}"
      become: false
      register: paru_result
      changed_when: "'installing' in paru_result.stdout or 'upgrading' in paru_result.stdout"
      failed_when: paru_result.rc != 0
  when:
    - merged_packages_install | length > 0
    - infrastructure.host.packages.pacman.enable_aur

- name: Gather package facts (Arch Linux)
  ansible.builtin.package_facts:
    manager: pacman
  when: merged_packages_install | length > 0 or merged_packages_remove | length > 0
