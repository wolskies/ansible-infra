---
# Install packages using OS package managers
# Handles APT (Ubuntu/Debian), Pacman + AUR (Arch), Homebrew + Casks (macOS)
# Third-party packages (pip, npm, cargo, go) handled by separate role

# =============================================================================
# UBUNTU/DEBIAN: APT PACKAGE INSTALLATION
# =============================================================================

- name: Install APT packages (Ubuntu/Debian)
  ansible.builtin.package:
    name: "{{ final_packages_install }}"
    state: present
  become: true
  when:
    - ansible_distribution in ['Ubuntu', 'Debian']
    - final_packages_install is defined
    - final_packages_install | length > 0
  register: apt_install_result
  tags:
    - install
    - apt
    - packages

# =============================================================================
# ARCH LINUX: PACMAN + AUR PACKAGE INSTALLATION
# =============================================================================

- name: Install pacman packages (Arch Linux)
  community.general.pacman:
    name: "{{ final_packages_install }}"
    state: present
  become: true
  when:
    - ansible_distribution == 'Archlinux'
    - final_packages_install is defined
    - final_packages_install | length > 0
  register: pacman_install_result
  tags:
    - install
    - pacman
    - packages

- name: Install AUR packages with paru (Arch Linux)
  ansible.builtin.command: paru -S --noconfirm {{ item }}
  loop: "{{ packages_aur_packages | default([]) }}"
  become: false  # paru should not run as root
  when:
    - ansible_distribution == 'Archlinux'
    - packages_aur_packages is defined
    - packages_aur_packages | length > 0
  register: aur_install_result
  changed_when: "'installing' in aur_install_result.stdout"
  failed_when:
    - aur_install_result.rc != 0
    - "'already satisfied' not in aur_install_result.stdout"
  tags:
    - install
    - aur
    - packages

# =============================================================================
# MACOS: HOMEBREW PACKAGES + CASKS
# =============================================================================

- name: Install Homebrew packages (macOS)
  community.general.homebrew:
    name: "{{ final_packages_install }}"
    state: present
  when:
    - ansible_distribution == 'MacOSX'
    - final_packages_install is defined
    - final_packages_install | length > 0
  register: homebrew_install_result
  tags:
    - install
    - homebrew
    - packages

- name: Install Homebrew casks (macOS)
  community.general.homebrew_cask:
    name: "{{ packages_homebrew_casks }}"
    state: present
  when:
    - ansible_distribution == 'MacOSX'
    - packages_homebrew_casks is defined
    - packages_homebrew_casks | length > 0
  register: homebrew_cask_result
  tags:
    - install
    - homebrew
    - casks

# =============================================================================
# SET INSTALLATION FACTS
# =============================================================================

- name: Set package installation facts (Ubuntu/Debian)
  ansible.builtin.set_fact:
    installed_packages: "{{ final_packages_install | default([]) }}"
    packages_changed: "{{ apt_install_result.changed | default(false) }}"
  when: ansible_distribution in ['Ubuntu', 'Debian']
  tags:
    - facts
    - install

- name: Set package installation facts (Arch Linux)
  ansible.builtin.set_fact:
    installed_packages: "{{ final_packages_install | default([]) }}"
    installed_aur_packages: "{{ packages_aur_packages | default([]) }}"
    packages_changed: "{{ (pacman_install_result.changed | default(false)) or (aur_install_result.changed | default(false)) }}"
  when: ansible_distribution == 'Archlinux'
  tags:
    - facts
    - install

- name: Set package installation facts (macOS)
  ansible.builtin.set_fact:
    installed_packages: "{{ final_packages_install | default([]) }}"
    installed_casks: "{{ packages_homebrew_casks | default([]) }}"
    packages_changed: "{{ (homebrew_install_result.changed | default(false)) or (homebrew_cask_result.changed | default(false)) }}"
  when: ansible_distribution == 'MacOSX'
  tags:
    - facts
    - install

# =============================================================================
# INSTALLATION SUMMARY
# =============================================================================

- name: Display installation summary
  ansible.builtin.debug:
    msg:
      - "=== Package Installation Summary ==="
      - "Platform: {{ ansible_distribution }}"
      - "OS packages: {{ final_packages_install | default([]) | length }}"
      - "AUR packages: {{ packages_aur_packages | default([]) | length if ansible_distribution == 'Archlinux' else 'N/A' }}"
      - "Homebrew casks: {{ packages_homebrew_casks | default([]) | length if ansible_distribution == 'MacOSX' else 'N/A' }}"
      - "Changes made: {{ packages_changed | default(false) }}"
  when: ansible_verbosity >= 1
  tags:
    - summary
    - install
