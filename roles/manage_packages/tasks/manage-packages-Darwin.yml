---
- name: Merge Homebrew packages from all sources
  ansible.builtin.set_fact:
    merged_homebrew_packages_install: "{{ merged_packages_install | default([]) }}"
    merged_homebrew_packages_remove: "{{ merged_packages_remove | default([]) }}"
  when: infrastructure.host.packages is defined

- name: Merge Homebrew casks from all sources
  ansible.builtin.set_fact:
    merged_homebrew_casks_install: >-
      {{
        (infrastructure.host.packages.casks_present.all | default([]) if infrastructure.host.packages.casks_present is defined else []) +
        (infrastructure.host.packages.casks_present.group | default([]) if infrastructure.host.packages.casks_present is defined else []) +
        (infrastructure.host.packages.casks_present.host | default([]) if infrastructure.host.packages.casks_present is defined else [])
        | unique | list
      }}
    merged_homebrew_casks_remove: >-
      {{
        (infrastructure.host.packages.casks_remove | default([]) if infrastructure.host.packages.casks_remove is defined else [])
        | unique | list
      }}
  when: infrastructure.host.packages is defined

- name: Install and manage packages via Homebrew (geerlingguy.mac.homebrew)
  ansible.builtin.include_role:
    name: geerlingguy.mac.homebrew
  vars:
    # Let the role use its own defaults for paths and ownership
    # It will use ansible_user_id which should be properly set from gathered facts

    # Package management
    homebrew_installed_packages: "{{ merged_homebrew_packages_install | default([]) }}"
    homebrew_uninstalled_packages: "{{ merged_homebrew_packages_remove | default([]) }}"
    homebrew_cask_apps: "{{ merged_homebrew_casks_install | default([]) }}"
    homebrew_cask_uninstalled_apps: "{{ merged_homebrew_casks_remove | default([]) }}"

    # Taps and configuration
    homebrew_taps: "{{ infrastructure.host.packages.homebrew.taps | default([]) if infrastructure.host.packages.homebrew is defined else [] }}"
    homebrew_clear_cache: "{{ infrastructure.host.packages.homebrew.cleanup_cache | default(false) if infrastructure.host.packages.homebrew is defined else false }}"
  when: infrastructure.host.packages is defined
