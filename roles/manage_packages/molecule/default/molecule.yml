---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  # 7-container test scenarios following updated validation plan
  - name: ubuntu-packages-full
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
  - name: ubuntu-packages-basic
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
  - name: ubuntu-packages-layered
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
  - name: ubuntu-repos-layered
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
  - name: arch-packages-basic
    image: carlodepieri/docker-archlinux-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/usr/lib/systemd/systemd"
    env:
      container: docker
    capabilities:
      - SYS_ADMIN
    ulimits:
      - nofile:65535:65535
  - name: ubuntu-edge-cases
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
provisioner:
  name: ansible
  config_options:
    defaults:
      remote_tmp: /tmp/ansible-remote-tmp
      local_tmp: /tmp/ansible-local-tmp
      host_key_checking: false
      stdout_callback: ansible.builtin.default
      stdout_callback_format: yaml
  inventory:
    group_vars:
      all:
        ansible_user: root
        molecule_test: true
        # Base packages using new layered approach (REQ-MP-001)
        manage_packages_all:
          Debian:
            - name: curl
            - name: git
          Archlinux:
            - name: curl
            - name: git
        # Base repositories using new layered approach (REQ-MP-002)
        apt_repositories_all:
          Ubuntu: []
    host_vars:
      # REQ-MP-003: Complete repository + package management
      ubuntu-packages-full:
        manage_packages_group:
          Debian:
            - name: nginx
        manage_packages_host:
          Debian:
            - name: docker-ce
            - name: telnet
              state: absent
            - name: rsh-server
              state: absent
        apt_repositories_group:
          Ubuntu: []
        apt_repositories_host:
          Ubuntu:
            - name: docker
              uris: "https://download.docker.com/linux/ubuntu"
              suites: "{{ ansible_distribution_release }}"
              components: "stable"
              signed_by: "https://download.docker.com/linux/ubuntu/gpg"
        apt:
          system_upgrade:
            enable: true
            type: "safe"

      # Basic package management without repositories
      ubuntu-packages-basic:
        manage_packages_group:
          Debian: []
        manage_packages_host:
          Debian:
            - name: vim
            - name: nano
              state: absent
        apt_repositories_group:
          Ubuntu: []
        apt_repositories_host:
          Ubuntu: []

      # REQ-MP-001: Demonstrates layered package combining (using default Ubuntu packages only)
      ubuntu-packages-layered:
        manage_packages_group:
          Debian:
            - name: nginx # From group level (available in default repos)
        manage_packages_host:
          Debian:
            - name: htop # From host level (available in default repos)
            - name: nano # Host adds another package (different from all level)
              state: absent
        apt_repositories_group:
          Ubuntu: []
        apt_repositories_host:
          Ubuntu: []

      # REQ-MP-002: Demonstrates layered repository combining (Docker repository only, per SRD example)
      ubuntu-repos-layered:
        manage_packages_group:
          Debian: []
        manage_packages_host:
          Debian:
            - name: docker-ce
        apt_repositories_group:
          Ubuntu: [] # Empty group level for this test
        apt_repositories_host:
          Ubuntu:
            - name: docker
              uris: "https://download.docker.com/linux/ubuntu"
              suites: "{{ ansible_distribution_release }}"
              components: "stable"
              signed_by: "https://download.docker.com/linux/ubuntu/gpg"

      # Arch Linux without AUR (container-compatible)
      arch-packages-basic:
        manage_packages_group:
          Archlinux: []
        manage_packages_host:
          Archlinux:
            - name: vim
            - name: nano
              state: absent
        pacman:
          enable_aur: false

      # Edge cases: empty configurations
      ubuntu-edge-cases:
        manage_packages_group:
          Debian: []
        manage_packages_host:
          Debian: []
        apt_repositories_group:
          Ubuntu: []
        apt_repositories_host:
          Ubuntu: []
verifier:
  name: ansible
