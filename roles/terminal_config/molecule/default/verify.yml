---
- name: Verify terminal_config installation
  hosts: all
  become: true
  tasks:
    # =============================================================================
    # PRE-CONDITION VERIFICATION
    # =============================================================================
    - name: Verify test user exists
      ansible.builtin.getent:
        database: passwd
        key: testdev
      register: user_check

    - name: Assert user was created
      ansible.builtin.assert:
        that:
          - user_check.ansible_facts.getent_passwd.testdev is defined
        fail_msg: "Test user 'testdev' was not created"

    - name: Verify user has home directory
      ansible.builtin.stat:
        path: "/home/testdev"
      register: home_dir

    - name: Assert home directory exists
      ansible.builtin.assert:
        that:
          - home_dir.stat.exists
          - home_dir.stat.isdir
        fail_msg: "Test user home directory does not exist"

    - name: Check tic command availability
      ansible.builtin.command: which tic
      register: tic_check
      changed_when: false
      failed_when: false

    # =============================================================================
    # POST-EXECUTION VERIFICATION
    # =============================================================================
    - name: Check terminfo directory exists
      ansible.builtin.stat:
        path: "/home/testdev/.terminfo"
      register: terminfo_dir

    - name: Assert terminfo directory was created
      ansible.builtin.assert:
        that:
          - terminfo_dir.stat.exists
          - terminfo_dir.stat.isdir
          - terminfo_dir.stat.pw_name == "testdev"
        fail_msg: "Terminfo directory not created or wrong ownership"

    # =============================================================================
    # SPECIFIC TERMINAL VERIFICATION
    # =============================================================================
    - name: Check alacritty terminfo entries
      ansible.builtin.command: sudo -u testdev infocmp -x alacritty
      register: alacritty_check
      changed_when: false
      failed_when: false

    - name: Check alacritty-direct terminfo entries
      ansible.builtin.command: sudo -u testdev infocmp -x alacritty-direct
      register: alacritty_direct_check
      changed_when: false
      failed_when: false

    - name: Check kitty terminfo entries
      ansible.builtin.command: sudo -u testdev infocmp -x xterm-kitty
      register: kitty_check
      changed_when: false
      failed_when: false

    - name: Check wezterm terminfo entries
      ansible.builtin.command: sudo -u testdev infocmp -x wezterm
      register: wezterm_check
      changed_when: false
      failed_when: false

    # =============================================================================
    # COMPREHENSIVE ASSERTIONS
    # =============================================================================
    - name: Assert essential terminfo entries are accessible
      ansible.builtin.assert:
        that:
          - alacritty_check.rc == 0 or alacritty_direct_check.rc == 0
          - kitty_check.rc == 0
          - wezterm_check.rc == 0
        fail_msg: "Required terminfo entries not accessible. Role should ensure terminal entries are available."
      when: tic_check.rc == 0
      ignore_errors: true
      register: terminfo_assertion

    - name: Display terminfo availability status for debugging
      ansible.builtin.debug:
        msg:
          - "=== Terminfo Check Results ==="
          - "tic available: {{ tic_check.rc == 0 }}"
          - "alacritty (rc={{ alacritty_check.rc }}): {{ 'AVAILABLE' if alacritty_check.rc == 0 else 'NOT FOUND' }}"
          - "alacritty-direct (rc={{ alacritty_direct_check.rc }}): {{ 'AVAILABLE' if alacritty_direct_check.rc == 0 else 'NOT FOUND' }}"
          - "kitty (rc={{ kitty_check.rc }}): {{ 'AVAILABLE' if kitty_check.rc == 0 else 'NOT FOUND' }}"
          - "wezterm (rc={{ wezterm_check.rc }}): {{ 'AVAILABLE' if wezterm_check.rc == 0 else 'NOT FOUND' }}"
          - "Role outcome: {{ 'PASS' if (tic_check.rc != 0) or (terminfo_assertion is not failed) else 'FAIL' }}"

    - name: Skip verification if tic not available
      ansible.builtin.debug:
        msg: "Skipping terminfo verification - tic command not available in container"
      when: tic_check.rc != 0

    # =============================================================================
    # IDEMPOTENCY TEST SETUP
    # =============================================================================
    - name: Run terminal_config role again for idempotency test
      ansible.builtin.include_role:
        name: wolskies.infrastructure.terminal_config
      vars:
        terminal_user: testdev
        terminal_entries:
          - alacritty
          - kitty
          - wezterm
      register: second_run

    - name: Assert idempotency (no changes on second run)
      ansible.builtin.assert:
        that:
          - not second_run.changed
        fail_msg: "Role is not idempotent - made changes on second run"

    # =============================================================================
    # SUMMARY DISPLAY
    # =============================================================================
    - name: Display terminal config verification summary
      ansible.builtin.debug:
        msg:
          - "=== Terminal Configuration Verification Complete ==="
          - "✅ Pre-conditions: User exists, home directory created"
          - "✅ Terminfo directory: {{ 'PASS' if terminfo_dir.stat.exists else 'FAIL' }}"
          - "✅ Alacritty terminfo: {{ 'PASS' if (alacritty_check.rc == 0 or alacritty_direct_check.rc == 0) else 'FAIL' }}"
          - "✅ Kitty terminfo: {{ 'PASS' if kitty_check.rc == 0 else 'FAIL' }}"
          - "✅ WezTerm terminfo: {{ 'PASS' if wezterm_check.rc == 0 else 'FAIL' }}"
          - "✅ Idempotency: {{ 'PASS' if not second_run.changed else 'FAIL' }}"
          - "User: testdev configured with modern terminal support"
