---
# Main extra packages management tasks
# Handles user-defined and discovered packages beyond basic_setup essentials

- name: Extra packages validation and setup
  block:
    - name: Debug extra packages configuration
      ansible.builtin.debug:
        msg:
          - "Extra packages management for {{ inventory_hostname }}"
          - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Package source: Standard inventory variables (group_vars/host_vars)"
          - "Discovery integration: Populates same variables, no special handling"
      tags:
        - extra-packages
        - debug
        - validation

# No validation needed - packages come from standard inventory variables

  tags:
    - always
    - extra-packages
    - validation

- name: Merge package sources
  ansible.builtin.include_tasks: merge-package-sources.yml
  tags:
    - always
    - extra-packages
    - merge

- name: Process additional repositories
  block:
    - name: Configure additional repositories
      ansible.builtin.include_tasks: process-repositories.yml
      when:
        - enable_additional_repositories | default(true)
        - additional_repositories is defined
      tags:
        - repositories

  rescue:
    - name: Handle repository configuration errors
      ansible.builtin.debug:
        msg: "Repository configuration encountered errors, continuing with package installation"
      tags:
        - debug
        - repositories
        - error-handling

  tags:
    - extra-packages
    - repositories

- name: Install extra packages by category
  block:
    - name: Install system packages
      ansible.builtin.include_tasks: "install-system-packages-{{ ansible_os_family }}.yml"
      when: final_system_packages is defined and final_system_packages | length > 0
      tags:
        - packages
        - system-packages

    - name: Install development packages
      ansible.builtin.include_tasks: "install-development-packages-{{ ansible_os_family }}.yml"
      when: 
        - install_development_packages | default(true)
        - final_development_packages is defined and final_development_packages | length > 0
      tags:
        - packages
        - development-packages

    - name: Install desktop packages
      ansible.builtin.include_tasks: "install-desktop-packages-{{ ansible_os_family }}.yml"
      when: 
        - install_desktop_packages | default(true)
        - final_desktop_packages is defined and final_desktop_packages | length > 0
      tags:
        - packages
        - desktop-packages

    - name: Install media packages (with confirmation)
      ansible.builtin.include_tasks: "install-media-packages-{{ ansible_os_family }}.yml"
      when: 
        - install_media_packages | default(false)
        - final_media_packages is defined and final_media_packages | length > 0
      tags:
        - packages
        - media-packages

  rescue:
    - name: Handle package installation errors
      ansible.builtin.debug:
        msg: "Some package installations failed. Check logs for details."
      tags:
        - debug
        - packages
        - error-handling

  tags:
    - extra-packages
    - packages

- name: Install language-specific packages
  block:
    - name: Install Python packages
      ansible.builtin.include_tasks: install-python-packages.yml
      when: 
        - install_pip_packages | default(true)
        - final_pip_packages is defined and final_pip_packages | length > 0
      tags:
        - packages
        - python-packages

    - name: Install Node.js packages
      ansible.builtin.include_tasks: install-nodejs-packages.yml
      when: 
        - install_npm_packages | default(true)
        - final_npm_packages is defined and final_npm_packages | length > 0
      tags:
        - packages
        - nodejs-packages

  rescue:
    - name: Handle language package installation errors
      ansible.builtin.debug:
        msg: "Some language-specific package installations failed. Check logs for details."
      tags:
        - debug
        - packages
        - error-handling

  tags:
    - extra-packages
    - language-packages

- name: Process additional services (optional)
  block:
    - name: Configure additional services
      ansible.builtin.include_tasks: process-services.yml
      when:
        - process_additional_services | default(false)
        - additional_services is defined
      tags:
        - services

  rescue:
    - name: Handle service configuration errors
      ansible.builtin.debug:
        msg: "Service configuration encountered errors, check logs for details"
      tags:
        - debug
        - services
        - error-handling

  tags:
    - extra-packages
    - services

- name: Extra packages summary
  block:
    - name: Display installation summary
      ansible.builtin.debug:
        msg:
          - "=== Extra Packages Installation Summary ==="
          - "System packages: {{ final_system_packages | default([]) | length }}"
          - "Development packages: {{ final_development_packages | default([]) | length if install_development_packages else 'skipped' }}"
          - "Desktop packages: {{ final_desktop_packages | default([]) | length if install_desktop_packages else 'skipped' }}"
          - "Media packages: {{ final_media_packages | default([]) | length if install_media_packages else 'skipped' }}"
          - "Python packages: {{ final_pip_packages | default([]) | length if install_pip_packages else 'skipped' }}"
          - "Node.js packages: {{ final_npm_packages | default([]) | length if install_npm_packages else 'skipped' }}"
          - "AUR packages: {{ final_aur_packages | default([]) | length if (install_aur_packages and ansible_distribution == 'Archlinux') else 'skipped/N/A' }}"
          - "Homebrew casks: {{ final_homebrew_casks | default([]) | length if (install_homebrew_casks and ansible_os_family == 'Darwin') else 'skipped/N/A' }}"
      tags:
        - extra-packages
        - summary
        - debug

  tags:
    - always
    - extra-packages
    - summary