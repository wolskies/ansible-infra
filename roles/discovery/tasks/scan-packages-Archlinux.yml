---
# Pacman/AUR Package and Repository Discovery (Arch Linux)

- name: scan-packages-Archlinux | Get explicitly installed packages (not dependencies)
  ansible.builtin.command: "pacman -Qet"
  register: discovery_pacman_explicit_packages
  become: false
  changed_when: false
  failed_when: false

- name: scan-packages-Archlinux | Pacman repository discovery
  block:
    - name: scan-packages-Archlinux | Read pacman configuration
      ansible.builtin.slurp:
        src: "{{ repository_detection.pacman.config }}"
      register: discovery_pacman_config
      become: true
      failed_when: false

    - name: scan-packages-Archlinux | Read pacman mirrorlist
      ansible.builtin.slurp:
        src: "{{ repository_detection.pacman.mirrorlist }}"
      register: discovery_pacman_mirrorlist
      become: true
      failed_when: false

    - name: scan-packages-Archlinux | Check for AUR helpers
      ansible.builtin.stat:
        path: "/usr/bin/{{ item }}"
      register: discovery_aur_helpers_check
      loop: "{{ repository_detection.aur_helpers }}"

    - name: scan-packages-Archlinux | Get AUR packages (if available)
      ansible.builtin.command: "{{ item.item }} -Qm"
      register: discovery_aur_packages
      loop: "{{ discovery_aur_helpers_check.results }}"
      when: item.stat.exists
      become: false
      changed_when: false
      failed_when: false
  rescue:
    - name: scan-packages-Archlinux | Handle pacman discovery errors
      ansible.builtin.debug:
        msg: "Pacman repository discovery failed"

- name: scan-packages-Archlinux | Store Pacman repository discovery results
  ansible.builtin.set_fact:
    discovered_repositories:
      pacman:
        config: "{{ discovery_pacman_config.content | default('') | b64decode }}"
        mirrorlist: "{{ discovery_pacman_mirrorlist.content | default('') | b64decode }}"
        aur_helpers: "{{ (discovery_aur_helpers_check.results | default([])) | selectattr('stat', 'defined') | selectattr('stat.exists') | map(attribute='item') | list }}"
    discovery_aur_packages_result: "{{ discovery_aur_packages }}"
    # Override package facts with explicit packages only
    discovery_archlinux_explicit_packages: "{{ (discovery_pacman_explicit_packages.stdout_lines | default([])) | map('regex_replace', ' .*', '') | list }}"
