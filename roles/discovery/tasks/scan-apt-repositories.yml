---
# Simplified APT Repository Discovery for Ubuntu/Debian systems
# Works with ansible.builtin.apt_repository module - no GPG key complexity needed

- name: Check if sources.list.d directory exists
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d
  register: sources_list_d_exists

- name: Find repository files in sources.list.d
  ansible.builtin.find:
    paths: /etc/apt/sources.list.d
    patterns: "*.list"
  register: repository_files
  when: sources_list_d_exists.stat.exists

- name: Read repository file contents
  ansible.builtin.slurp:
    src: "{{ item.path }}"
  register: repository_contents
  loop: "{{ repository_files.files }}"
  when: repository_files.files is defined

- name: Parse repository information for deb822_repository module
  ansible.builtin.set_fact:
    discovered_repositories: >-
      {%- set repos = [] -%}
      {%- set gpg_key_map = {
        'docker.com': 'https://download.docker.com/linux/ubuntu/gpg',
        'deb.nodesource.com': 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key',
        'dl.google.com': 'https://dl.google.com/linux/linux_signing_key.pub',
        'packages.microsoft.com': 'https://packages.microsoft.com/keys/microsoft.asc',
        'apt.postgresql.org': 'https://www.postgresql.org/media/keys/ACCC4CF8.asc',
        'packages.redis.io': 'https://packages.redis.io/gpg',
        'download.opensuse.org': 'https://download.opensuse.org/repositories/home:/ungoogled_chromium/Ubuntu_22.04/Release.key',
        'ppa.launchpad.net': null
      } -%}
      {%- if repository_contents.results is defined -%}
        {%- for file_result in repository_contents.results -%}
          {%- set file_content = file_result.content | b64decode -%}
          {%- set filename = file_result.source | basename | regex_replace('\.list$', '') -%}
          {%- for line in file_content.split('\n') -%}
            {%- set line = line.strip() -%}
            {%- if line and not line.startswith('#') and line.startswith('deb') -%}
              {%- set parts = line.split() -%}
              {%- if parts | length >= 4 -%}
                {%- set repo_type = parts[0] -%}
                {%- set repo_uri = '' -%}
                {%- set repo_suite = '' -%}
                {%- set repo_components = [] -%}
                {%- set signed_by_key = null -%}
                {%- if '[' in parts[1] -%}
                  {%- set repo_uri = parts[2] -%}
                  {%- set repo_suite = parts[3] -%}
                  {%- set repo_components = parts[4:] -%}
                {%- else -%}
                  {%- set repo_uri = parts[1] -%}
                  {%- set repo_suite = parts[2] -%}
                  {%- set repo_components = parts[3:] -%}
                {%- endif -%}
                {%- for domain, key_url in gpg_key_map.items() -%}
                  {%- if domain in repo_uri and key_url -%}
                    {%- set signed_by_key = key_url -%}
                  {%- endif -%}
                {%- endfor -%}
                {%- set _ = repos.append({
                  'name': filename,
                  'types': repo_type,
                  'uris': repo_uri,
                  'suites': repo_suite,
                  'components': repo_components,
                  'signed_by': signed_by_key,
                  'state': 'present',
                  'enabled': true
                }) -%}
              {%- endif -%}
            {%- endif -%}
          {%- endfor -%}
        {%- endfor -%}
      {%- endif -%}
      {{ repos }}

- name: Debug discovered repositories
  ansible.builtin.debug:
    var: discovered_repositories
  when: discovery_debug | default(false)
