---
# Generate role-specific variables based on discovery results
# Uses structured discovery_host_vars format

- name: Generate role-specific variables
  block:
    - name: Generate basic_setup role variables
      ansible.builtin.set_fact:
        basic_setup_vars:
          # Package management - use structured packages section
          "host_packages_install_{{ ansible_distribution }}": "{{ discovery_host_vars.packages[('host_packages_install_' + ansible_distribution)] | default([]) | unique }}"

          # User management - use structured users section
          user_details: "{{ discovery_host_vars.users.discovered_users_config | default([]) }}"

          # System configuration - use first user's shell as default
          default_user_shell: >-
            {{
              (discovery_host_vars.users.discovered_users_config | default([]) | first).default_user_shell | default('bash')
              if discovery_host_vars.users.discovered_users_config | default([]) | length > 0
              else 'bash'
            }}

    - name: Generate container_platform role variables
      ansible.builtin.set_fact:
        container_platform_vars:
          # Docker configuration - add all regular users to docker group
          docker_users: "{{ discovery_host_vars.users.discovered_users_config | default([]) | map(attribute='name') | list }}"

          # Use geerlingguy.docker role for installation
          docker_install_compose: "{{ discovery_host_vars.docker.docker_compose_available | default(false) }}"

          # Deploy Portainer if Docker is found
          deploy_portainer: true

          # Services to deploy (both canned and generic from structured format)
          docker_services: "{{ discovery_host_vars.docker.install_docker_services | default([]) }}"
      when: discovery_host_vars.docker.install_docker | default(false)

    - name: Generate dotfiles role variables
      ansible.builtin.set_fact:
        dotfiles_vars:
          # Users with dotfiles repositories
          discovered_users_config: "{{ discovery_host_vars.users.discovered_users_config | default([]) }}"
      when:
        - discovery_host_vars.users.discovered_users_config | default([]) | length > 0

    - name: Generate system_tuning role variables
      ansible.builtin.set_fact:
        system_tuning_vars: >-
          {{
            discovery_host_vars.system_tuning | default({}) |
            combine({
              'discovered_user_details': discovery_host_vars.users.discovered_users_config | default([])
            })
          }}

    - name: Generate maintenance role variables
      ansible.builtin.set_fact:
        maintenance_vars:
          # Basic maintenance placeholders (user can customize)
          system_maintenance_enabled: false  # User can enable as needed
          cleanup_old_packages: false        # User can enable as needed

          # Automatic updates (user decision based on machine type)
          enable_automatic_updates: false    # User can enable as needed

          # Development environment detected - maintenance may be useful
          maintain_dev_tools: "{{ (discovery_host_vars.packages[('host_packages_install_' + ansible_distribution)] | default([]) | length) > 100 }}"

    - name: Generate system_security role variables
      ansible.builtin.set_fact:
        system_security_vars:
          # Use structured security section
          enable_firewall: "{{ discovery_host_vars.security.enable_firewall | default(false) }}"
          firewall_type: "{{ discovery_host_vars.security.firewall_type | default('') }}"
          firewall_rules: "{{ discovery_host_vars.security.firewall_rules | default([]) }}"
      when:
        - discovery_host_vars.security is defined
        - discovery_host_vars.security.enable_firewall | default(false)

    - name: Combine all role variables
      ansible.builtin.set_fact:
        all_role_vars: >-
          {{
            basic_setup_vars | default({}) |
            combine(container_platform_vars | default({})) |
            combine(dotfiles_vars | default({})) |
            combine(system_tuning_vars | default({})) |
            combine(maintenance_vars | default({})) |
            combine(system_security_vars | default({}))
          }}

  tags:
    - discovery
    - role-integration
