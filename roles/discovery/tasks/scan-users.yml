---
# User Environment Discovery
# Discovers user configurations, shell preferences, and dotfiles

- name: Discover user environment
  block:
    # Get system users
    - name: Get system users
      ansible.builtin.getent:
        database: passwd
      become: true

    - name: Set current user facts directly from Ansible facts
      ansible.builtin.set_fact:
        current_user_shell: "{{ ansible_user_shell | default('/bin/bash') }}"
        current_user_home: "{{ ansible_env.HOME | default('/home/' + ansible_user) }}"
        current_user_uid: "{{ ansible_user_uid | default('1000') }}"
        current_user_gid: "{{ ansible_user_gid | default('1000') }}"
        actual_user: "{{ ansible_user }}"

    - name: Debug user information
      ansible.builtin.debug:
        msg:
          - "User: {{ actual_user }}"
          - "Home: {{ current_user_home }}"
          - "Shell: {{ current_user_shell }}"
          - "UID: {{ current_user_uid }}"
          - "GID: {{ current_user_gid }}"

    # Discover shell configurations
    - name: Check shell configuration files
      ansible.builtin.stat:
        path: "{{ current_user_home }}/{{ item }}"
      register: shell_configs
      become: false
      loop:
        - .bashrc
        - .bash_profile
        - .zshrc
        - .zsh_profile
        - .profile
        - .config/fish/config.fish

    # Discover dotfiles
    - name: Check for dotfiles directory
      ansible.builtin.stat:
        path: "{{ current_user_home }}/.dotfiles"
      register: dotfiles_directory
      become: false

    - name: Discover dotfiles repository information
      block:
        - name: Check if dotfiles is a git repository
          ansible.builtin.stat:
            path: "{{ current_user_home }}/.dotfiles/.git"
          register: dotfiles_git_dir
          become: false

        - name: Get dotfiles repository URL
          ansible.builtin.command: git -C {{ current_user_home }}/.dotfiles remote get-url origin
          register: dotfiles_remote_url
          become: false
          changed_when: false
          failed_when: false
          when: dotfiles_git_dir.stat.exists

        - name: Get dotfiles repository branch
          ansible.builtin.command: git -C {{ current_user_home }}/.dotfiles branch --show-current
          register: dotfiles_current_branch
          become: false
          changed_when: false
          failed_when: false
          when: dotfiles_git_dir.stat.exists

        - name: Check for dotfiles management tools
          ansible.builtin.stat:
            path: "{{ current_user_home }}/.dotfiles/{{ item }}"
          register: dotfiles_management_tools
          become: false
          loop: "{{ dotfiles_detection.management_tools }}"
      when: dotfiles_directory.stat.exists

    # Check for common application configurations
    - name: Check for application configuration directories
      ansible.builtin.stat:
        path: "{{ current_user_home }}/{{ item }}"
      register: app_configs
      become: false
      loop:
        - .config
        - .ssh/config
        - .gitconfig
        - .tmux.conf
        - .vimrc
        - .nvim
        - .config/Code
        - .config/nvim

    # Discover development tools in user space
    - name: Check for user-installed development tools
      ansible.builtin.stat:
        path: "{{ current_user_home }}/{{ item }}"
      register: user_dev_tools
      become: false
      loop:
        - .cargo
        - .npm
        - .nvm
        - .pyenv
        - .rbenv
        - .sdkman
        - go

- name: Store user discovery results
  ansible.builtin.set_fact:
    discovered_users:
      current_user:
        name: "{{ ansible_user }}"
        home: "{{ current_user_home }}"
        shell: "{{ current_user_shell }}"
        uid: "{{ ansible_facts.getent_passwd[ansible_user][1] }}"
        gid: "{{ ansible_facts.getent_passwd[ansible_user][2] }}"
      
      system_users:
        total: "{{ ansible_facts.getent_passwd.keys() | length }}"
        regular_users: "{{ ansible_facts.getent_passwd | dict2items | selectattr('value.1', '>=', '1000') | selectattr('value.1', '<', '65534') | map(attribute='key') | list }}"
        system_users: "{{ ansible_facts.getent_passwd | dict2items | selectattr('value.1', '<', '1000') | map(attribute='key') | list }}"
      
      shell_config:
        preferred_shell: "{{ current_user_shell | basename }}"
        config_files: "{{ shell_configs.results | selectattr('stat.exists') | map(attribute='item') | list }}"
        
      dotfiles:
        detected: "{{ dotfiles_directory.stat.exists }}"
        is_git_repo: "{{ dotfiles_git_dir.stat.exists | default(false) }}"
        repository_url: "{{ dotfiles_remote_url.stdout | default('') }}"
        current_branch: "{{ dotfiles_current_branch.stdout | default('') }}"
        management_tools: "{{ dotfiles_management_tools.results | default([]) | selectattr('stat.exists') | map(attribute='item') | list }}"
      
      application_configs:
        detected: "{{ app_configs.results | selectattr('stat.exists') | map(attribute='item') | list }}"
        
      development_environment:
        user_tools: "{{ user_dev_tools.results | selectattr('stat.exists') | map(attribute='item') | list }}"
  tags:
    - users
    - dotfiles
    - shell