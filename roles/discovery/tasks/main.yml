---
- name: Set output paths
  ansible.builtin.set_fact:
    discovery_paths:
      host_vars_dir: "{{ (inventory_file | dirname) if inventory_file is defined else 'inventory' }}/host_vars/{{ inventory_hostname }}"
      host_vars_file: "{{ (inventory_file | dirname) if inventory_file is defined else 'inventory' }}/host_vars/{{ inventory_hostname }}/vars.yml"
  delegate_to: localhost
  become: false

- name: Debug discovery paths
  ansible.builtin.debug:
    msg:
      - "inventory_file: {{ inventory_file | default('undefined') }}"
      - "host_vars_dir: {{ discovery_paths.host_vars_dir }}"
      - "host_vars_file: {{ discovery_paths.host_vars_file }}"
  delegate_to: localhost
  become: false
  when: discovery_debug | default(false)

- name: Check if output directory exists
  ansible.builtin.stat:
    path: "{{ discovery_paths.host_vars_dir }}"
  register: directory_stats
  delegate_to: localhost
  become: false

- name: Create output directory
  ansible.builtin.file:
    path: "{{ discovery_paths.host_vars_dir }}"
    state: directory
    mode: "0755"
  when: not directory_stats.stat.exists
  delegate_to: localhost
  become: false

- name: Gather system facts
  ansible.builtin.setup:

- name: Gather package facts (Linux only)
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_system == "Linux"

- name: Discover packages
  ansible.builtin.include_tasks: scan-packages.yml

- name: Discover APT repositories
  ansible.builtin.include_tasks: scan-apt-repositories.yml
  when: ansible_os_family == "Debian"

- name: Discover users
  ansible.builtin.include_tasks: scan-users.yml

- name: Discover firewall rules
  ansible.builtin.include_tasks: scan-firewall.yml

- name: Discover snap and flatpak packages
  ansible.builtin.include_tasks: scan-snap-flatpak.yml

- name: Discover system settings state
  ansible.builtin.include_tasks: scan-system-settings.yml

- name: Get NTP status
  ansible.builtin.command: timedatectl show --property=NTP --value
  register: current_ntp_cmd
  changed_when: false
  failed_when: false
  when: ansible_system == "Linux"

- name: Get NTP status (macOS)
  ansible.builtin.command: sntp -K
  register: current_ntp_macos_cmd
  changed_when: false
  failed_when: false
  when: ansible_system == "Darwin"

- name: Set discovered system variables
  ansible.builtin.set_fact:
    discovery_hostname: "{{ ansible_hostname }}"
    discovery_domain_name: "{{ ansible_domain | default('') }}"
    discovery_domain_timezone: "{{ ansible_date_time.tz }}"
    discovery_domain_locale: "{{ ansible_env.LANG | default('') }}"
    discovery_domain_language: "{{ ansible_env.LANG | default('') }}"
    discovery_domain_ntp_enabled: >-
      {{
        (current_ntp_cmd is defined and
         current_ntp_cmd.rc is defined and
         current_ntp_cmd.rc == 0 and
         current_ntp_cmd.stdout | default('') == 'yes') or
        (current_ntp_macos_cmd is defined and
         current_ntp_macos_cmd.rc is defined and
         current_ntp_macos_cmd.rc == 0)
      }}

- name: Generate host variables file
  ansible.builtin.template:
    src: simple_host_vars.yml.j2
    dest: "{{ discovery_paths.host_vars_file }}"
    mode: "0644"
    backup: true
  become: false
  delegate_to: localhost

- name: Show discovery completion
  ansible.builtin.debug:
    msg:
      - "=== Infrastructure Discovery Completed ==="
      - "Host variables: {{ discovery_paths.host_vars_file }}"
      - "Ready to use with configure_system role"
