---
# Simplified Package Discovery
# Clean separation: Native packages vs Language ecosystem packages

# Step 1: Discover native packages (OS-specific)
- name: Discover native packages by OS
  ansible.builtin.include_tasks: "scan-packages-{{ ansible_distribution }}.yml"
  when: ansible_distribution in ['Ubuntu', 'Debian', 'Archlinux', 'MacOSX']

# Step 2: Discover language ecosystem packages (cross-platform)
- name: Discover third-party language packages
  ansible.builtin.include_tasks: scan-third-party-packages.yml

# Step 3: Store results in clean, simple structure
- name: Store package discovery results
  ansible.builtin.set_fact:
    discovered_packages:
      # Native package manager packages
      native: >-
        {%- if ansible_distribution in ["Ubuntu", "Debian"] -%}
          {{ discovered_repositories.apt.manual_packages | default([]) }}
        {%- elif ansible_distribution == "Archlinux" -%}
          {{ discovery_archlinux_explicit_packages | default([]) }}
        {%- elif ansible_distribution == "MacOSX" -%}
          {{ (homebrew_packages_result.stdout_lines | default([])) + (homebrew_casks_result.stdout_lines | default([])) }}
        {%- else -%}
          {{ ansible_facts.packages.keys() | list }}
        {%- endif -%}

      # Language ecosystem packages
      languages: "{{ discovered_third_party_packages | default({}) }}"

      # Simple consolidated list for templates
      all_native: >-
        {%- if ansible_distribution in ["Ubuntu", "Debian"] -%}
          {{ discovered_repositories.apt.manual_packages | default([]) }}
        {%- elif ansible_distribution == "Archlinux" -%}
          {{ discovery_archlinux_explicit_packages | default([]) }}
        {%- elif ansible_distribution == "MacOSX" -%}
          {{ (homebrew_packages_result.stdout_lines | default([])) + (homebrew_casks_result.stdout_lines | default([])) }}
        {%- else -%}
          {{ ansible_facts.packages.keys() | list }}
        {%- endif -%}

- name: Set empty package results for unsupported OS
  ansible.builtin.set_fact:
    discovered_packages:
      native: []
      languages: {}
      all_native: []
  when: ansible_distribution not in ['Ubuntu', 'Debian', 'Archlinux', 'MacOSX']

- name: Debug package discovery results
  ansible.builtin.debug:
    msg:
      - "Native packages ({{ ansible_distribution }}): {{ discovered_packages.all_native | length }}"
      - "Python packages: {{ discovered_packages.languages.python | default([]) | length }}"
      - "Node.js packages: {{ discovered_packages.languages.nodejs.npm_global | default([]) | length }}"
      - "Rust packages: {{ discovered_packages.languages.rust.cargo | default([]) | length }}"
  when: discovery_debug | default(false) | bool
