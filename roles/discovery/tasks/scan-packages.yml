---
# Package and Repository Discovery
# Discovers installed packages and package sources

- name: Discover package repositories by distribution
  ansible.builtin.include_tasks: "scan-packages-{{ ansible_os_family }}.yml"
  when: ansible_os_family in ['Debian', 'Archlinux', 'Darwin']
  tags:
    - repositories
    - packages

- name: Store discovered packages
  ansible.builtin.set_fact:
    discovered_packages:
      total: "{{ ansible_facts.packages.keys() | length }}"
      all: "{{ ansible_facts.packages.keys() | list }}"

      # Separate standard vs third-party packages (for Debian/Ubuntu)
      standard: >-
        {%- if ansible_os_family == "Debian" -%}
          {{- ansible_facts.packages.keys() | difference(third_party_package_map.keys() | default([])) | list -}}
        {%- else -%}
          {{- ansible_facts.packages.keys() | list -}}
        {%- endif -%}
      third_party: "{{ third_party_package_map.keys() | default([]) | list }}"

      # Package manager specific
      homebrew_formulae: "{{ homebrew_packages_result.stdout_lines | default([]) }}"
      homebrew_casks: "{{ homebrew_casks_result.stdout_lines | default([]) }}"
      aur_packages: "{{ aur_packages_result.results | default([]) | selectattr('stdout_lines', 'defined') | map(attribute='stdout_lines') | flatten | list }}"

- name: Initialize empty repository results for unsupported distributions
  ansible.builtin.set_fact:
    discovered_repositories: {}
    third_party_package_map: {}
  when: ansible_os_family not in ['Debian', 'Archlinux', 'Darwin']

  tags:
    - repositories
    - packages
