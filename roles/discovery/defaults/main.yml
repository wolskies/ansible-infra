---
# Discovery Role Default Variables - Simplified

# Discovery output settings
discovery:
  # Output paths - defaults to ./inventory and ./playbooks from where ansible-playbook is run
  # Override these in your playbook to control output location:
  #   discovery:
  #     inventory_dir: "/absolute/path/to/inventory"
  #     playbooks_dir: "/absolute/path/to/playbooks"
  generate_configs: true
  timeout: 300

# Docker Compose discovery configuration
# Search paths for Docker Compose services
# Each service is expected to be in its own folder with docker-compose.yml and any .env files
discovery_docker_compose_paths:
  - "/opt"
  - "/opt/docker"
  - "/srv"
  - "/srv/docker"
  - "/home/*/docker"  # Will be expanded to search all user home directories

# Legacy single directory support (for backward compatibility)
discovery_docker_compose_dir: "/opt/docker"  # Default compose directory to scan

# Docker service mapping - maps container images to collection roles
discovery_docker_service_mapping:
  # Canned services with dedicated roles
  "gitlab/gitlab-ce": "gitlab"
  "gitlab/gitlab-ee": "gitlab"
  "ghcr.io/paperless-ngx/paperless-ngx": "paperless"
  "paperless-ngx/paperless-ngx": "paperless"
  "jc21/nginx-proxy-manager": "nginx_proxy_manager"
  "jellyfin/jellyfin": "jellyfin"
  "ghcr.io/gethomepage/homepage": "homepage"
  "benphelps/homepage": "homepage"

  # Infrastructure services
  "portainer/portainer-ce": "portainer"
  "portainer/portainer-ee": "portainer"

# Shell detection and configuration
discovery_shell_configuration:
  supported_shells:
    - /bin/bash
    - /bin/zsh
    - /usr/bin/fish

  config_files:
    bash:
      - .bashrc
      - .bash_profile
      - .profile
    zsh:
      - .zshrc
      - .zsh_profile
      - .profile
    fish:
      - .config/fish/config.fish

# Repository detection configuration
repository_detection:
  pacman:
    config: "/etc/pacman.conf"
    mirrorlist: "/etc/pacman.d/mirrorlist"
  aur_helpers:
    - yay
    - paru
    - trizen
  homebrew:
    paths:
      - "/opt/homebrew/bin/brew"
      - "/usr/local/bin/brew"

discovery_repository_detection:
  apt:
    keys_paths:
      - "/etc/apt/trusted.gpg.d"
      - "/usr/share/keyrings"

# Dotfiles detection
discovery_dotfiles_detection:
  repository_indicators:
    - .dotfiles
    - .config

  management_tools:
    - Makefile
    - install.sh
    - bootstrap.sh
    - setup.sh
    - stow
    - .stow-local-ignore

# System tuning default configurations
# These are added as commented placeholders in the discovery output
# Users can uncomment and modify as needed for their specific hardware/use case
discovery_system_tuning_defaults:
  # Performance and hardware optimization
  gaming:
    enabled: false
    description: "Gaming optimizations (kernel parameters, CPU governor, etc.)"
    kernel_params: ["mitigations=off"]
    cpu_governor: "performance"
    
  gpu:
    enabled: false
    description: "GPU-specific configurations and drivers"
    nvidia_support: false
    amd_support: false
    intel_support: false
    
  bluetooth:
    enabled: false
    description: "Bluetooth support and audio codecs"
    audio_codecs: ["aptx", "ldac", "aac"]
    
  camera:
    enabled: false
    description: "Camera/webcam support and permissions"
    v4l2_support: true
    
  audio:
    enabled: false
    description: "Audio system optimizations"
    low_latency: false
    real_time_audio: false
    
  # Security hardening
  security:
    ssh_hardening: false
    firewall_strict: false
    fail2ban: false
    
  # Network optimization
  network:
    performance_tuning: false
    tcp_optimization: false

# User configuration defaults
# These control user permissions, groups, and access levels
discovery_user_configuration_defaults:
  # Primary user permissions and access
  primary_user:
    sudo_nopasswd: false              # Enable passwordless sudo
    additional_groups: []             # Additional groups to add user to
    docker_access: false              # Grant Docker socket access
    
  # Shell and environment
  shell:
    default_shell: "/bin/bash"        # Default shell for new users
    
  # SSH and remote access
  ssh:
    key_management: false             # Manage SSH keys
    disable_password_auth: false      # Disable password authentication
