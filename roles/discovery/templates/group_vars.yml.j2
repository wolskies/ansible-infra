---
# Group Variables for {{ item }}
# Generated by wolskinet.infrastructure.discovery role

{% if item == 'workstations' %}
# Workstation Configuration
group_roles_install:
{% if discovered_desktop.environment and discovered_desktop.environment != 'unknown' %}
  - desktop-{{ discovered_desktop.environment }}
{% else %}
  - desktop-hyprland  # Default - update as needed
{% endif %}

# Desktop environment settings
desktop_environment_detected: {{ discovered_desktop.environment }}
display_manager_detected: {{ discovered_desktop.display_manager.active | join(', ') if discovered_desktop.display_manager.active else 'none' }}

{% elif item == 'docker_hosts' %}
# Docker Hosts Configuration
group_packages_install: 
  - curl 
  - openssh-server
  - ca-certificates

group_services_remove: []
group_services_remove_Debian: []

group_roles_include:
  - docker_role

# Docker configuration
docker_users:
  - "{{ ansible_user }}"

{% if discovered_docker.containers.total > 0 %}
# Discovered Docker environment
docker_containers_detected: {{ discovered_docker.containers.total }}
docker_networks_detected: {{ discovered_docker.networks.total }}
docker_volumes_detected: {{ discovered_docker.volumes.total }}

{% endif %}
{% elif item == 'infra' %}
# Infrastructure Hosts Configuration
group_roles_install:
  - basic_setup
  - system_update

# Security configuration for infrastructure
enable_hardening: true
enable_firewall: true
auto_updates_enabled: true

{% elif item.endswith('_hosts') and item.startswith(('nginx', 'apache', 'mysql', 'postgresql')) %}
# {{ item.replace('_hosts', '').title() }} Service Configuration
group_roles_install:
  - basic_setup
  - system_update

{% if item.startswith('nginx') %}
# Nginx configuration
nginx_sites_detected: {{ discovered_services.web_servers.nginx.sites | length }}
{% if discovered_services.web_servers.nginx.sites %}
nginx_sites_found:
{% for site in discovered_services.web_servers.nginx.sites %}
  - {{ site | basename }}
{% endfor %}
{% endif %}

{% elif item.startswith('apache') %}
# Apache configuration
apache_sites_detected: {{ discovered_services.web_servers.apache.sites | length }}
{% if discovered_services.web_servers.apache.sites %}
apache_sites_found:
{% for site in discovered_services.web_servers.apache.sites %}
  - {{ site | basename }}
{% endfor %}
{% endif %}

{% elif item.startswith('mysql') %}
# MySQL/MariaDB configuration
mysql_detected: true
# TODO: Configure MySQL settings

{% elif item.startswith('postgresql') %}
# PostgreSQL configuration
postgresql_detected: true
# TODO: Configure PostgreSQL settings

{% endif %}
{% elif item == (discovered_system.os.distribution | lower + '_hosts') %}
# {{ discovered_system.os.distribution }} Distribution Configuration
distribution_name: {{ discovered_system.os.distribution }}
package_manager: {{ 'pacman' if discovered_system.os.distribution == 'Archlinux' else 'apt' if discovered_system.os.family == 'Debian' else 'brew' if discovered_system.os.family == 'Darwin' else 'unknown' }}

{% if discovered_system.os.distribution == 'Archlinux' and discovered_repositories.pacman.aur_helpers %}
# AUR configuration
aur_helper: {{ discovered_repositories.pacman.aur_helpers[0] }}
aur_packages_detected: {{ discovered_packages.aur_packages | length }}

{% endif %}
{% if discovered_system.os.family == 'Darwin' and discovered_repositories.homebrew.taps %}
# Homebrew configuration
homebrew_taps_detected:
{% for tap in discovered_repositories.homebrew.taps %}
  - {{ tap }}
{% endfor %}

{% endif %}
{% if discovered_system.os.family == 'Debian' and discovered_repositories.apt.additional_sources %}
# APT additional sources detected
apt_additional_sources_detected: {{ discovered_repositories.apt.additional_sources | length }}

{% endif %}
{% else %}
# Generic group configuration
group_roles_install:
  - basic_setup
  - system_update

{% endif %}
# TODO: Review and customize role assignments
# TODO: Configure service-specific settings
# TODO: Add vault.yml for sensitive variables