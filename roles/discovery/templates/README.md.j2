# Infrastructure Discovery Report

Generated by `wolskinet.infrastructure.discovery` role  
Discovery Date: {{ ansible_date_time.iso8601 }}  
Source Machine: {{ discovered_machine.hostname }}  

## Machine Summary

- **Type**: {{ discovered_machine.type }}
- **OS**: {{ discovered_system.os.distribution }} {{ discovered_system.os.version }}
- **Architecture**: {{ discovered_system.os.architecture }}
- **Memory**: {{ discovered_system.hardware.memory_mb }}MB
- **CPU Cores**: {{ discovered_system.hardware.cpu_cores }}
- **Groups**: {{ discovered_machine.groups | join(', ') }}

## Discovery Results

### Packages ({{ discovered_packages.total }} total)
{% if discovered_packages.system_packages %}
- **System**: {{ discovered_packages.system_packages | length }} packages
{% endif %}
{% if discovered_packages.development_packages %}
- **Development**: {{ discovered_packages.development_packages | length }} packages
{% endif %}
{% if discovered_packages.desktop_packages %}
- **Desktop**: {{ discovered_packages.desktop_packages | length }} packages
{% endif %}
{% if discovered_packages.aur_packages %}
- **AUR**: {{ discovered_packages.aur_packages | length }} packages
{% endif %}
{% if discovered_packages.pip_packages %}
- **Python/pip**: {{ discovered_packages.pip_packages | length }} packages
{% endif %}
{% if discovered_packages.npm_packages %}
- **Node.js/npm**: {{ discovered_packages.npm_packages | length }} packages
{% endif %}

### Services ({{ discovered_services.running | length }} running)
{% if discovered_services.web_servers.nginx.detected %}
- **Nginx**: {{ discovered_services.web_servers.nginx.sites | length }} sites configured
{% endif %}
{% if discovered_services.web_servers.apache.detected %}
- **Apache**: {{ discovered_services.web_servers.apache.sites | length }} sites configured
{% endif %}
{% if discovered_services.databases.mysql_detected %}
- **MySQL/MariaDB**: Detected and running
{% endif %}
{% if discovered_services.databases.postgresql_detected %}
- **PostgreSQL**: Detected and running
{% endif %}

{% if discovered_docker.installed %}
### Docker Environment
- **Version**: {{ discovered_docker.version }}
- **Containers**: {{ discovered_docker.containers.total }} total
- **Networks**: {{ discovered_docker.networks.total }} networks
- **Volumes**: {{ discovered_docker.volumes.total }} volumes
- **Suggested Services**: {{ discovered_docker.suggested_services | join(', ') }}

{% endif %}
{% if discovered_users.dotfiles.detected %}
### Dotfiles Configuration
- **Repository**: {{ discovered_users.dotfiles.repository_url | default('Local configuration detected') }}
{% if discovered_users.dotfiles.current_branch %}
- **Branch**: {{ discovered_users.dotfiles.current_branch }}
{% endif %}
- **Management Tools**: {{ discovered_users.dotfiles.management_tools | join(', ') }}

{% endif %}
### User Environment
- **Primary User**: {{ discovered_users.current_user.name }} ({{ discovered_users.current_user.uid }}:{{ discovered_users.current_user.gid }})
- **Shell**: {{ discovered_users.shell_config.preferred_shell }}
{% if discovered_desktop.has_gui %}
- **Desktop Environment**: {{ discovered_desktop.environment }}
- **Display Manager**: {{ discovered_desktop.display_manager.active | join(', ') }}
{% endif %}

### Security Configuration
{% if discovered_security.ssh.service_running %}
- **SSH**: Running on port {{ discovered_security.ssh.settings.port | default('22') }}
{% endif %}
{% if discovered_security.firewall.enabled %}
- **Firewall**: {{ discovered_security.firewall.type }} enabled
{% endif %}

## Deployment Instructions

1. **Review Generated Files**:
   - `inventory.yml` - Update IP addresses
   - `group_vars/all.yml` - Configure global settings
   - `host_vars/{{ inventory_hostname }}.yml` - Host-specific settings
   - `host_packages.yml` - Package lists by category

2. **Configure Secrets**:
   ```bash
   # Create and encrypt vault file
   cp vault_template.yml vault.yml
   # Edit with actual passwords/keys
   ansible-vault encrypt vault.yml
   ```

3. **Deploy Configuration**:
   ```bash
   ansible-playbook -i inventory.yml new_machine.yml --ask-vault-pass
   ```

## Manual Review Required

- [ ] Update IP addresses in inventory.yml
- [ ] Configure timezone in group_vars/all.yml
- [ ] Set vault variables for passwords and keys
- [ ] Review Docker service deployments
- [ ] Test service configurations
- [ ] Configure monitoring and backups

---
*Generated by wolskinet.infrastructure collection*