# Replication playbook for {{ inventory_hostname }}
# Generated from infrastructure discovery on {{ ansible_date_time.iso8601 }}
# 
# This playbook replicates the discovered configuration using the basic_setup role
# and the variables discovered from the original machine.
# Original OS: {{ discovery_profile.system.distribution }} {{ discovery_profile.system.distribution_version }}

---
- name: Replicate discovered configuration for {{ inventory_hostname }}
  hosts: {{ inventory_hostname }}
  gather_facts: true
  become: true
  
  collections:
    - wolskinet.infrastructure
    - community.general
{% if discovery_profile.docker.installed %}    - community.docker{% endif %}

  pre_tasks:
    - name: Display replication target information
      ansible.builtin.debug:
        msg:
          - "Replicating configuration for: {{ inventory_hostname }}"
          - "Source discovery: {{ discovery_profile.system.distribution }} {{ discovery_profile.system.distribution_version }}"
          - "Target OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Discovery date: {{ ansible_date_time.iso8601 }}"
          - "Packages to install: {{ packages_install | default([]) | length }}"
          - "Machine characteristics: {{ discovered_machine_characteristics | default([]) }}"

    - name: Validate OS compatibility
      ansible.builtin.assert:
        that:
          - ansible_distribution == "{{ discovery_profile.system.distribution }}"
        fail_msg: "Target OS ({{ ansible_distribution }}) doesn't match source OS ({{ discovery_profile.system.distribution }})"
        success_msg: "OS compatibility confirmed"

  roles:
    # Core system setup with discovered packages and configuration
    - name: wolskinet.infrastructure.basic_setup
      vars:
        # The basic_setup role will consume the packages_install variable
        # from host_vars/{{ inventory_hostname }}.yml automatically
        install_discovered_packages: true
        
    {% if discovery_profile.docker.installed %}
    # Container platform setup (Docker was detected)
    - name: wolskinet.infrastructure.container_platform
      when: docker_detected | default(false)
    {% endif %}
    
    {% if discovery_profile.dotfiles.detected %}
    # Dotfiles management (dotfiles repository was detected)  
    - name: wolskinet.infrastructure.dotfiles
      become: false
      when: dotfiles_detected | default(false)
    {% endif %}
    
    # System maintenance and updates
    - name: wolskinet.infrastructure.maintenance

  post_tasks:
    - name: Display replication results
      ansible.builtin.debug:
        msg:
          - "Configuration replication completed for {{ inventory_hostname }}"
          - "Packages to install: {{ system_packages | default([]) | length }} system packages"
{% if discovery_profile.system.os_family == "Darwin" %}
          - "Homebrew packages: {{ homebrew_packages | default([]) | length }}"
          - "Homebrew casks: {{ homebrew_casks | default([]) | length }}"
{% endif %}
{% if discovery_profile.docker.installed %}
          - "Docker configuration applied"
          - "Note: Docker containers/volumes are reference only - not automatically recreated"
{% endif %}
{% if discovery_profile.dotfiles.detected %}
          - "Dotfiles repository configured"
{% endif %}
          - ""
          - "Manual verification steps:"
          - "  1. Compare package lists: check if critical packages are installed"
          - "  2. Verify services are running as expected"
          - "  3. Test application functionality"
{% if discovery_profile.docker.installed %}
          - "  4. Manually recreate Docker containers/volumes as needed"
{% endif %}
{% if discovery_profile.dotfiles.detected %}
          - "  5. Verify dotfiles are properly linked"  
{% endif %}
          - ""
          - "Source machine characteristics: {{ discovered_machine_characteristics | default([]) }}"
          - "Replication should closely match the original {{ inventory_hostname }} configuration"