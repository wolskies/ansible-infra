# Host-specific variables for {{ inventory_hostname }}
# Generated from infrastructure discovery on {{ ansible_date_time.iso8601 }}
# OS: {{ discovery_profile.system.distribution }} {{ discovery_profile.system.distribution_version }}
# 
# These variables represent the discovered state of this machine.
# You can use them with any roles or playbooks that support these variable names.
# This discovery makes no assumptions about your preferred group structure or role assignments.

---
# System Information
ansible_user: "{{ discovery_profile.users.current_user }}"

# Hardware Configuration  
system_memory_mb: {{ discovery_profile.system.total_memory }}
system_cpu_cores: {{ discovery_profile.system.cpu_cores }}
system_architecture: "{{ discovery_profile.system.architecture }}"

# Network Configuration
{% if discovery_profile.network.default_ipv4.interface is defined %}
primary_network_interface: "{{ discovery_profile.network.default_ipv4.interface }}"
{% endif %}
{% if discovery_profile.network.default_ipv4.address is defined %}
primary_ip_address: "{{ discovery_profile.network.default_ipv4.address }}"
{% endif %}

# Hostname Configuration
system_hostname: "{{ discovery_profile.hostname }}"
{% if discovery_profile.network.fqdn != discovery_profile.hostname %}
system_fqdn: "{{ discovery_profile.network.fqdn }}"
{% endif %}

# Package Discovery - Standard Ansible variable names
# These can be used directly with roles that support these variables
{% set discovered_packages = [] %}
{% for package in discovery_profile.packages.installed %}
  {% set _ = discovered_packages.append(package.split()[0]) %}
{% endfor %}

# Discovered packages as system packages (basic infrastructure)
# Note: Discovery cannot determine package categories, so all discovered packages
# are classified as system packages. Users can reorganize as needed.
system_packages:
{% for package in discovered_packages | unique %}
  - "{{ package }}"
{% endfor %}

{% if discovery_profile.system.os_family == "Darwin" and discovery_profile.packages.homebrew_formulae %}
# Homebrew packages (macOS)
homebrew_packages:
{% for package in discovery_profile.packages.homebrew_formulae %}
  - "{{ package }}"
{% endfor %}
{% endif %}

{% if discovery_profile.system.os_family == "Darwin" and discovery_profile.packages.homebrew_casks %}
# Homebrew casks (macOS)
homebrew_casks:
{% for cask in discovery_profile.packages.homebrew_casks %}
  - "{{ cask }}"
{% endfor %}
{% endif %}

{% if discovery_profile.packages.aur_packages %}
# AUR packages (Arch Linux)
aur_packages:
{% for package in discovery_profile.packages.aur_packages %}
  - "{{ package.split()[0] }}"
{% endfor %}
{% endif %}

# Machine Type Detection (based on discovered characteristics)
{% set machine_characteristics = [] %}

{% if discovery_profile.docker.installed %}
{% set _ = machine_characteristics.append('docker') %}
{% endif %}

{% set dev_tools = [] %}
{% if 'git' in discovered_packages %}
{% set _ = dev_tools.append('git') %}
{% endif %}
{% if 'vim' in discovered_packages or 'nvim' in discovered_packages %}
{% set _ = dev_tools.append('vim') %}
{% endif %}

{% if dev_tools | length > 0 %}
{% set _ = machine_characteristics.append('development') %}
development_tools_detected:
{% for tool in dev_tools %}
  - "{{ tool }}"
{% endfor %}
{% endif %}

# Machine characteristics for reference (not prescriptive)
discovered_machine_characteristics:
{% for characteristic in machine_characteristics %}
  - "{{ characteristic }}"
{% endfor %}

{% if discovery_profile.docker.installed %}
# Docker Configuration
docker_detected: true
{% endif %}

# Shell Configuration
{% if discovery_profile.users.current_shell and discovery_profile.users.current_shell != '/bin/bash' %}
detected_preferred_shell: "{{ discovery_profile.users.current_shell }}"
# NOTE: Uncomment to use detected shell as default
# default_user_shell: "{{ discovery_profile.users.current_shell }}"
{% endif %}

# Dotfiles Configuration  
{% if discovery_profile.dotfiles.detected %}
dotfiles_detected: true
{% if discovery_profile.dotfiles.remote_url %}
# NOTE: Set your actual dotfiles repository URL  
# dotfiles_repository_url: "{{ discovery_profile.dotfiles.remote_url }}"
{% endif %}
{% endif %}


# Discovery metadata
discovery_completed_at: "{{ ansible_date_time.iso8601 }}"
discovery_source_os: "{{ discovery_profile.system.distribution }} {{ discovery_profile.system.distribution_version }}"

# NOTES:
# - These variables represent the essential configuration of {{ inventory_hostname }}
# - Use these with any roles that support standard Ansible variable names
# - Package lists are ready to use with package management roles  
# - Discovery focuses only on what basic_setup role can replicate
# - AUR packages (Arch) and Homebrew packages (macOS) are categorized separately