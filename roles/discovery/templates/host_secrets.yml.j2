---
# SECRETS FILE FOR {{ inventory_hostname | upper }}
# Generated by wolskinet.infrastructure.discovery role
#
# ⚠️  IMPORTANT: This file contains sensitive data placeholders!
# ⚠️  DO NOT commit this file unencrypted to version control!
#
# TO ENCRYPT THIS FILE:
#   ansible-vault encrypt inventory/host_vars/{{ inventory_hostname }}/secrets.yml
#
# TO EDIT ENCRYPTED FILE:
#   ansible-vault edit inventory/host_vars/{{ inventory_hostname }}/secrets.yml
#
# TO USE IN PLAYBOOKS:
#   ansible-playbook playbook.yml --ask-vault-pass
#   OR create a vault password file and use: --vault-password-file ~/.vault_pass

# === USER CREDENTIALS ===
# Replace placeholder values with actual passwords and keys
{% if discovered_users is not none and discovered_users.system_users.regular_users_detailed is defined %}
{% for user_info in discovered_users.system_users.regular_users_detailed %}

# User: {{ user_info.name }}
vault_{{ user_info.name }}_password: "CHANGE_ME_TO_SECURE_PASSWORD"  # User login password
vault_{{ user_info.name }}_ssh_public_key: ""  # Paste SSH public key here (ssh-rsa AAAA...)
vault_{{ user_info.name }}_ssh_private_key: |
  # Paste SSH private key here if needed for deployment
  # -----BEGIN OPENSSH PRIVATE KEY-----
  # ...
  # -----END OPENSSH PRIVATE KEY-----

{% endfor %}
{% endif %}

# === SERVICE CREDENTIALS ===
{% if discovered_docker is not none and discovered_docker.installed | default(false) %}

# Docker Registry Credentials
vault_docker_registry_username: ""
vault_docker_registry_password: ""
vault_docker_registry_email: ""

{% if discovered_docker.compose_services is defined and discovered_docker.compose_services.total > 0 %}
# Docker Service Secrets
{% for service in discovered_docker.compose_services.canned | default([]) %}
{% if service.role == 'gitlab' %}
# GitLab Service
vault_gitlab_root_password: "CHANGE_ME_TO_SECURE_PASSWORD"
vault_gitlab_smtp_password: ""
vault_gitlab_registry_key: ""
{% elif service.role == 'paperless' %}
# Paperless Service  
vault_paperless_admin_password: "CHANGE_ME_TO_SECURE_PASSWORD"
vault_paperless_secret_key: "GENERATE_RANDOM_SECRET_KEY"
{% elif service.role == 'nginx_proxy_manager' %}
# Nginx Proxy Manager
vault_nginx_proxy_manager_admin_password: "CHANGE_ME_TO_SECURE_PASSWORD"
vault_nginx_proxy_manager_mysql_password: "CHANGE_ME_TO_SECURE_PASSWORD"
{% endif %}
{% endfor %}
{% endif %}
{% endif %}

# === DATABASE CREDENTIALS ===
# Add database passwords as needed
# vault_mysql_root_password: "CHANGE_ME_TO_SECURE_PASSWORD"
# vault_postgres_password: "CHANGE_ME_TO_SECURE_PASSWORD"
# vault_redis_password: "CHANGE_ME_TO_SECURE_PASSWORD"

# === API KEYS & TOKENS ===
# Add external service API keys as needed
# vault_github_token: ""
# vault_aws_access_key_id: ""
# vault_aws_secret_access_key: ""

# === ENCRYPTION KEYS ===
# Add encryption keys and certificates as needed
# vault_ssl_private_key: |
#   -----BEGIN PRIVATE KEY-----
#   ...
#   -----END PRIVATE KEY-----

# REMINDER: After adding your secrets, encrypt this file:
# ansible-vault encrypt inventory/host_vars/{{ inventory_hostname }}/secrets.yml