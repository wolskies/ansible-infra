---
# New Machine Deployment Playbook
# Generated by wolskinet.infrastructure.discovery role
# Replicates configuration discovered from {{ discovered_machine.hostname }}

- name: Deploy discovered infrastructure configuration
  hosts: all
  gather_facts: true
  collections:
    - devsec.hardening
    - wolskinet.infrastructure
  
  roles:
{% if not discovered_desktop.has_gui %}
    # Security hardening for servers
    - name: devsec.hardening.os_hardening
      become: true
      when: not ansible_facts['distribution'] == 'MacOSX'
{% endif %}
    
    # Core infrastructure setup
    - name: wolskinet.infrastructure.basic_setup
      become: false
      # This role now handles:
      # - Package installation ({{ discovered_packages.total }} packages)
      # - Repository configuration
      # - Service configuration
      # - User shell setup
{% if discovered_docker.installed %}
      # - Docker installation and setup
{% endif %}
    
    # System maintenance
    - name: wolskinet.infrastructure.system_update
      become: false
      
{% if discovered_users.dotfiles.detected %}
    # Dotfiles management
    - name: wolskinet.infrastructure.dotfiles
      become: false
      when: dotfiles_repository_url is defined
{% endif %}

  tasks:
    # Group-specific roles (existing pattern)
    - name: Install group-specific roles
      ansible.builtin.include_role:
        name: "{{ item }}"
      loop: "{{ group_roles_install | default([]) }}"
      when: group_roles_install is defined

{% if discovered_docker.installed and discovered_docker.containers.total > 0 %}
    # Docker service deployment
    - name: Deploy discovered Docker services
      ansible.builtin.include_role:
        name: docker_service_deploy
      vars:
        service_name: "{{ item }}"
      loop: "{{ docker_service_deploy | default([]) }}"
      when: 
        - docker_service_deploy is defined
        - item is defined
{% endif %}

    # Final verification and status
    - name: Display deployment completion
      ansible.builtin.debug:
        msg:
          - "=== Infrastructure Deployment Completed ==="
          - "Target: {{ inventory_hostname }}"
          - "Machine Type: {{ discovered_machine_type }}"
          - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
{% if discovered_docker.installed %}
          - "Docker: Enabled with {{ discovered_docker.containers.total }} services ready"
{% endif %}
{% if discovered_users.dotfiles.detected %}
          - "Dotfiles: Configured from {{ discovered_users.dotfiles.repository_url | default('detected repository') }}"
{% endif %}
          - "Services: {{ discovered_services.running | length }} services configured"
          - ""
          - "Manual tasks remaining:"
          - "- Configure vault variables for sensitive data"
          - "- Review and enable Docker services in host_vars"
          - "- Test all services and connectivity"
          - "- Set up monitoring and backups"

# Generated from discovery of:
# - Machine Type: {{ discovered_machine.type }}
# - OS: {{ discovered_system.os.distribution }} {{ discovered_system.os.version }}
# - Packages: {{ discovered_packages.total }}
# - Services: {{ discovered_services.running | length }}
{% if discovered_docker.installed %}
# - Docker: {{ discovered_docker.containers.total }} containers detected
{% endif %}
{% if discovered_users.dotfiles.detected %}
# - Dotfiles: {{ discovered_users.dotfiles.repository_url | default('detected') }}
{% endif %}