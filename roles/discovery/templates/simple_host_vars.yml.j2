---
# Generated by wolskinet.infrastructure.discovery role
# Host variables for {{ inventory_hostname }}

{% if vars['host_packages_install_' + ansible_distribution] is defined and vars['host_packages_install_' + ansible_distribution] is sequence %}
# =============================================================================
# PACKAGE MANAGEMENT
# =============================================================================
host_packages_install_{{ ansible_distribution }}:
{{ vars['host_packages_install_' + ansible_distribution] | to_nice_yaml(indent=2) }}
{% endif %}

{% if host_apt_repositories is defined and host_apt_repositories is sequence and host_apt_repositories | length > 0 %}
# =============================================================================
# APT REPOSITORY CONFIGURATION
# =============================================================================
host_apt_repositories_{{ ansible_distribution }}:
{{ host_apt_repositories | to_nice_yaml(indent=2) }}
{% endif %}

{% if users_config is defined and users_config is sequence and users_config | length > 0 %}
# =============================================================================
# USER CONFIGURATION
# =============================================================================
users_config:
{{ users_config | to_nice_yaml(indent=2) }}
{% endif %}

{% if firewall_enable is defined %}
# =============================================================================
# FIREWALL CONFIGURATION  
# =============================================================================
firewall_enable: {{ firewall_enable | to_json }}
{% if firewall_custom_rules is defined and firewall_custom_rules is sequence and firewall_custom_rules | length > 0 %}
firewall_custom_rules:
{{ firewall_custom_rules | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

{% if config_hostname is defined or config_system_timezone is defined %}
# =============================================================================
# HOST CONFIGURATION
# =============================================================================
{% if config_hostname is defined %}
config_hostname: {{ config_hostname | to_json }}
{% endif %}
{% if config_system_timezone is defined %}
config_system_timezone: {{ config_system_timezone | to_json }}
{% endif %}
{% endif %}

{% if discovered_language_packages is defined %}
# =============================================================================
# LANGUAGE PACKAGE CONFIGURATION
# =============================================================================
# Discovered language packages - configure via manage_language_packages role

{% if discovered_language_packages.python_user is defined and discovered_language_packages.python_user | length > 0 %}
# Python packages (discovered user-installed)
language_python_enable: true
language_python_install_method: user
language_python_packages:
{{ discovered_language_packages.python_user | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.nodejs_global is defined and discovered_language_packages.nodejs_global | length > 0 %}
# Node.js packages (discovered global)
language_nodejs_enable: true
language_nodejs_install_global: true
language_nodejs_packages:
{{ discovered_language_packages.nodejs_global | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.rust is defined and discovered_language_packages.rust | length > 0 %}
# Rust packages (discovered)
language_rust_enable: true
language_rust_packages:
{{ discovered_language_packages.rust | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.go is defined and discovered_language_packages.go | length > 0 %}
# Go packages (discovered binaries)
language_go_enable: true
language_go_packages:
{{ discovered_language_packages.go | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

{% if discovered_language_packages is defined and (discovered_language_packages.snap | length > 0 or discovered_language_packages.flatpak | length > 0) %}
# =============================================================================
# SNAP AND FLATPAK PACKAGES
# =============================================================================
# Discovered snap and flatpak packages - configure via manage_packages role

{% if discovered_language_packages.snap is defined and discovered_language_packages.snap | length > 0 %}
# Snap packages (discovered)
host_packages_snap_packages:
{{ discovered_language_packages.snap | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.flatpak is defined and discovered_language_packages.flatpak | length > 0 %}
# Flatpak packages (discovered)
host_packages_flatpak_packages:
{{ discovered_language_packages.flatpak | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

