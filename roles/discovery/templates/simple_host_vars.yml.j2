---
# Generated by wolskinet.infrastructure.discovery role
# Host variables for {{ inventory_hostname }}

{% if vars['host_packages_install_' + ansible_distribution] is defined and vars['host_packages_install_' + ansible_distribution] is sequence %}
# =============================================================================
# PACKAGE MANAGEMENT
# =============================================================================
host_packages_install_{{ ansible_distribution }}:
{{ vars['host_packages_install_' + ansible_distribution] | to_nice_yaml(indent=2) }}
{% endif %}

{% if ansible_distribution == "MacOSX" and homebrew_installed is defined %}
# =============================================================================
# HOMEBREW CONFIGURATION (macOS)
# =============================================================================
# Homebrew installation status and discovered configuration
homebrew_installed: {{ homebrew_installed | lower }}

{% if homebrew_discovered_taps is defined %}
# Discovered Homebrew taps - formatted for manage_packages
packages_homebrew_taps:
{{ homebrew_discovered_taps | to_nice_yaml(indent=2) }}
{% endif %}

{% if homebrew_discovered_casks is defined %}
# Discovered Homebrew casks - formatted for manage_packages
packages_homebrew_casks:
{{ homebrew_discovered_casks | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

{% if host_apt_repositories is defined and host_apt_repositories is sequence and host_apt_repositories | length > 0 %}
# =============================================================================
# APT REPOSITORY CONFIGURATION
# =============================================================================
host_apt_repositories_{{ ansible_distribution }}:
{{ host_apt_repositories | to_nice_yaml(indent=2) }}
{% endif %}

{% if users_config is defined and users_config is sequence and users_config | length > 0 %}
# =============================================================================
# USER CONFIGURATION
# =============================================================================
users_config:
{{ users_config | to_nice_yaml(indent=2) }}
{% endif %}

{% if firewall_enable is defined %}
# =============================================================================
# FIREWALL CONFIGURATION  
# =============================================================================
firewall_enable: {{ firewall_enable | to_json }}
{% if firewall_custom_rules is defined and firewall_custom_rules is sequence and firewall_custom_rules | length > 0 %}
firewall_custom_rules:
{{ firewall_custom_rules | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

{% if config_hostname is defined or config_system_timezone is defined %}
# =============================================================================
# HOST CONFIGURATION
# =============================================================================
{% if config_hostname is defined %}
config_hostname: {{ config_hostname | to_json }}
{% endif %}
{% if config_system_timezone is defined %}
config_system_timezone: {{ config_system_timezone | to_json }}
{% endif %}
{% endif %}

{% if discovered_language_packages is defined %}
# =============================================================================
# LANGUAGE PACKAGE CONFIGURATION
# =============================================================================
# Discovered language packages - configure via manage_language_packages role

{% if discovered_language_packages.python is defined and discovered_language_packages.python | length > 0 %}
# Python packages (discovered global)
language_python_enable: true
language_python_install_method: global
language_python_packages:
{{ discovered_language_packages.python | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.nodejs is defined and discovered_language_packages.nodejs | length > 0 %}
# Node.js packages (discovered global)
language_nodejs_enable: true
language_nodejs_install_global: true
language_nodejs_packages:
{{ discovered_language_packages.nodejs | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.rust is defined %}
# Rust packages (discovered) - {{ discovered_language_packages.rust | length }} packages found
language_rust_enable: {{ (discovered_language_packages.rust | length > 0) | lower }}
language_rust_packages:
{{ discovered_language_packages.rust | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.go is defined %}
# Go packages (discovered binaries) - {{ discovered_language_packages.go | length }} packages found
language_go_enable: {{ (discovered_language_packages.go | length > 0) | lower }}
language_go_packages:
{{ discovered_language_packages.go | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.ruby is defined %}
# Ruby packages (discovered gems) - {{ discovered_language_packages.ruby | length }} packages found
language_ruby_enable: {{ (discovered_language_packages.ruby | length > 0) | lower }}
language_ruby_packages:
{{ discovered_language_packages.ruby | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

{% if discovered_language_packages is defined %}
# =============================================================================
# SNAP AND FLATPAK PACKAGES
# =============================================================================
# Discovered snap and flatpak packages - configure via manage_packages role

{% if discovered_language_packages.snap is defined %}
# Snap packages (discovered) - {{ discovered_language_packages.snap | length }} packages found - formatted for community.general.snap
host_packages_snap_packages:
{{ discovered_language_packages.snap | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.flatpak_remotes is defined %}
# Flatpak remotes (discovered) - {{ discovered_language_packages.flatpak_remotes | length }} remotes found - formatted for community.general.flatpak_remote
host_packages_flatpak_remotes:
{{ discovered_language_packages.flatpak_remotes | to_nice_yaml(indent=2) }}
{% endif %}

{% if discovered_language_packages.flatpak is defined %}
# Flatpak packages (discovered) - {{ discovered_language_packages.flatpak | length }} packages found - formatted for community.general.flatpak
host_packages_flatpak_packages:
{{ discovered_language_packages.flatpak | to_nice_yaml(indent=2) }}
{% endif %}
{% endif %}

