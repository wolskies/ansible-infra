---
# Discovered packages for {{ inventory_hostname }}
# Generated by wolskinet.infrastructure.discovery role
# These packages were found on the source machine and categorized

# === DISCOVERED PACKAGES (ADDITIVE) ===
# These will be ADDED to global_packages_install and group_packages_install

{% if discovered_packages is defined and discovered_packages.system_packages is defined and discovered_packages.system_packages | length > 0 %}
# System packages discovered on source machine
discovered_packages_install:
{% for package in discovered_packages.system_packages %}
  - {{ package }}
{% endfor %}
{% endif %}

{% if discovered_packages is defined and discovered_packages.development_packages is defined and discovered_packages.development_packages | length > 0 %}

# Development packages (uncomment if this machine needs development tools)
# discovered_development_packages:
{% for package in discovered_packages.development_packages %}
#   - {{ package }}
{% endfor %}
{% endif %}

{% if discovered_packages is defined and discovered_packages.desktop_packages is defined and discovered_packages.desktop_packages | length > 0 %}

# Desktop packages (uncomment if this machine has a GUI)
# discovered_desktop_packages:
{% for package in discovered_packages.desktop_packages %}
#   - {{ package }}
{% endfor %}
{% endif %}

{% if discovered_packages is defined and discovered_packages.media_packages is defined and discovered_packages.media_packages | length > 0 %}

# Media packages (uncomment if this machine needs media tools)
# discovered_media_packages:
{% for package in discovered_packages.media_packages %}
#   - {{ package }}
{% endfor %}
{% endif %}

{% if discovered_packages is defined and discovered_packages.aur_packages is defined and discovered_packages.aur_packages | length > 0 %}

# AUR packages (Arch Linux only)
# discovered_aur_packages:
{% for package in discovered_packages.aur_packages %}
#   - {{ package }}
{% endfor %}
{% endif %}

# === HOST-SPECIFIC CUSTOMIZATIONS ===
# Add packages unique to this machine below

# Host-specific packages (things unique to this machine)
host_packages_install: []

# Remove packages this host doesn't need  
host_packages_remove: []

# Host-specific services
host_services_enable: []
host_services_disable: []

# Host-specific roles
host_roles_install: []

# === DISCOVERED SERVICES ===
{% if discovered_services.running and discovered_services.running | length > 0 %}
# Services that were running on the source machine
# discovered_services_enable:
{% for service in discovered_services.running %}
#   - {{ service }}
{% endfor %}
{% endif %}

# === DISCOVERED CONFIGURATION HINTS ===
{% if discovered_docker.installed %}
# Docker was detected on source machine
# Uncomment to enable Docker on this host:
# host_enable_docker: true
{% endif %}

{% if discovered_users.dotfiles.detected %}
# Dotfiles repository detected
{% if discovered_users.dotfiles.repository_url %}
host_dotfiles_repository_url: "{{ discovered_users.dotfiles.repository_url }}"
{% endif %}
{% if discovered_users.dotfiles.current_branch %}
host_dotfiles_branch: "{{ discovered_users.dotfiles.current_branch }}"
{% endif %}
{% endif %}

{% if discovered_desktop.has_gui %}
# Desktop environment detected
host_has_desktop: true
{% if discovered_desktop.environment != 'unknown' %}
host_desktop_environment: "{{ discovered_desktop.environment }}"
{% endif %}
{% endif %}

# Discovery metadata
discovery_info:
  source_machine: "{{ discovered_machine.hostname | default('unknown') }}"
  discovery_date: "{{ ansible_date_time.iso8601 }}"
  total_packages_found: {{ discovered_packages.total | default(0) }}
  machine_type: "{{ discovered_machine.type | default('unknown') }}"