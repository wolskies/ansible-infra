---
# Vault Variables Template for {{ inventory_hostname }}
# Generated by wolskinet.infrastructure.discovery role
# ENCRYPT THIS FILE: ansible-vault encrypt vault.yml

# User password (generated hash)
vault_user_password: '$6$REPLACE_WITH_ACTUAL_HASH$'

{% if discovered_users.dotfiles.detected and (discovered_users.dotfiles.uses_ssh | default(false)) %}
# Git SSH key for dotfiles (if using private repository)
vault_git_ssh_key: |
  -----BEGIN OPENSSH PRIVATE KEY-----
  REPLACE_WITH_ACTUAL_SSH_PRIVATE_KEY
  -----END OPENSSH PRIVATE KEY-----

{% endif %}
{% if discovered_services.databases.mysql_detected %}
# MySQL/MariaDB credentials
vault_mysql_root_password: 'REPLACE_WITH_SECURE_PASSWORD'
vault_mysql_user_password: 'REPLACE_WITH_SECURE_PASSWORD'

{% endif %}
{% if discovered_services.databases.postgresql_detected %}
# PostgreSQL credentials
vault_postgres_password: 'REPLACE_WITH_SECURE_PASSWORD'

{% endif %}
{% if discovered_docker.installed %}
# Docker registry credentials (if needed)
vault_docker_registry_username: 'REPLACE_WITH_USERNAME'
vault_docker_registry_password: 'REPLACE_WITH_PASSWORD'

{% endif %}
{% if discovered_services.web_servers.nginx.detected or discovered_services.web_servers.apache.detected %}
# SSL certificate private keys (if using custom certificates)
vault_ssl_private_key: |
  -----BEGIN PRIVATE KEY-----
  REPLACE_WITH_ACTUAL_SSL_PRIVATE_KEY
  -----END PRIVATE KEY-----

{% endif %}
# API keys and tokens
# vault_api_token_service1: 'REPLACE_WITH_TOKEN'
# vault_api_key_service2: 'REPLACE_WITH_KEY'

# TODO: Generate actual password hashes with: mkpasswd --method=sha-512
# TODO: Add service-specific passwords and keys
# TODO: Encrypt this file: ansible-vault encrypt vault.yml