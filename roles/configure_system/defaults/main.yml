---
# =============================================================================
# SYSTEM CONFIGURATION ORCHESTRATION
# =============================================================================
# This role orchestrates multiple infrastructure roles to provide complete system setup
# It executes other roles in the correct order for new machine configuration
#
# The variables shown here are EXAMPLES of the unified structure that all roles
# in this collection use. Define these in your inventory/group_vars/host_vars.
#
# Available tags:
#   - host-configuration  : Basic host setup (hostname, NTP, locale)
#   - security-services   : Security services (firewall, fail2ban)
#   - user-management     : User and group management
#   - package-management  : Package installation and repository management
#   - snap-packages       : Snap package management
#   - flatpak-packages    : Flatpak package management
#   - core                : All core components
#   - optional            : All optional components
# =============================================================================

infrastructure:
  domain:
    name: ""                      
    timezone: "UTC"                 
    locale: "en_US.UTF-8"      
    language: "en_US.UTF-8"    
    ntp:
      enabled: true                
      servers:
        - 0.pool.ntp.org
        - 1.pool.ntp.org
        - 2.pool.ntp.org
        - 3.pool.ntp.org
    users: []
    # Example user with cross-platform and OS-specific preferences:
    # - name: alice                 
    #   comment: "Alice Developer"  
    #   groups: [sudo, docker]      
    #   ssh_pubkey: "ssh-ed25519 AAAAC3..." 
    #   password: "plaintext"       
    #   uid: 1001                   # Optional: specific user ID
    #   home: "/custom/home"        # Optional: home directory path
    #   create_home: true           # Optional: create home directory
    #   state: present              # Optional: present (default) or absent
    #   shell: /usr/bin/zsh
  #     dotfiles:
  #       repository: "https://github.com/alice/dotfiles-linux"
  #       method: stow
  #       packages: [zsh, tmux, vim]
    #   git:
    #     user_name: "Alice Smith"
    #     user_email: "alice@company.com"
    #   nodejs:
    #     packages: [typescript, eslint, prettier]
    #   rust:
    #     packages: [ripgrep, fd-find, bat]
    #   go:
    #     packages: [github.com/charmbracelet/glow@latest]
    #   macosx:
    #     dock:
    #       tile_size: 48
    #       autohide: true
    
    users_absent: []              # List of usernames to remove (for migration)
  host:
    hostname: ""
    computer_name: ""             # Darwin only               
    update_hosts: true   
    journal:
      configure: true
      max_size: "500M"
      max_retention: "30d"
      forward_to_syslog: false
      compress: true
    rsyslog:
      enabled: false
      remote_host: ""
      remote_port: 514
      protocol: "udp"
    services:
      enable: [] 
      disable: [] 
    optimizations:
      tune_swappiness: false
      swappiness: 10
    sysctl:
      parameters: {}
      # Example:
      #   net.core.default_qdisc: "fq"
      #   net.ipv4.tcp_congestion_control: "bbr"
    limits:
      limits: []
      # Example:
      #   - domain: '*'
      #     limit_type: soft
      #     limit_item: nofile
      #     value: 65536
    modules:
      load: []
      blacklist: []
      # Example:
      # load: [uvcvideo, btusb]
      # blacklist: [nouveau]
    firewall:
      enabled: false
      prevent_ssh_lockout: true
      package: "ufw"
      stealth_mode: false
      block_all: false
      logging: false
      rules: []
      # Rule examples:
      # - rule: allow
      #   port: 80
      #   proto: tcp
      #   comment: "HTTP traffic"
    fail2ban:
      enabled: false
      sender: "root@localhost"
      dest_email: ""
      defaults:
        bantime: 3600
        findtime: 600
        maxretry: 5
      services:
        - name: sshd
          enabled: true
          maxretry: 5
          bantime: 3600
          findtime: 600
          logpath: /var/log/auth.log
      ignoreips:
        - "127.0.0.1/8"
        - "::1"
    packages:  
      present:
        all:
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: [] 
        group:
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: [] 
        host:
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: []  
      remove:
        all: 
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: [] 
        group: 
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: [] 
        host: 
          Ubuntu: []
          Debian: []
          Archlinux: []
          MacOSX: [] 
      casks_present:
        all: []
        group: []
        host: [] 
      casks_remove: [] 
      apt:
        apt_cache:
          update_cache: true
          valid_time: 3600
        no_recommends: false
        unattended_upgrades:
          enabled: true
          email: ""
          auto_reboot: false
          reboot_with_users: false
          reboot_time: "02:00"
        system_upgrade:
          enable: false
          type: safe
        proxy: ""
        repositories:
          all: 
            Ubuntu: []
            Debian: [] 
          group: 
            Ubuntu: []
            Debian: []
          host:
            Ubuntu: []
            Debian: []
          # - name:  example: "docker"
          #   types: optional, defaults to "deb"
          #   uris: repo url
          #   suites: example, for docker this would be distro release (e.g. "noble" for Ubuntu 24)
          #   components: release channel, "stable" for ubuntu/docker
          #   signed_by: gpg key, accepts url or actual key
          #   state: present (default)/absent
      pacman:
        no_confirms: false
        proxy: ""
        multilib: false
        enable_aur: true # When true, attempts to install packages from AUR if not in official repos
        aur_helper: paru
        config_reflector: true
      homebrew:
        install: true 
        update_homebrew: true 
        cleanup_cache: false 
        taps: [] 
      macosx:
        updates:
          auto_check: true
          auto_download: true
        gatekeeper:
          enabled: true 
      snap:
        disable_and_remove: true
        packages:
          install: []
          remove: []
      flatpak:
        enabled: false
        packages:
          install: []
          remove: []
        flathub: true
        plugins:
          gnome: false
          plasma: false
