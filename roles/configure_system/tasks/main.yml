---
# configure_system role main tasks

- name: Configure Operating System
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.os_configuration"
  tags:
    - host-configuration
    - core

- name: Manage Security Services
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.manage_security_services"
  tags:
    - security-services
    - core

- name: Manage Users and Groups
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.manage_users"
  tags:
    - users
    - user-management
    - core

- name: Manage System Packages
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.manage_packages"
  tags:
    - packages
    - package-management
    - core

- name: Manage Snap Packages
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.manage_snap_packages"
  tags:
    - snap-packages
    - optional

- name: Manage Flatpak Packages
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.manage_flatpak"
  tags:
    - flatpak-packages
    - optional

- name: Configure User Preferences
  ansible.builtin.include_role:
    name: "wolskinet.infrastructure.configure_user"
  vars:
    target_user: "{{ item.username }}"
    current_user_config: "{{ item }}"
  loop: "{{ users | default([]) | selectattr('state', 'equalto', 'present') | list }}"
  when:
    - users is defined
    - item[ansible_distribution] is defined
  tags:
    - user-preferences
    - optional

- name: Display system configuration completion
  ansible.builtin.debug:
    msg:
      - "=== System Configuration Complete ==="
      - "Host: {{ inventory_hostname }}"
      - "Execution complete. Use tags to control which components are executed:"
      - "  Core components: --tags core"
      - "  Optional components: --tags optional"
      - "  Specific components: --tags users,packages,dotfiles"
  tags:
    - always
    - progress
