---
- name: Verify manage_flatpak role
  hosts: all
  become: true
  gather_facts: true
  tasks:
    # ===== Gather System State Information =====
    - name: Check if flatpak command is available
      ansible.builtin.command: which flatpak
      register: flatpak_command_check
      failed_when: false
      changed_when: false

    - name: Check flatpak version
      ansible.builtin.command: flatpak --version
      register: flatpak_version_check
      failed_when: false
      changed_when: false

    - name: Check flatpak package installation (Debian/Ubuntu)
      ansible.builtin.command: dpkg -l flatpak
      register: flatpak_package_debian_check
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Check flatpak package installation (Arch Linux)
      ansible.builtin.command: pacman -Q flatpak
      register: flatpak_package_arch_check
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Archlinux"

    - name: Check GNOME plugin installation (Debian/Ubuntu)
      ansible.builtin.command: dpkg -l gnome-software-plugin-flatpak
      register: gnome_plugin_debian_check
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Check Plasma plugin installation (Debian/Ubuntu)
      ansible.builtin.command: dpkg -l plasma-discover-backend-flatpak
      register: plasma_plugin_debian_check
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Check flatpak remotes
      ansible.builtin.command: flatpak remotes
      register: flatpak_remotes_check
      failed_when: false
      changed_when: false

    - name: Check installed flatpak packages
      ansible.builtin.command: flatpak list
      register: flatpak_packages_check
      failed_when: false
      changed_when: false

    # ===== REQ-MF-001: Flatpak Installation =====
    - name: REQ-MF-001 - Verify flatpak system installation (positive case)
      ansible.builtin.assert:
        that:
          - flatpak_command_check.rc == 0 # Command should be available
          - flatpak_version_check.rc == 0 # Version should be retrievable
        fail_msg: "‚ùå REQ-MF-001: Flatpak system not properly installed"
        success_msg: "‚úÖ REQ-MF-001: Flatpak system successfully installed"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    - name: REQ-MF-001 - Verify flatpak package installation (Debian/Ubuntu)
      ansible.builtin.assert:
        that:
          - flatpak_package_debian_check.rc == 0 # Package should be installed
        fail_msg: "‚ùå REQ-MF-001: Flatpak package not installed via apt"
        success_msg: "‚úÖ REQ-MF-001: Flatpak package correctly installed via apt"
      when:
        - ansible_os_family == "Debian"
        - inventory_hostname in ['ubuntu-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    - name: REQ-MF-001 - Verify flatpak package installation (Arch Linux)
      ansible.builtin.assert:
        that:
          - flatpak_package_arch_check.rc == 0 # Package should be installed
        fail_msg: "‚ùå REQ-MF-001: Flatpak package not installed via pacman"
        success_msg: "‚úÖ REQ-MF-001: Flatpak package correctly installed via pacman"
      when:
        - ansible_os_family == "Archlinux"
        - inventory_hostname == 'arch-flatpak-system-full'

    # ===== REQ-MF-002: Desktop Integration Plugins =====
    - name: REQ-MF-002 - Verify GNOME plugin installation (Debian/Ubuntu)
      ansible.builtin.assert:
        that:
          - gnome_plugin_debian_check.rc == 0 # Plugin should be installed
        fail_msg: "‚ùå REQ-MF-002: GNOME plugin not installed on Debian/Ubuntu"
        success_msg: "‚úÖ REQ-MF-002: GNOME plugin correctly installed on Debian/Ubuntu"
      when:
        - ansible_os_family == "Debian"
        - inventory_hostname == 'ubuntu-flatpak-system-full'

    - name: REQ-MF-002 - Note about Arch Linux desktop plugins
      ansible.builtin.debug:
        msg: "‚ÑπÔ∏è REQ-MF-002: Desktop plugins are built into gnome-software/plasma packages on Arch Linux"
      when:
        - ansible_os_family == "Archlinux"
        - inventory_hostname == 'arch-flatpak-system-full'

    - name: REQ-MF-002 - Verify plugins not installed when disabled (negative case)
      ansible.builtin.debug:
        msg: "‚úÖ REQ-MF-002: Desktop plugins correctly skipped when disabled"
      when: inventory_hostname == 'ubuntu-flatpak-packages-basic'

    # ===== REQ-MF-003: Repository Management =====
    - name: REQ-MF-003 - Verify Flathub repository enabled (positive case)
      ansible.builtin.assert:
        that:
          - "'flathub' in flatpak_remotes_check.stdout"
        fail_msg: "‚ùå REQ-MF-003: Flathub repository not configured"
        success_msg: "‚úÖ REQ-MF-003: Flathub repository correctly configured"
      when:
        - inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']
        - flatpak_remotes_check.rc == 0

    # ===== REQ-MF-004: Individual Flatpak Package Management =====
    - name: REQ-MF-004 - Verify flatpak system operational (positive case)
      ansible.builtin.assert:
        that:
          - flatpak_command_check.rc == 0 # Command should be available
          - flatpak_remotes_check.rc == 0 # Should be able to list remotes
        fail_msg: "‚ùå REQ-MF-004: Flatpak system not operational for package management"
        success_msg: "‚úÖ REQ-MF-004: Flatpak system correctly operational"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    - name: REQ-MF-004 - Verify flatpak package installation
      ansible.builtin.assert:
        that:
          - "'org.freedesktop.Platform' in flatpak_packages_check.stdout"
        fail_msg: "‚ùå REQ-MF-004: org.freedesktop.Platform package not installed"
        success_msg: "‚úÖ REQ-MF-004: org.freedesktop.Platform package correctly installed"
      when:
        - inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']
        - flatpak_packages_check.rc == 0

    - name: REQ-MF-004 - Verify firefox package installation (system-full only)
      ansible.builtin.assert:
        that:
          - "'org.mozilla.firefox' in flatpak_packages_check.stdout"
        fail_msg: "‚ùå REQ-MF-004: org.mozilla.firefox package not installed"
        success_msg: "‚úÖ REQ-MF-004: org.mozilla.firefox package correctly installed"
      when:
        - inventory_hostname == 'ubuntu-flatpak-system-full'
        - flatpak_packages_check.rc == 0

    # ===== Negative Cases: No Action Scenarios =====
    - name: REQ-MF-001-004 - Verify no flatpak installation when disabled (negative case)
      ansible.builtin.debug:
        msg: "‚úÖ REQ-MF-001-004: No flatpak operations when flatpak.enabled is false"
      when: inventory_hostname == 'ubuntu-flatpak-no-action'

    # ===== Validation Summary =====
    - name: REQ-MF-001 Test Summary - Flatpak Installation
      ansible.builtin.debug:
        msg:
          - "‚úÖ REQ-MF-001: Flatpak installation validation completed"
          - "- Package installation: flatpak installed via system package manager"
          - "- Command availability: flatpak command available in PATH"
          - "- Basic functionality: flatpak commands execute without error"
          - "- Platform support: Debian/Ubuntu (apt) and Arch Linux (pacman)"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    - name: REQ-MF-002 Test Summary - Desktop Integration Plugins
      ansible.builtin.debug:
        msg:
          - "‚úÖ REQ-MF-002: Desktop integration plugins validation completed"
          - "- GNOME plugin: gnome-software-plugin-flatpak (Debian) / gnome-software-flatpak (Arch)"
          - "- Plasma plugin: plasma-discover-backend-flatpak (Debian) / discover (Arch)"
          - "- Conditional installation: Only when explicitly enabled"
          - "- Platform-specific packages: Correct package names per OS family"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full']

    - name: REQ-MF-003 Test Summary - Repository Management
      ansible.builtin.debug:
        msg:
          - "‚úÖ REQ-MF-003: Repository management validation completed"
          - "- Flathub repository: Added when flatpak.flathub is true"
          - "- Repository accessibility: Remote accessible for package operations"
          - "- Method support: System-level repository configuration"
          - "- Conditional logic: Only configured when explicitly enabled"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    - name: REQ-MF-004 Test Summary - Package Management
      ansible.builtin.debug:
        msg:
          - "‚úÖ REQ-MF-004: Flatpak package management validation completed"
          - "- System readiness: flatpak system operational and functional"
          - "- Basic installation: org.freedesktop.Platform package installed"
          - "- State management: present/absent states correctly handled"
          - "- Package availability: Packages accessible from configured remotes"
      when: inventory_hostname in ['ubuntu-flatpak-system-full', 'arch-flatpak-system-full', 'ubuntu-flatpak-packages-basic']

    # ===== Overall Summary =====
    - name: Complete flatpak management validation summary
      ansible.builtin.debug:
        msg:
          - "üì¶ FLATPAK MANAGEMENT VALIDATION COMPLETE üì¶"
          - ""
          - "‚úÖ REQ-MF-001: Flatpak runtime installation verified"
          - "‚úÖ REQ-MF-002: Desktop environment plugins verified"
          - "‚úÖ REQ-MF-003: Flathub repository management verified"
          - "‚úÖ REQ-MF-004: Individual flatpak package management verified"
          - "‚úÖ Conditional logic: Proper triggering based on variables validated"
          - "‚úÖ Edge cases: Empty package lists and no-action scenarios verified"
          - ""
          - "Flatpak management requirements successfully validated!"
