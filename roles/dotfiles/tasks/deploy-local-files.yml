---
# Deploy local configuration files to remote host

- name: Backup existing dotfiles (if they exist)
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/{{ item.dest }}"
    dest: "{{ ansible_env.HOME }}/{{ item.dest }}{{ dotfiles_backup_suffix }}"
    remote_src: true
    backup: false
  loop: "{{ dotfiles_local_files }}"
  when:
    - dotfiles_backup_existing | bool
  failed_when: false  # Don't fail if source doesn't exist
  become: false
  tags:
    - dotfiles
    - backup

- name: Handle .bashrc conflicts for stow compatibility
  block:
    - name: Check if .bashrc exists and needs backup
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.bashrc"
      register: bashrc_stat

    - name: Move existing .bashrc to backup
      ansible.builtin.command:
        cmd: "mv {{ ansible_env.HOME }}/.bashrc {{ ansible_env.HOME }}/.bashrc{{ dotfiles_backup_suffix }}"
      when:
        - bashrc_stat.stat.exists
        - item.dest == ".bashrc"
      loop: "{{ dotfiles_local_files }}"
      become: false

  when:
    - dotfiles_backup_existing | bool
    - dotfiles_local_files | selectattr('dest', 'equalto', '.bashrc') | list | length > 0
  tags:
    - dotfiles
    - bashrc
    - backup

- name: Copy local configuration files to remote host
  ansible.builtin.copy:
    src: "{{ item.src | expanduser }}"
    dest: "{{ ansible_env.HOME }}/{{ item.dest }}"
    mode: "{{ item.mode | default('0644') }}"
    backup: false
  loop: "{{ dotfiles_local_files }}"
  become: false
  register: local_files_result
  tags:
    - dotfiles
    - copy

- name: Set appropriate permissions for executable files
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item.item.dest }}"
    mode: "{{ item.item.mode | default('0755') }}"
  loop: "{{ local_files_result.results }}"
  when:
    - item.item.dest | regex_search('\.(sh|bash|zsh|fish)$')
    - item.item.mode is not defined
  become: false
  tags:
    - dotfiles
    - permissions

- name: Display deployment summary for local files
  ansible.builtin.debug:
    msg:
      - "=== Local Files Deployment Summary ==="
      - "Files deployed: {{ dotfiles_local_files | length }}"
      - "Files: {{ dotfiles_local_files | map(attribute='dest') | join(', ') }}"
      - "Backup suffix: {{ dotfiles_backup_suffix if dotfiles_backup_existing else 'disabled' }}"
  tags: dotfiles
