---
# Install Python packages via pip
# Cross-platform Python package installation

- name: Install Python packages
  block:
    - name: Ensure pip is available
      ansible.builtin.command: python3 -m pip --version
      register: pip_check
      failed_when: false
      changed_when: false
      tags:
        - python
        - pip-check

    - name: Install Python packages via pip
      ansible.builtin.pip:
        name: "{{ final_pip_packages }}"
        state: present
        executable: pip3
      when: 
        - pip_check.rc == 0
        - final_pip_packages is defined
        - final_pip_packages | length > 0
      register: pip_install_result
      tags:
        - python
        - pip-packages

    - name: Display Python package installation results
      ansible.builtin.debug:
        msg:
          - "Python packages installation completed"
          - "Packages installed: {{ final_pip_packages | length }}"
          - "Installation successful: {{ pip_install_result.changed | default(false) }}"
      when: pip_check.rc == 0
      tags:
        - python
        - pip-packages
        - summary

    - name: Warn if pip is not available
      ansible.builtin.debug:
        msg: "pip3 is not available - Python packages will be skipped"
      when: pip_check.rc != 0
      tags:
        - python
        - warning

  rescue:
    - name: Handle Python package installation errors
      ansible.builtin.debug:
        msg: "Some Python packages failed to install. Continuing with other package categories."
      when: skip_failed_packages | default(true)
      tags:
        - python
        - error-handling

    - name: Fail on Python package installation errors (if not skipping)
      ansible.builtin.fail:
        msg: "Python package installation failed and skip_failed_packages is disabled"
      when: not (skip_failed_packages | default(true))
      tags:
        - python
        - error-handling

  tags:
    - extra-packages
    - python-packages