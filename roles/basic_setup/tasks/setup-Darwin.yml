---
# macOS basic setup and feature management
# Tags: packages, homebrew, xcode, security, optimization

- name: macOS Xcode Command Line Tools
  block:
    - name: Check if Xcode Command Line Tools are installed
      ansible.builtin.command: xcode-select -p
      register: xcode_check
      failed_when: false
      changed_when: false
      tags:
        - xcode
        - development

    - name: Install Xcode Command Line Tools
      ansible.builtin.command: xcode-select --install
      when: 
        - xcode_check.rc != 0
        - macos_install_xcode_tools | default(true)
      register: xcode_install
      failed_when: false
      tags:
        - xcode
        - development

    - name: Accept Xcode license
      ansible.builtin.command: xcodebuild -license accept
      become: true
      when: 
        - xcode_check.rc != 0 or xcode_install.changed
        - macos_install_xcode_tools | default(true)
      tags:
        - xcode
        - development

  tags:
    - macos
    - xcode
    - development

- name: macOS Homebrew setup
  block:
    - name: Check if Homebrew is installed
      ansible.builtin.command: which brew
      register: brew_check
      failed_when: false
      changed_when: false
      tags:
        - homebrew
        - package-management

    - name: Install Homebrew
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: brew_check.rc != 0
      environment:
        NONINTERACTIVE: "1"
      tags:
        - homebrew
        - package-management

    - name: Add Homebrew to PATH for Apple Silicon Macs
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zprofile"
        line: 'eval "$(/opt/homebrew/bin/brew shellenv)"'
        create: true
        mode: '0644'
      when: 
        - brew_check.rc != 0
        - ansible_machine == "arm64"
      tags:
        - homebrew
        - path

    - name: Add Homebrew to PATH for Intel Macs
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zprofile"
        line: 'eval "$(/usr/local/bin/brew shellenv)"'
        create: true
        mode: '0644'
      when: 
        - brew_check.rc != 0
        - ansible_machine == "x86_64"
      tags:
        - homebrew
        - path

    - name: Disable Homebrew analytics
      ansible.builtin.command: brew analytics off
      when: brew_check.rc == 0 or brew_check.rc != 0
      tags:
        - homebrew
        - privacy

  tags:
    - macos
    - homebrew

- name: Package management
  block:
    - name: Install merged Homebrew packages
      community.general.homebrew:
        name: "{{ final_homebrew_packages }}"
        state: present
      become: true
      become_user: "{{ ansible_user }}"
      when: 
        - final_homebrew_packages is defined
        - final_homebrew_packages | length > 0
      tags:
        - packages
        - homebrew
        - package-install

    - name: Install merged Homebrew casks
      community.general.homebrew_cask:
        name: "{{ final_homebrew_casks }}"
        state: present
      become: true
      become_user: "{{ ansible_user }}"
      when: 
        - final_homebrew_casks is defined
        - final_homebrew_casks | length > 0
      tags:
        - packages
        - homebrew
        - casks

    - name: Update/Upgrade all Homebrew packages
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true
      become: true
      become_user: "{{ ansible_user }}"
      when: macos_update_homebrew | default(true)
      tags:
        - packages
        - homebrew
        - updates

  tags:
    - macos
    - packages
    - homebrew

- name: macOS security and privacy settings
  block:
    - name: Close system preferences
      ansible.builtin.command: killall "System Preferences" ; sleep 1
      register: command_result
      changed_when: command_result.rc != 0
      ignore_errors: true
      become: true
      tags:
        - system-preferences

    - name: Configure Gatekeeper
      ansible.builtin.command: spctl --master-{{ 'enable' if not (macos_disable_gatekeeper | default(false)) else 'disable' }}
      become: true
      register: gatekeeper_result
      changed_when: gatekeeper_result.rc == 0
      tags:
        - security
        - gatekeeper


    - name: Disable network whitelisting for Apple-signed apps
      ansible.builtin.command: defaults -currentHost write /Library/Preferences/com.apple.alf allowsignedenabled -bool false
      become: true
      tags:
        - firewall
        - security

    - name: Disable automatic software updates (if requested)
      ansible.builtin.command: softwareupdate --schedule off
      become: true
      when: macos_disable_auto_updates | default(false)
      register: updates_result
      changed_when: updates_result.rc == 0
      tags:
        - updates
        - security

  tags:
    - macos
    - security

- name: Show hidden files in Finder
  community.general.osx_defaults:
    domain: com.apple.finder
    key: AppleShowAllFiles
    type: bool
    value: true
  when: macos_show_hidden_files | default(false)
  tags:
    - finder
    - optimization
    - macos

- name: Enable full keyboard access
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: AppleKeyboardUIMode
    type: int
    value: 3
  when: macos_enable_full_keyboard_access | default(true)
  tags:
    - keyboard
    - accessibility
    - macos

- name: Disable iCloud drive
  ansible.builtin.command: defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
  become: true
  when: macos_disable_icloud_drive | default(false)
  tags:
    - icloud
    - privacy
    - macos

- name: Enable macOS Application Firewall
  ansible.builtin.command: defaults -currentHost write /Library/Preferences/com.apple.alf globalstate -bool true
  become: true
  when: install_firewall | default(true)
  tags:
    - firewall
    - enable
    - basic-security
    - macos

- name: Enable Stealth Mode
  ansible.builtin.command: defaults write /Library/Preferences/com.apple.alf stealthenabled -bool true
  become: true
  when: install_firewall | default(true)
  tags:
    - firewall
    - stealth
    - basic-security
    - macos
  