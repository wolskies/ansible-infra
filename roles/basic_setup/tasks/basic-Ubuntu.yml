---
# Ubuntu basic setup and feature management
# Tags: sudo, packages, updates, snap, cloud-init, firewall, security

- name: System security configuration
  block:
    - name: Allow passwordless sudo for the user (Ubuntu)
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^{{ ansible_user }}'
        line: '{{ ansible_user}} ALL=(ALL) NOPASSWD:ALL'
        validate: '/usr/sbin/visudo -cf %s'
        backup: true
      become: true
      tags:
        - sudo
        - security
        - user-config

  rescue:
    - name: Handle sudo configuration errors
      ansible.builtin.debug:
        msg: "Failed to configure sudo access for {{ ansible_user }}"
      tags:
        - debug
        - sudo
        - error-handling

  tags:
    - sudo
    - security
    - ubuntu

- name: Package management
  block:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      become: true
      tags:
        - packages
        - updates
        - cache

    - name: Install merged package list
      ansible.builtin.package:
        name: "{{ final_packages_install }}"
        state: present
      become: true
      when: 
        - final_packages_install is defined
        - final_packages_install | length > 0
      tags:
        - packages
        - package-install
        - merged-packages

    - name: Remove unwanted packages
      ansible.builtin.package:
        name: "{{ final_packages_remove }}"
        state: absent
        purge: true
      become: true
      when: 
        - final_packages_remove is defined
        - final_packages_remove | length > 0
      tags:
        - packages
        - package-remove
        - cleanup

  rescue:
    - name: Handle package management errors
      ansible.builtin.debug:
        msg: "Package management encountered errors, check logs for details"
      tags:
        - debug
        - packages
        - error-handling

  tags:
    - packages
    - ubuntu

- name: System updates
  block:
    - name: Perform system upgrade
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        autoremove: true
        autoclean: true
      become: true
      register: upgrade_result
      tags:
        - updates
        - upgrade
        - maintenance

    - name: Display upgrade results
      ansible.builtin.debug:
        msg:
          - "System upgrade completed"
          - "Packages upgraded: {{ upgrade_result.changed }}"
      when: upgrade_result is defined
      tags:
        - updates
        - debug
        - summary

  rescue:
    - name: Handle system upgrade errors
      ansible.builtin.debug:
        msg: "System upgrade failed, manual intervention may be required"
      tags:
        - debug
        - updates
        - error-handling

  when: enable_system_updates | default(true)
  tags:
    - updates
    - ubuntu

- name: Ubuntu snap management
  block:
    - name: Check if snapd is installed
      ansible.builtin.package_facts:
        manager: apt
      tags:
        - snap
        - feature-management

    - name: Stop snapd services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - snapd.service
        - snapd.socket
        - snapd.seeded.service
      become: true
      when: 
        - ubuntu_disable_snap | default(true)
        - "'snapd' in ansible_facts.packages"
      ignore_errors: true
      tags:
        - snap
        - feature-management

    - name: Remove snap packages
      ansible.builtin.command: snap remove {{ item }}
      loop:
        - lxd
        - core20
        - snapd
      become: true
      when: 
        - ubuntu_disable_snap | default(true)
        - "'snapd' in ansible_facts.packages"
      ignore_errors: true
      register: snap_removal
      changed_when: snap_removal.rc == 0
      tags:
        - snap
        - feature-management

    - name: Remove snapd package
      ansible.builtin.apt:
        name: snapd
        state: absent
        purge: true
      become: true
      when: 
        - ubuntu_disable_snap | default(true)
        - "'snapd' in ansible_facts.packages"
      tags:
        - snap
        - feature-management

    - name: Remove snap directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /snap
        - /var/snap
        - /var/lib/snapd
        - /var/cache/snapd
        - /usr/lib/snapd
      become: true
      when: ubuntu_disable_snap | default(true)
      tags:
        - snap
        - feature-management

    - name: Prevent snapd reinstallation
      ansible.builtin.copy:
        content: |
          Package: snapd
          Pin: release a=*
          Pin-Priority: -10
        dest: /etc/apt/preferences.d/nosnap.pref
        mode: '0644'
      become: true
      when: ubuntu_disable_snap | default(true)
      tags:
        - snap
        - feature-management

  tags:
    - ubuntu
    - snap
    - feature-management

- name: Ubuntu cloud-init management
  block:
    - name: Disable cloud-init
      ansible.builtin.file:
        path: /etc/cloud/cloud-init.disabled
        state: touch
        mode: '0644'
      become: true
      when: ubuntu_disable_cloud_init | default(false)
      tags:
        - cloud-init
        - feature-management

    - name: Stop cloud-init services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - cloud-init.service
        - cloud-config.service
        - cloud-final.service
        - cloud-init-local.service
      become: true
      when: ubuntu_disable_cloud_init | default(false)
      ignore_errors: true
      tags:
        - cloud-init
        - feature-management

  tags:
    - ubuntu
    - cloud-init
    - feature-management

- name: Basic firewall setup
  block:
    - name: Install UFW firewall
      ansible.builtin.package:
        name: ufw
        state: present
      become: true
      tags:
        - firewall
        - install

    - name: Allow SSH through firewall
      community.general.ufw:
        rule: allow
        name: OpenSSH
        comment: "Allow SSH access - managed by basic_setup"
      become: true
      tags:
        - firewall
        - ssh
        - basic

    - name: Enable UFW firewall with default deny policy
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming
      become: true
      tags:
        - firewall
        - enable
        - security

  rescue:
    - name: Handle basic firewall setup errors
      ansible.builtin.debug:
        msg: "Basic firewall setup failed - SSH access may be blocked"
      tags:
        - debug
        - firewall
        - error-handling

  when: install_firewall | default(true)
  tags:
    - firewall
    - basic-security
    - ubuntu