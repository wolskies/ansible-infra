---
# Leverage Ansible's natural variable precedence for configuration
# Variables automatically follow precedence: role defaults < inventory group_vars < inventory host_vars < play vars
# We just need to handle list merging and deduplication

- name: Process package installation lists
  ansible.builtin.set_fact:
    final_packages_install: "{{ (packages_install | default([])) | unique }}"
    final_packages_remove: "{{ (packages_remove | default([])) | unique }}"

- name: Process macOS Homebrew package lists
  ansible.builtin.set_fact:
    final_homebrew_packages: "{{ (homebrew_packages | default([])) | unique }}"
    final_homebrew_casks: "{{ (homebrew_casks | default([])) | unique }}"
  when: ansible_os_family == 'Darwin'

- name: Process development packages by category
  ansible.builtin.set_fact:
    final_development_packages: "{{ (development_packages | default([])) | unique }}"
    final_desktop_packages: "{{ (desktop_packages | default([])) | unique }}"
    final_media_packages: "{{ (media_packages | default([])) | unique }}"
    final_system_packages: "{{ (system_packages | default([])) | unique }}"

- name: Process language-specific packages
  ansible.builtin.set_fact:
    final_pip_packages: "{{ (pip_packages | default([])) | unique }}"
    final_npm_packages: "{{ (npm_packages | default([])) | unique }}"
    final_aur_packages: "{{ (aur_packages | default([])) | unique }}"

- name: Process service configuration lists
  ansible.builtin.set_fact:
    final_services_enable: "{{ (services_enable | default([])) | unique }}"
    final_services_disable: "{{ (services_disable | default([])) | unique }}"

- name: Process role installation lists  
  ansible.builtin.set_fact:
    final_roles_install: "{{ (roles_install | default([])) | unique }}"

- name: Apply package exclusions
  ansible.builtin.set_fact:
    final_packages_install: "{{ final_packages_install | difference(final_packages_remove) }}"
    final_services_enable: "{{ final_services_enable | difference(final_services_disable) }}"