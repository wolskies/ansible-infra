---
# tasks file for basic_setup
# This role provides the foundation for all machine types including:
# - Essential packages
# - Additional packages by category
# - User management
# - System configuration

- name: Validate supported OS versions
  ansible.builtin.fail:
    msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} is not supported. Supported versions: Ubuntu 24+, Debian 12+, Arch Linux (latest), macOS (latest)"
  when:
    - (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int < 24) or
      (ansible_distribution == "Debian" and ansible_distribution_major_version | int < 12)
  tags:
    - always
    - validation
    - os-check
    - basic-setup

- name: Load OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_distribution }}.yml"
  tags:
    - always
    - variables
    - config
    - os-vars
    - basic-setup

- name: Merge hierarchical variables
  ansible.builtin.include_tasks: merge-variables.yml
  tags:
    - always
    - variables
    - merge
    - basic-setup

- name: Include OS-specific setup tasks
  ansible.builtin.include_tasks: "setup-{{ ansible_distribution }}.yml"
  tags:
    - always
    - os-setup
    - security
    - system-config
    - basic-setup

- name: Add users to system (Linux only) - from discovered configuration
  become: true
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid }}"
    shell: "{{ item.default_user_shell | default(item.shell | default('/bin/bash')) }}"
    password: "{{ item.password | default('*') }}"
    state: present
    create_home: true
    groups: "{{ item.groups | default([]) }}"
  loop: "{{ discovered_users_config | default([]) }}"
  when:
    - discovered_users_config is defined
    - discovered_users_config | length > 0
    - ansible_distribution != 'MacOSX'
  tags:
    - users
    - user-creation
    - security
    - basic-setup

- name: Deploy dotfiles for configured users
  ansible.builtin.include_role:
    name: wolskinet.infrastructure.dotfiles
  vars:
    dotfiles_user: "{{ item.name }}"
    dotfiles_repository_url: "{{ item.dotfiles_repository_url }}"
    dotfiles_uses_stow: "{{ item.dotfiles_uses_stow | default(true) }}"
    dotfiles_stow_packages: "{{ item.dotfiles_stow_packages | default([]) }}"
  loop: "{{ discovered_users_config | selectattr('dotfiles_repository_url', 'defined') }}"
  when:
    - install_dotfiles_support | default(false)
    - discovered_users_config is defined
    - discovered_users_config | length > 0
    - ansible_distribution != 'MacOSX'
  tags:
    - dotfiles
    - user-config
    - basic-setup
