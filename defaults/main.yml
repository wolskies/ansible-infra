---
# =============================================================================
# WOLSKIES.INFRASTRUCTURE COLLECTION - MASTER VARIABLE REFERENCE
# =============================================================================
# This file serves as both collection-wide defaults AND the complete variable
# reference for the entire collection. All possible variables are documented
# here with their default values and descriptions.
#
# Usage:
# - Collection defaults: These values are used across all roles
# - Variable reference: Use this file to see all available variables
# - Individual role defaults only contain role-specific overrides
#
# Variable precedence: playbook vars > role vars > role defaults > collection defaults
# =============================================================================

# Domain-level configuration
domain_name: ""
domain_timezone: ""
domain_locale: "en_US.UTF-8"
domain_language: "en_US.UTF-8"
domain_ntp:
  enabled: false
  servers: []

# Host-level configuration
host_hostname: ""
host_update_hosts: true
host_services: {}
host_sysctl:
  parameters: {}
  # Example:
  # parameters:
  #   net.ipv4.ip_forward: 1
  #   vm.swappiness: 10
  #   fs.file-max: 65536
host_modules: {}
host_udev: {}
  # Example:
  # rules:
  #   - name: pico-usb
  #     content: 'SUBSYSTEM=="usb", ATTRS{idVendor}=="2e8a", ATTRS{idProduct}=="000c", MODE="0666"'
  #     priority: 99
  #     state: present
  #   - name: dialout-tty
  #     content: 'KERNEL=="ttyACM[0-9]*", GROUP="dialout", MODE="0660"'
  #     priority: 99
  #     state: present
host_security:
  hardening_enabled: true
  disable_ctrl_alt_del: false
  users_allow: []
  remove_additional_root_users: false
  enforce_password_aging: true
  ssh_hardening_enabled: false
  ssh_server_ports: ["22"]
  ssh_client_port: "22"
  ssh_listen_to: ["0.0.0.0"]
  sftp_enabled: true

# System logging
journal:
  configure: false
  max_size: "500M"
  max_retention: "30d"
  forward_to_syslog: false
  compress: true

rsyslog:
  enabled: false
  remote_host: ""
  remote_port: 514
  protocol: "udp"

# Package manager configuration
apt:
  no_recommends: false
  proxy: ""
  unattended_upgrades:
    enabled: false
  system_upgrade:
    enable: false
    type: "safe"
  repositories: {}
  # Example:
  # repositories:
  #   docker:
  #     name: docker
  #     types: [deb]
  #     uris: "https://download.docker.com/linux/ubuntu"
  #     suites: ["{{ ansible_distribution_release }}"]
  #     components: [stable]
  #     signed_by: "https://download.docker.com/linux/ubuntu/gpg"

pacman:
  no_confirm: false
  proxy: ""
  multilib:
    enabled: false
  enable_aur: false

# macOS specific
macosx:
  updates:
    auto_check: true
    auto_download: true
  gatekeeper:
    enabled: true
  system_preferences:
    natural_scroll: true
    measurement_units: "Inches"
    use_metric: false
    show_all_extensions: false
  airdrop:
    ethernet_enabled: false

# Docker services configuration
docker_services_root: "/srv/docker"
service_name: ""
service_enabled: true
service_env_vars: {}
compose_file_content: ""
service_image: ""
service_volumes: []
service_command: ""
service_environment: []
service_use_proxy: false
proxy_network_name: "proxy"
proxy_network_external: true
service_ports: []
service_labels: {}

# Package management
packages:
  present: {}
  # Example:
  # present:
  #   all:
  #     Ubuntu: [curl, git, vim]
  #     Debian: [curl, git, vim]
  #     Archlinux: [curl, git, neovim]
  #     MacOSX: [curl, git]
  #   group:
  #     Ubuntu: [docker.io, nginx]
  #     Archlinux: [docker, nginx]
  #   host:
  #     Ubuntu: [postgresql, redis]
  remove: {}
  # Example:
  # remove:
  #   all:
  #     Ubuntu: [snapd, whoopsie]
  casks_present:
    all: []
    group: []
    host: []
  # Example:
  # casks_present:
  #   all: [firefox, visual-studio-code]
  #   group: [docker, postman]
  #   host: [slack, spotify]
  casks_remove: []

homebrew:
  cleanup_cache: true
  taps: []

# User management
users: []
# Example:
# users:
#   - name: developer
#     comment: "Development User"
#     groups: [docker, sudo]
#     shell: /bin/bash
#     state: present
#     superuser: true                    # Grant sudo/wheel/admin access
#     superuser_passwordless: false      # Enable passwordless sudo
#     ssh_keys:
#       - key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI... user@host"
#         comment: "developer@workstation"
#         state: present
#     # Language toolchains and development tools
#     nodejs:
#       packages: [eslint, prettier, typescript]
#     rust:
#       packages: [cargo-watch, ripgrep]
#     go:
#       packages: [github.com/golangci/golangci-lint/cmd/golangci-lint]
#     neovim:
#       enabled: true
#     # Terminal emulator configuration
#     terminal_entries: [alacritty, kitty]
#     # Dotfiles and shell configuration
#     dotfiles:
#       enable: true
#       repository: ""
#       dest: ""
#   - name: deploy
#     comment: "Deployment User"
#     groups: [docker]
#     shell: /bin/bash
#     state: present
users_absent: []
# Example: users_absent: [olduser, tempuser]

# Language toolchains
node_user: ""
node_packages: []
nodejs_version: "20"
nodejs_update_cache: true

rust_user: ""
rust_packages: []

go_user: ""
go_packages: []

# System optimization
optimizations:
  tune_swappiness: false
  swappiness: 60

# Security services
firewall:
  enabled: false
  prevent_ssh_lockout: true
  package: "ufw"
  stealth_mode: false
  block_all: false
  logging: false
  rules:
    - rule: allow
      port: 22
      proto: tcp
      comment: "SSH access (prevent lockout)"
  # Additional rules can be added:
  # rules:
  #   - rule: allow
  #     port: 22
  #     proto: tcp
  #   - rule: allow
  #     port: 80,443
  #     proto: tcp
  #   - rule: allow
  #     from_ip: 192.168.1.0/24
  #     port: 3000
  #     proto: tcp

fail2ban:
  enabled: false
  sender: "root@localhost"
  dest_email: ""
  defaults:
    bantime: 3600
    findtime: 600
    maxretry: 5
  services:
    - name: sshd
      enabled: true
      maxretry: 5
      bantime: 3600
      findtime: 600
      logpath: /var/log/auth.log
  ignoreips:
    - "127.0.0.1/8"
    - "::1"

# Snap configuration
snap:
  remove_completely: false
  packages:
    install: []
    remove: []

# Flatpak configuration
flatpak:
  enabled: false
  remotes: []
  packages:
    install: []
    remove: []
