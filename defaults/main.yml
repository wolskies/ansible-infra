---
domain_name: ""
domain_timezone: ""
domain_locale: "en_US.UTF-8"
domain_language: "en_US.UTF-8"
# Time synchronization via systemd-timesyncd
domain_timesync:
  enabled: true
  servers: []
host_hostname: ""
host_update_hosts: true
# Names of services to be passed to ansible.builtin.systemd_service to enable/disable/mask
host_services:
  enable: []
  disable: []
  mask: []
# Linux kernel modules to load/blacklist
host_modules:
  load: []
  blacklist: []
host_udev_rules: []
# Example:
# host_udev_rules:
#   - name: pico-usb
#     content: 'SUBSYSTEM=="usb", ATTRS{idVendor}=="2e8a", ATTRS{idProduct}=="000c", MODE="0666"'
#     priority: 99
#     state: present
#   - name: dialout-tty
#     content: 'KERNEL=="ttyACM[0-9]*", GROUP="dialout", MODE="0660"'
#     priority: 99
#     state: present
hardening:
  # Triggers devsec.hardening.os_hardening role (Linux only)
  # All devsec.hardening.os_hardening variables can be set directly
  # See: https://github.com/dev-sec/ansible-collection-hardening/tree/master/roles/os_hardening
  os_hardening_enabled: false
  # Example devsec.hardening.os_hardening variables:
  # os_auth_pw_max_age: 90                    # Password expiration (days)
  # os_auth_pw_min_age: 7                     # Minimum password age (days)
  # os_users_without_password_ageing: []      # Users exempt from password aging
  # os_ctrlaltdel_disabled: false             # Disable Ctrl+Alt+Del reboot
  # os_security_users_allow: []               # Users with special privileges
  # os_remove_additional_root_users: false    # Remove duplicate UID=0 accounts
  # sysctl_overwrite:                         # Override/add sysctl parameters
  #   vm.swappiness: 10                       # Swappiness (default: not set)
  #   net.ipv4.ip_forward: 1                  # Enable IP forwarding (for Docker/K8s)
  #   fs.file-max: 65536                      # Max open files
  # SSH hardening via devsec.hardening.ssh_hardening (Linux only)
  # All devsec.hardening.ssh_hardening variables can be set directly
  # See: https://github.com/dev-sec/ansible-collection-hardening/tree/master/roles/ssh_hardening
  ssh_hardening_enabled: false
  # Example devsec.hardening.ssh_hardening variables:
  # ssh_server_ports: ["22"]
  # ssh_client_port: "22"
  # ssh_listen_to: ["0.0.0.0"]
  # sftp_enabled: true
journal:
  configure: false
  max_size: "500M"
  max_retention: "30d"
  forward_to_syslog: false
  compress: true
rsyslog:
  enabled: false
  remote_host: ""
  remote_port: 514
  protocol: "udp"
apt:
  proxy: ""
  no_recommends: false
  unattended_upgrades:
    enabled: false
  system_upgrade:
    enable: false
    type: "safe"
apt_repositories_all: {}
apt_repositories_group: {}
apt_repositories_host: {}
# Example:
# apt_repositories_host:
#   Ubuntu:
#     - name: docker
#       types: [deb]
#       uris: "https://download.docker.com/linux/ubuntu"
#       suites: "{{ ansible_distribution_release }}"
#       components: "stable"
#       signed_by: "https://download.docker.com/linux/ubuntu/gpg"
#     - name: nodejs
#       uris: "https://deb.nodesource.com/node_20.x"
#       suites: "nodistro"
#       components: "main"
#       signed_by: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
#   Debian:
#     - name: docker
#       types: [deb]
#       uris: "https://download.docker.com/linux/debian"
#       suites: "{{ ansible_distribution_release }}"
#       components: "stable"
#       signed_by: "https://download.docker.com/linux/debian/gpg"
pacman:
  proxy: ""
  no_confirm: false
  multilib:
    enabled: false
  enable_aur: true
macosx:
  updates:
    auto_check: true
    auto_download: true
  gatekeeper:
    enabled: true
  system_preferences:
    natural_scroll: true
    measurement_units: "Inches"
    use_metric: false
    show_all_extensions: false
  airdrop:
    ethernet_enabled: false
homebrew:
  cleanup_cache: true
  taps: []
packages:
  present: {}
  # Example:
  # present:
  #   all:
  #     Ubuntu: [curl, git, vim]
  #     Debian: [curl, git, vim]
  #     Archlinux: [curl, git, neovim]
  #     MacOSX: [curl, git]
  #   group:
  #     Ubuntu: [docker.io, nginx]
  #     Archlinux: [docker, nginx]
  #   host:
  #     Ubuntu: [postgresql, redis]
  remove: {}
  # Example:
  # remove:
  #   all:
  #     Ubuntu: [snapd, whoopsie]
  casks_present:
    all: []
    group: []
    host: []
  # Example:
  # casks_present:
  #   all: [firefox, visual-studio-code]
  #   group: [docker, postman]
  #   host: [slack, spotify]
  casks_remove: []
snap:
  remove_completely: false
  packages:
    install: []
    remove: []
flatpak:
  enabled: false
  remotes: []
  packages:
    install: []
    remove: []
users: []
# Example:
# users:
#   - name: developer               # Must be an existing user
#     shell: /bin/bash              # Optional: Set user shell (Linux only)
#     git:                          # Optional: Git configuration
#       user_name: "John Doe"
#       user_email: "john@example.com"
#       editor: "nvim"
#     nodejs:                       # Optional: Node.js packages
#       packages: [eslint, prettier, typescript]
#     rust:                         # Optional: Rust packages
#       packages: [cargo-watch, ripgrep]
#     go:                           # Optional: Go packages
#       packages: [github.com/golangci/golangci-lint/cmd/golangci-lint]
#     neovim:                       # Optional: Neovim installation
#       enabled: true
#     terminal_entries: [alacritty, kitty]  # Optional: Terminal emulator configs
#     dotfiles:                     # Optional: Dotfiles repository
#       enable: true
#       repository: "https://github.com/user/dotfiles.git"
#       dest: ".dotfiles"
#       branch: "main"
firewall:
  enabled: false
  prevent_ssh_lockout: true
  package: "ufw"
  stealth_mode: false
  block_all: false
  logging: false
  rules: []
  # SSH is automatically allowed when prevent_ssh_lockout is true
  # Additional rules can be added:
  # rules:
  #   - rule: allow
  #     port: 22
  #     proto: tcp
  #   - rule: allow
  #     port: 80,443
  #     proto: tcp
  #   - rule: allow
  #     from_ip: 192.168.1.0/24
  #     port: 3000
  #     proto: tcp
fail2ban:
  enabled: false
  sender: "root@localhost"
  dest_email: ""
  defaults:
    bantime: 3600
    findtime: 600
    maxretry: 5
  services:
    - name: sshd
      enabled: true
      maxretry: 5
      bantime: 3600
      findtime: 600
      logpath: /var/log/auth.log
  ignoreips:
    - "127.0.0.1/8"
    - "::1"
