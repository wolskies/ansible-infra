---
# Test playbook for various hostname configuration scenarios
# Usage: ansible-playbook test-hostname-scenarios.yml -i localhost, -c local --ask-become-pass

- name: Test hostname configuration scenarios
  hosts: localhost
  gather_facts: true
  tasks:
    - name: "Scenario 1: Both hostname and domain defined"
      block:
        - name: Test with both hostname and domain
          ansible.builtin.include_role:
            name: wolskies.infrastructure.configure_host
          vars:
            config_hostname: "test-host"
            config_domain: "test.local"
            config_update_hosts: true

        - name: Expected result for scenario 1
          ansible.builtin.debug:
            msg:
              - "EXPECTED:"
              - "  Hostname: test-host"
              - "  FQDN: test-host.test.local"
              - "  /etc/hosts: 127.0.1.1 test-host.test.local test-host"
      tags: scenario1

    - name: "Scenario 2: Only domain defined (keep current hostname)"
      block:
        - name: Test with only domain defined
          ansible.builtin.include_role:
            name: wolskies.infrastructure.configure_host
          vars:
            config_hostname: "" # Empty - use current hostname
            config_domain: "production.example.com"
            config_update_hosts: true

        - name: Expected result for scenario 2
          ansible.builtin.debug:
            msg:
              - "EXPECTED:"
              - "  Hostname: {{ ansible_hostname }} (unchanged)"
              - "  FQDN: {{ ansible_hostname }}.production.example.com"
              - "  /etc/hosts: 127.0.1.1 {{ ansible_hostname }}.production.example.com {{ ansible_hostname }}"
      tags: scenario2

    - name: "Scenario 3: Only hostname defined (use default domain)"
      block:
        - name: Test with only hostname defined
          ansible.builtin.include_role:
            name: wolskies.infrastructure.configure_host
          vars:
            config_hostname: "new-server"
            config_domain: "" # Empty - use default 'localdomain'
            config_update_hosts: true

        - name: Expected result for scenario 3
          ansible.builtin.debug:
            msg:
              - "EXPECTED:"
              - "  Hostname: new-server"
              - "  FQDN: new-server.localdomain"
              - "  /etc/hosts: 127.0.1.1 new-server.localdomain new-server"
      tags: scenario3

    - name: "Scenario 4: Neither hostname nor domain defined (no changes)"
      block:
        - name: Test with neither defined
          ansible.builtin.include_role:
            name: wolskies.infrastructure.configure_host
          vars:
            config_hostname: ""
            config_domain: ""
            config_update_hosts: true

        - name: Expected result for scenario 4
          ansible.builtin.debug:
            msg:
              - "EXPECTED:"
              - "  No changes should be made"
              - "  Hostname tasks should be skipped"
      tags: scenario4

    - name: Check final /etc/hosts content
      ansible.builtin.command: grep -E "127.0.[01].1" /etc/hosts
      register: hosts_check
      changed_when: false
      failed_when: false

    - name: Display final /etc/hosts entries
      ansible.builtin.debug:
        msg:
          - "Final /etc/hosts entries:"
          - "{{ hosts_check.stdout_lines }}"
